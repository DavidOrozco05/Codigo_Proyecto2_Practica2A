

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Mar 15 12:46:48 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og9 
     1                           	processor	18F46K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1
    50                           	psect	text39,global,reloc=2,class=CODE,delta=1
    51                           	psect	text40,global,reloc=2,class=CODE,delta=1
    52                           	psect	text41,global,reloc=2,class=CODE,delta=1
    53                           	psect	text42,global,reloc=2,class=CODE,delta=1
    54                           	psect	text43,global,reloc=2,class=CODE,delta=1
    55                           	psect	text44,global,reloc=2,class=CODE,delta=1
    56                           	psect	text45,global,reloc=2,class=CODE,delta=1
    57                           	psect	text46,global,reloc=2,class=CODE,delta=1
    58                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
    59                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1
    61                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    62                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    63                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    64   000000                     
    65                           ; Generated 06/04/2022 GMT
    66                           ; 
    67                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    68                           ; All rights reserved.
    69                           ; 
    70                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    71                           ; 
    72                           ; Redistribution and use in source and binary forms, with or without modification, are
    73                           ; permitted provided that the following conditions are met:
    74                           ; 
    75                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    76                           ;        conditions and the following disclaimer.
    77                           ; 
    78                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    79                           ;        of conditions and the following disclaimer in the documentation and/or other
    80                           ;        materials provided with the distribution. Publication is not required when
    81                           ;        this file is used in an embedded application.
    82                           ; 
    83                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    84                           ;        software without specific prior written permission.
    85                           ; 
    86                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    87                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    88                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    89                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    90                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    91                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    92                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    93                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    94                           ; 
    95                           ; 
    96                           ; Code-generator required, PIC18F46K42 Definitions
    97                           ; 
    98                           ; SFR Addresses
    99   000000                     
   100                           	psect	smallconst
   101   001000                     __psmallconst:
   102                           	callstack 0
   103   001000  00                 	db	0
   104   001001  02                 	db	2
   105   001002  40                 	db	64
   106   001003  00                 	db	0
   107   001004  00                 	db	0
   108   001005  00                 	db	0
   109   001006                     __end_of_spi1_configuration:
   110                           	callstack 0
   111   000000                     _PIR3bits	set	14755
   112   000000                     _ADERRL	set	16098
   113   000000                     _ADERRH	set	16099
   114   000000                     _ADPREVL	set	16109
   115   000000                     _ADPREVH	set	16110
   116   000000                     _ADFLTRL	set	16102
   117   000000                     _ADFLTRH	set	16103
   118   000000                     _ADACCL	set	16104
   119   000000                     _ADACCH	set	16105
   120   000000                     _ADCNT	set	16107
   121   000000                     _ADRESL	set	16111
   122   000000                     _ADRESH	set	16112
   123   000000                     _ADCON0	set	16120
   124   000000                     _ADCON1	set	16121
   125   000000                     _ADPREH	set	16119
   126   000000                     _ADPREL	set	16118
   127   000000                     _ADCAP	set	16117
   128   000000                     _ADACQH	set	16116
   129   000000                     _ADPCH	set	16113
   130   000000                     _ADRPT	set	16108
   131   000000                     _ADACCU	set	16106
   132   000000                     _ADSTPTH	set	16101
   133   000000                     _ADSTPTL	set	16100
   134   000000                     _ADUTHH	set	16097
   135   000000                     _ADUTHL	set	16096
   136   000000                     _ADLTHH	set	16095
   137   000000                     _T2CON	set	16300
   138   000000                     _TRISD	set	16325
   139   000000                     _TRISC	set	16324
   140   000000                     _TRISB	set	16323
   141   000000                     _LATC	set	16316
   142   000000                     _LATB	set	16315
   143   000000                     _OSCTUNE	set	14814
   144   000000                     _OSCFRQ	set	14815
   145   000000                     _OSCEN	set	14813
   146   000000                     _PLLR	set	118496
   147   000000                     _U1ERRIRbits	set	15865
   148   000000                     _ADCON0bits	set	16120
   149   000000                     _LATDbits	set	16317
   150   000000                     _TRISCbits	set	16324
   151   000000                     _PIE3bits	set	14739
   152   000000                     _PIR2bits	set	14754
   153   000000                     _PIR4bits	set	14756
   154   000000                     _PMD0	set	14784
   155   000000                     _OSCCON1	set	14809
   156   000000                     _OSCCON3	set	14811
   157   000000                     _RC3PPS	set	14867
   158   000000                     _ANSELA	set	14912
   159   000000                     _ANSELB	set	14928
   160   000000                     _ANSELC	set	14944
   161   000000                     _ANSELD	set	14960
   162   000000                     _LATA	set	16314
   163   000000                     _LATD	set	16317
   164   000000                     _LATE	set	16318
   165   000000                     _PMD7	set	14791
   166   000000                     _PMD6	set	14790
   167   000000                     _PMD5	set	14789
   168   000000                     _PMD4	set	14788
   169   000000                     _PMD3	set	14787
   170   000000                     _PMD2	set	14786
   171   000000                     _PMD1	set	14785
   172   000000                     _TRISA	set	16322
   173   000000                     _TRISE	set	16326
   174   000000                     _INTCON0bits	set	16338
   175   000000                     _INLVLD	set	14964
   176   000000                     _SLRCOND	set	14963
   177   000000                     _ODCOND	set	14962
   178   000000                     _RD0I2C	set	14970
   179   000000                     _WPUD	set	14961
   180   000000                     _ANSELE	set	14976
   181   000000                     _INLVLC	set	14948
   182   000000                     _SLRCONC	set	14947
   183   000000                     _ODCONC	set	14946
   184   000000                     _RC3I2C	set	14954
   185   000000                     _WPUC	set	14945
   186   000000                     _INLVLB	set	14932
   187   000000                     _SLRCONB	set	14931
   188   000000                     _ODCONB	set	14930
   189   000000                     _RB1I2C	set	14938
   190   000000                     _WPUB	set	14929
   191   000000                     _SPI1SCKPPS	set	15070
   192   000000                     _INLVLE	set	14980
   193   000000                     _SLRCONE	set	14979
   194   000000                     _ODCONE	set	14978
   195   000000                     _WPUE	set	14977
   196   000000                     _INLVLA	set	14916
   197   000000                     _SLRCONA	set	14915
   198   000000                     _ODCONA	set	14914
   199   000000                     _WPUA	set	14913
   200   000000                     _RB2I2C	set	14939
   201   000000                     _RC4I2C	set	14955
   202   000000                     _RD1I2C	set	14971
   203   000000                     _SPI1SDIPPS	set	15071
   204   000000                     _U1RXPPS	set	15077
   205   000000                     _RC5PPS	set	14869
   206   000000                     _RC6PPS	set	14870
   207   000000                     _SPI1RXB	set	15632
   208   000000                     _SPI1TXB	set	15633
   209   000000                     _SPI1TCNTL	set	15634
   210   000000                     _SPI1CON0	set	15636
   211   000000                     _T2TMR	set	16298
   212   000000                     _T2PR	set	16299
   213   000000                     _T2HLT	set	16301
   214   000000                     _T2CLKCON	set	16302
   215   000000                     _T2RST	set	16303
   216   000000                     _SPI1BAUD	set	15641
   217   000000                     _SPI1CLK	set	15644
   218   000000                     _SPI1CON2	set	15638
   219   000000                     _SPI1CON1	set	15637
   220   000000                     _U1RXB	set	15848
   221   000000                     _U1TXB	set	15850
   222   000000                     _U1P1L	set	15852
   223   000000                     _FVRCON	set	16065
   224   000000                     _ADLTHL	set	16094
   225   000000                     _ADACQL	set	16115
   226   000000                     _ADCLK	set	16127
   227   000000                     _ADACT	set	16126
   228   000000                     _ADREF	set	16125
   229   000000                     _ADSTAT	set	16124
   230   000000                     _ADCON3	set	16123
   231   000000                     _ADCON2	set	16122
   232   000000                     _U1ERRIE	set	15866
   233   000000                     _U1ERRIR	set	15865
   234   000000                     _U1UIR	set	15864
   235   000000                     _U1FIFO	set	15863
   236   000000                     _U1BRGH	set	15862
   237   000000                     _U1BRGL	set	15861
   238   000000                     _U1CON2	set	15860
   239   000000                     _U1CON1	set	15859
   240   000000                     _U1CON0	set	15858
   241   000000                     _U1P3H	set	15857
   242   000000                     _U1P3L	set	15856
   243   000000                     _U1P2H	set	15855
   244   000000                     _U1P2L	set	15854
   245   000000                     _U1P1H	set	15853
   246   001006  00                 	db	0	; dummy byte at the end
   247   000000                     
   248                           ; #config settings
   249                           
   250                           	psect	cinit
   251   001978                     __pcinit:
   252                           	callstack 0
   253   001978                     start_initialization:
   254                           	callstack 0
   255   001978                     __initialization:
   256                           	callstack 0
   257                           
   258                           ; Clear objects allocated to BANK0 (30 bytes)
   259   001978  EE00  F093         	lfsr	0,__pbssBANK0
   260   00197C  0E1E               	movlw	30
   261   00197E                     clear_0:
   262   00197E  6AEE               	clrf	postinc0,c
   263   001980  06E8               	decf	wreg,f,c
   264   001982  E1FD               	bnz	clear_0
   265                           
   266                           ; Clear objects allocated to COMRAM (19 bytes)
   267   001984  EE00  F019         	lfsr	0,__pbssCOMRAM
   268   001988  0E13               	movlw	19
   269   00198A                     clear_1:
   270   00198A  6AEE               	clrf	postinc0,c
   271   00198C  06E8               	decf	wreg,f,c
   272   00198E  E1FD               	bnz	clear_1
   273                           
   274                           ;
   275                           ; Setup IVTBASE
   276                           ;
   277   001990  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   278   001992  6ED5               	movwf	213,c
   279   001994  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   280   001996  6ED6               	movwf	214,c
   281   001998  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   282   00199A  6ED7               	movwf	215,c
   283   00199C                     end_of_initialization:
   284                           	callstack 0
   285   00199C                     __end_of__initialization:
   286                           	callstack 0
   287   00199C  0100               	movlb	0
   288   00199E  EF04  F008         	goto	_main	;jump to C main() function
   289                           
   290                           	psect	bssCOMRAM
   291   000019                     __pbssCOMRAM:
   292                           	callstack 0
   293   000019                     _segundoresultado:
   294                           	callstack 0
   295   000019                     	ds	2
   296   00001B                     _primerresultado:
   297                           	callstack 0
   298   00001B                     	ds	2
   299   00001D                     _UART1_TxInterruptHandler:
   300                           	callstack 0
   301   00001D                     	ds	2
   302   00001F                     _UART1_RxInterruptHandler:
   303                           	callstack 0
   304   00001F                     	ds	2
   305   000021                     _bandera_ADC2_finish:
   306                           	callstack 0
   307   000021                     	ds	1
   308   000022                     _bandera_ADC1_finish:
   309                           	callstack 0
   310   000022                     	ds	1
   311   000023                     _bandera_ADC2_start:
   312                           	callstack 0
   313   000023                     	ds	1
   314   000024                     _bandera_ADC1_start:
   315                           	callstack 0
   316   000024                     	ds	1
   317   000025                     _uart1RxLastError:
   318                           	callstack 0
   319   000025                     	ds	1
   320   000026                     _uart1RxCount:
   321                           	callstack 0
   322   000026                     	ds	1
   323   000027                     _uart1RxTail:
   324                           	callstack 0
   325   000027                     	ds	1
   326   000028                     _uart1RxHead:
   327                           	callstack 0
   328   000028                     	ds	1
   329   000029                     _uart1TxBufferRemaining:
   330                           	callstack 0
   331   000029                     	ds	1
   332   00002A                     _uart1TxTail:
   333                           	callstack 0
   334   00002A                     	ds	1
   335   00002B                     _uart1TxHead:
   336                           	callstack 0
   337   00002B                     	ds	1
   338                           
   339                           	psect	bssBANK0
   340   000093                     __pbssBANK0:
   341                           	callstack 0
   342   000093                     _uart1RxStatusBuffer:
   343                           	callstack 0
   344   000093                     	ds	8
   345   00009B                     _uart1RxBuffer:
   346                           	callstack 0
   347   00009B                     	ds	8
   348   0000A3                     _uart1TxBuffer:
   349                           	callstack 0
   350   0000A3                     	ds	8
   351   0000AB                     _UART1_ErrorHandler:
   352                           	callstack 0
   353   0000AB                     	ds	2
   354   0000AD                     _UART1_OverrunErrorHandler:
   355                           	callstack 0
   356   0000AD                     	ds	2
   357   0000AF                     _UART1_FramingErrorHandler:
   358                           	callstack 0
   359   0000AF                     	ds	2
   360                           
   361                           	psect	cstackBANK0
   362   000060                     __pcstackBANK0:
   363                           	callstack 0
   364   000060                     main@spi:
   365                           	callstack 0
   366                           
   367                           ; 12 bytes @ 0x0
   368   000060                     	ds	12
   369   00006C                     main@timer:
   370                           	callstack 0
   371                           
   372                           ; 7 bytes @ 0xC
   373   00006C                     	ds	7
   374   000073                     main@cola:
   375                           	callstack 0
   376                           
   377                           ; 21 bytes @ 0x13
   378   000073                     	ds	21
   379   000088                     main@disp:
   380                           	callstack 0
   381                           
   382                           ; 11 bytes @ 0x28
   383   000088                     	ds	11
   384                           
   385                           	psect	cstackCOMRAM
   386   000001                     __pcstackCOMRAM:
   387                           	callstack 0
   388   000001                     ??_INTERRUPT_InterruptManager:
   389   000001                     
   390                           ; 1 bytes @ 0x0
   391   000001                     	ds	2
   392   000003                     ?_cola_vacia:
   393                           	callstack 0
   394   000003                     ?_cola_llena:
   395                           	callstack 0
   396   000003                     ?_ADCC_GetConversionResult:
   397                           	callstack 0
   398   000003                     ?___wmul:
   399                           	callstack 0
   400   000003                     TMR2_HasOverflowOccured@status:
   401                           	callstack 0
   402   000003                     ADCC_StartConversion@channel:
   403                           	callstack 0
   404   000003                     Tm_Procese_tiempo@ctp:
   405                           	callstack 0
   406   000003                     Tm_Hubo_periodico@ctp:
   407                           	callstack 0
   408   000003                     Tm_Baje_periodico@ctp:
   409                           	callstack 0
   410   000003                     inicie_cola@c:
   411                           	callstack 0
   412   000003                     cola_llena@c:
   413                           	callstack 0
   414   000003                     cola_vacia@c:
   415                           	callstack 0
   416   000003                     inicie_SPI@spi:
   417                           	callstack 0
   418   000003                     actualize_valor@spi:
   419                           	callstack 0
   420   000003                     iniciar_struct_usart@disp:
   421                           	callstack 0
   422   000003                     recibir_periodo_Eusart@disp:
   423                           	callstack 0
   424   000003                     dato_recibido_completo@disp:
   425                           	callstack 0
   426   000003                     UART1_SetFramingErrorHandler@interruptHandler:
   427                           	callstack 0
   428   000003                     UART1_SetOverrunErrorHandler@interruptHandler:
   429                           	callstack 0
   430   000003                     UART1_SetErrorHandler@interruptHandler:
   431                           	callstack 0
   432   000003                     UART1_SetRxInterruptHandler@InterruptHandler:
   433                           	callstack 0
   434   000003                     UART1_SetTxInterruptHandler@InterruptHandler:
   435                           	callstack 0
   436   000003                     ___wmul@multiplier:
   437                           	callstack 0
   438                           
   439                           ; 2 bytes @ 0x2
   440   000003                     	ds	1
   441   000004                     ??_Tm_Procese_tiempo:
   442   000004                     ??_recibir_periodo_Eusart:
   443   000004                     actualize_valor@valorspi:
   444                           	callstack 0
   445                           
   446                           ; 2 bytes @ 0x3
   447   000004                     	ds	1
   448   000005                     ??_ADCC_GetConversionResult:
   449   000005                     ___wmul@multiplicand:
   450                           	callstack 0
   451                           
   452                           ; 2 bytes @ 0x4
   453   000005                     	ds	1
   454   000006                     
   455                           ; 1 bytes @ 0x5
   456   000006                     	ds	1
   457   000007                     cola_add@c:
   458                           	callstack 0
   459   000007                     cola_get@c:
   460                           	callstack 0
   461   000007                     ___wmul@product:
   462                           	callstack 0
   463                           
   464                           ; 2 bytes @ 0x6
   465   000007                     	ds	1
   466   000008                     ??_cola_get:
   467   000008                     cola_add@dato:
   468                           	callstack 0
   469                           
   470                           ; 1 bytes @ 0x7
   471   000008                     	ds	1
   472   000009                     ??_cola_add:
   473   000009                     ?_actualizar_recibido_Eusart:
   474                           	callstack 0
   475   000009                     actualizar_recibido_Eusart@disp:
   476                           	callstack 0
   477                           
   478                           ; 1 bytes @ 0x8
   479   000009                     	ds	1
   480   00000A                     cola_get@temp:
   481                           	callstack 0
   482                           
   483                           ; 1 bytes @ 0x9
   484   00000A                     	ds	1
   485   00000B                     ??_actualizar_recibido_Eusart:
   486   00000B                     enviar_Eusart@valor:
   487                           	callstack 0
   488                           
   489                           ; 2 bytes @ 0xA
   490   00000B                     	ds	2
   491   00000D                     
   492                           ; 1 bytes @ 0xC
   493   00000D                     	ds	6
   494   000013                     Tm_Inicie_periodico@ctp:
   495                           	callstack 0
   496                           
   497                           ; 1 bytes @ 0x12
   498   000013                     	ds	1
   499   000014                     Tm_Inicie_periodico@periodo:
   500                           	callstack 0
   501                           
   502                           ; 2 bytes @ 0x13
   503   000014                     	ds	2
   504   000016                     ??_main:
   505                           
   506                           ; 1 bytes @ 0x15
   507   000016                     	ds	3
   508                           
   509 ;;
   510 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   511 ;;
   512 ;; *************** function _main *****************
   513 ;; Defined at:
   514 ;;		line 62 in file "main.c"
   515 ;; Parameters:    Size  Location     Type
   516 ;;		None
   517 ;; Auto vars:     Size  Location     Type
   518 ;;  cola           21   19[BANK0 ] struct eCola
   519 ;;  spi            12    0[BANK0 ] struct structspi
   520 ;;  disp           11   40[BANK0 ] struct usart
   521 ;;  timer           7   12[BANK0 ] struct Tm_Periodico
   522 ;;  estructuraSp    1    0        enum E16329
   523 ;; Return value:  Size  Location     Type
   524 ;;                  1    wreg      void 
   525 ;; Registers used:
   526 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   527 ;; Tracked objects:
   528 ;;		On entry : 0/0
   529 ;;		On exit  : 0/0
   530 ;;		Unchanged: 0/0
   531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   533 ;;      Locals:         0      51       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   534 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   535 ;;      Totals:         3      51       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   536 ;;Total ram usage:       54 bytes
   537 ;; Hardware stack levels required when called: 7
   538 ;; This function calls:
   539 ;;		_ADCC_DischargeSampleCapacitor
   540 ;;		_ADCC_GetConversionResult
   541 ;;		_ADCC_Initialize
   542 ;;		_ADCC_IsConversionDone
   543 ;;		_ADCC_StartConversion
   544 ;;		_SPI1_Initialize
   545 ;;		_SYSTEM_Initialize
   546 ;;		_TMR2_HasOverflowOccured
   547 ;;		_TMR2_Initialize
   548 ;;		_Tm_Baje_periodico
   549 ;;		_Tm_Hubo_periodico
   550 ;;		_Tm_Inicie_periodico
   551 ;;		_Tm_Procese_tiempo
   552 ;;		_UART1_Initialize
   553 ;;		_UART1_is_rx_ready
   554 ;;		_UART1_is_tx_ready
   555 ;;		_actualizar_recibido_Eusart
   556 ;;		_actualize_valor
   557 ;;		_cola_add
   558 ;;		_cola_get
   559 ;;		_cola_vacia
   560 ;;		_dato_recibido_completo
   561 ;;		_enviar_Eusart
   562 ;;		_iniciar_struct_usart
   563 ;;		_inicie_SPI
   564 ;;		_inicie_cola
   565 ;;		_recibir_periodo_Eusart
   566 ;; This function is called by:
   567 ;;		Startup code after reset
   568 ;; This function uses a non-reentrant model
   569 ;;
   570                           
   571                           	psect	text0
   572   001008                     __ptext0:
   573                           	callstack 0
   574   001008                     _main:
   575                           	callstack 24
   576                           
   577                           ;main.c: 65:     SYSTEM_Initialize();
   578                           
   579                           ;incstack = 0
   580   001008  ECFA  F00C         	call	_SYSTEM_Initialize	;wreg free
   581                           
   582                           ; BSR set to: 61
   583                           ;main.c: 77:     TMR2_Initialize();
   584   00100C  EC1F  F00D         	call	_TMR2_Initialize	;wreg free
   585                           
   586                           ; BSR set to: 57
   587                           ;main.c: 78:     ADCC_Initialize();
   588   001010  ECF4  F00B         	call	_ADCC_Initialize	;wreg free
   589                           
   590                           ; BSR set to: 62
   591                           ;main.c: 79:     SPI1_Initialize();
   592   001014  EC4B  F00D         	call	_SPI1_Initialize	;wreg free
   593                           
   594                           ; BSR set to: 61
   595                           ;main.c: 80:     UART1_Initialize();
   596   001018  ECCF  F009         	call	_UART1_Initialize	;wreg free
   597                           
   598                           ; BSR set to: 57
   599                           ;main.c: 83:     Tm_Inicie_periodico(&timer,1000);
   600                           
   601                           ; BSR set to: 57
   602   00101C  0E6C               	movlw	low main@timer
   603   00101E  6E13               	movwf	Tm_Inicie_periodico@ctp^0,c
   604   001020  0E03               	movlw	3
   605   001022  6E15               	movwf	(Tm_Inicie_periodico@periodo+1)^0,c
   606   001024  0EE8               	movlw	232
   607   001026  6E14               	movwf	Tm_Inicie_periodico@periodo^0,c
   608   001028  EC4C  F00C         	call	_Tm_Inicie_periodico	;wreg free
   609                           
   610                           ;main.c: 84:     eCola cola;;main.c: 85:     inicie_cola(&cola);
   611   00102C  0E73               	movlw	low main@cola
   612   00102E  6E03               	movwf	inicie_cola@c^0,c
   613   001030  EC6F  F00C         	call	_inicie_cola	;wreg free
   614                           
   615                           ;main.c: 87:     structspi spi;;main.c: 88:     inicie_SPI(&spi);
   616   001034  0E60               	movlw	low main@spi
   617   001036  6E03               	movwf	inicie_SPI@spi^0,c
   618   001038  EC3E  F00B         	call	_inicie_SPI	;wreg free
   619                           
   620                           ;main.c: 89:     actualize_valor(&spi,2048);
   621   00103C  0E60               	movlw	low main@spi
   622   00103E  6E03               	movwf	actualize_valor@spi^0,c
   623   001040  0E08               	movlw	8
   624   001042  6E05               	movwf	(actualize_valor@valorspi+1)^0,c
   625   001044  0E00               	movlw	0
   626   001046  6E04               	movwf	actualize_valor@valorspi^0,c
   627   001048  EC64  F00D         	call	_actualize_valor	;wreg free
   628                           
   629                           ;main.c: 90:     usart disp;;main.c: 91:     iniciar_struct_usart(&disp);
   630   00104C  0E88               	movlw	low main@disp
   631   00104E  6E03               	movwf	iniciar_struct_usart@disp^0,c
   632   001050  ECBC  F00B         	call	_iniciar_struct_usart	;wreg free
   633   001054                     l2715:
   634                           
   635                           ;main.c: 93:     {;main.c: 106:         if(TMR2_HasOverflowOccured()){
   636   001054  EC58  F00D         	call	_TMR2_HasOverflowOccured	;wreg free
   637   001058  0900               	iorlw	0
   638   00105A  B4D8               	btfsc	status,2,c
   639   00105C  D004               	goto	l2719
   640                           
   641                           ; BSR set to: 57
   642                           ;main.c: 107:             Tm_Procese_tiempo(&timer);
   643   00105E  0E6C               	movlw	low main@timer
   644   001060  6E03               	movwf	Tm_Procese_tiempo@ctp^0,c
   645   001062  EC20  F00A         	call	_Tm_Procese_tiempo	;wreg free
   646   001066                     l2719:
   647                           
   648                           ; BSR set to: 57
   649                           ;main.c: 109:         if(Tm_Hubo_periodico(&timer)){
   650   001066  0E6C               	movlw	low main@timer
   651   001068  6E03               	movwf	Tm_Hubo_periodico@ctp^0,c
   652   00106A  EC78  F00D         	call	_Tm_Hubo_periodico	;wreg free
   653   00106E  0900               	iorlw	0
   654   001070  B4D8               	btfsc	status,2,c
   655   001072  D00A               	goto	l2729
   656                           
   657                           ; BSR set to: 57
   658                           ;main.c: 110:             Tm_Baje_periodico(&timer);
   659   001074  0E6C               	movlw	low main@timer
   660   001076  6E03               	movwf	Tm_Baje_periodico@ctp^0,c
   661   001078  EC80  F00D         	call	_Tm_Baje_periodico	;wreg free
   662                           
   663                           ; BSR set to: 57
   664   00107C  88BD               	bsf	189,4,c	;volatile
   665                           
   666                           ; BSR set to: 57
   667                           ;main.c: 115:             ADCC_StartConversion(primerADC);
   668   00107E  0E06               	movlw	6
   669   001080  EC88  F00D         	call	_ADCC_StartConversion
   670                           
   671                           ; BSR set to: 62
   672                           ;main.c: 116:             bandera_ADC1_finish = 1;
   673   001084  0E01               	movlw	1
   674   001086  6E22               	movwf	_bandera_ADC1_finish^0,c
   675   001088                     l2729:
   676                           
   677                           ;main.c: 119:         if(ADCC_IsConversionDone() && bandera_ADC1_finish){
   678   001088  ECA5  F00D         	call	_ADCC_IsConversionDone	;wreg free
   679   00108C  0900               	iorlw	0
   680   00108E  B4D8               	btfsc	status,2,c
   681   001090  D019               	goto	l2747
   682                           
   683                           ; BSR set to: 62
   684   001092  5022               	movf	_bandera_ADC1_finish^0,w,c
   685   001094  B4D8               	btfsc	status,2,c
   686   001096  D016               	goto	l2747
   687                           
   688                           ; BSR set to: 62
   689                           ;main.c: 121:             primerresultado = ADCC_GetConversionResult();
   690   001098  EC6E  F00D         	call	_ADCC_GetConversionResult	;wreg free
   691   00109C  C003  F01B         	movff	?_ADCC_GetConversionResult,_primerresultado
   692   0010A0  C004  F01C         	movff	?_ADCC_GetConversionResult+1,_primerresultado+1
   693                           
   694                           ; BSR set to: 62
   695                           ;main.c: 123:             ADCC_DischargeSampleCapacitor();
   696   0010A4  ECCD  F00D         	call	_ADCC_DischargeSampleCapacitor	;wreg free
   697                           
   698                           ; BSR set to: 62
   699                           ;main.c: 125:             ADCC_StartConversion(segundoADC);
   700   0010A8  0E05               	movlw	5
   701   0010AA  EC88  F00D         	call	_ADCC_StartConversion
   702                           
   703                           ; BSR set to: 62
   704                           ;main.c: 127:             cola_add(&cola,(char)(primerresultado));
   705   0010AE  0E73               	movlw	low main@cola
   706   0010B0  6E07               	movwf	cola_add@c^0,c
   707   0010B2  C01B  F008         	movff	_primerresultado,cola_add@dato
   708   0010B6  EC7D  F00B         	call	_cola_add	;wreg free
   709   0010BA  98BD               	bcf	189,4,c	;volatile
   710                           
   711                           ;main.c: 132:             bandera_ADC1_finish = 0;
   712   0010BC  0E00               	movlw	0
   713   0010BE  6E22               	movwf	_bandera_ADC1_finish^0,c
   714                           
   715                           ;main.c: 133:             bandera_ADC2_finish = 1;
   716   0010C0  0E01               	movlw	1
   717   0010C2  6E21               	movwf	_bandera_ADC2_finish^0,c
   718   0010C4                     l2747:
   719                           
   720                           ;main.c: 137:         if(bandera_ADC2_finish && ADCC_IsConversionDone()){
   721   0010C4  5021               	movf	_bandera_ADC2_finish^0,w,c
   722   0010C6  B4D8               	btfsc	status,2,c
   723   0010C8  D02C               	goto	l2763
   724   0010CA  ECA5  F00D         	call	_ADCC_IsConversionDone	;wreg free
   725   0010CE  0900               	iorlw	0
   726   0010D0  B4D8               	btfsc	status,2,c
   727   0010D2  D027               	goto	l2763
   728                           
   729                           ; BSR set to: 62
   730                           ;main.c: 138:             bandera_ADC2_finish = 0;
   731   0010D4  0E00               	movlw	0
   732   0010D6  6E21               	movwf	_bandera_ADC2_finish^0,c
   733                           
   734                           ; BSR set to: 62
   735                           ;main.c: 139:             segundoresultado = ADCC_GetConversionResult();
   736   0010D8  EC6E  F00D         	call	_ADCC_GetConversionResult	;wreg free
   737   0010DC  C003  F019         	movff	?_ADCC_GetConversionResult,_segundoresultado
   738   0010E0  C004  F01A         	movff	?_ADCC_GetConversionResult+1,_segundoresultado+1
   739                           
   740                           ; BSR set to: 62
   741                           ;main.c: 140:             segundoresultado = 3000;
   742   0010E4  0E0B               	movlw	11
   743   0010E6  6E1A               	movwf	(_segundoresultado+1)^0,c
   744   0010E8  0EB8               	movlw	184
   745   0010EA  6E19               	movwf	_segundoresultado^0,c
   746                           
   747                           ; BSR set to: 62
   748                           ;main.c: 141:             ADCC_DischargeSampleCapacitor();
   749   0010EC  ECCD  F00D         	call	_ADCC_DischargeSampleCapacitor	;wreg free
   750                           
   751                           ; BSR set to: 62
   752                           ;main.c: 142:             cola_add(&cola,segundoresultado & 0xFF);
   753   0010F0  0E73               	movlw	low main@cola
   754   0010F2  6E07               	movwf	cola_add@c^0,c
   755   0010F4  0EB8               	movlw	184
   756   0010F6  6E08               	movwf	cola_add@dato^0,c
   757   0010F8  EC7D  F00B         	call	_cola_add	;wreg free
   758                           
   759                           ;main.c: 143:             cola_add(&cola,((primerresultado & 0xF00) >> 4) | ((segundores
      +                          ultado & 0xF00) >> 8 ));
   760   0010FC  0E73               	movlw	low main@cola
   761   0010FE  6E07               	movwf	cola_add@c^0,c
   762   001100  C01B  F016         	movff	_primerresultado,??_main
   763   001104  C01C  F017         	movff	_primerresultado+1,??_main+1
   764   001108  0E04               	movlw	4
   765   00110A  6E18               	movwf	(??_main+2)^0,c
   766   00110C                     u1105:
   767   00110C  3417               	rlcf	(??_main+1)^0,w,c
   768   00110E  3217               	rrcf	(??_main+1)^0,f,c
   769   001110  3216               	rrcf	??_main^0,f,c
   770   001112  2E18               	decfsz	(??_main+2)^0,f,c
   771   001114  D7FB               	goto	u1105
   772   001116  5016               	movf	??_main^0,w,c
   773   001118  0BF0               	andlw	240
   774   00111A  090B               	iorlw	11
   775   00111C  6E08               	movwf	cola_add@dato^0,c
   776   00111E  EC7D  F00B         	call	_cola_add	;wreg free
   777   001122                     l2763:
   778                           
   779                           ;main.c: 165:         if(!(cola_vacia(&cola)) && UART1_is_tx_ready()){
   780   001122  0E73               	movlw	low main@cola
   781   001124  6E03               	movwf	cola_vacia@c^0,c
   782   001126  ECA4  F00C         	call	_cola_vacia	;wreg free
   783   00112A  5003               	movf	?_cola_vacia^0,w,c
   784   00112C  1004               	iorwf	(?_cola_vacia+1)^0,w,c
   785   00112E  A4D8               	btfss	status,2,c
   786   001130  D00F               	goto	l2769
   787   001132  EC97  F00D         	call	_UART1_is_tx_ready	;wreg free
   788   001136  0900               	iorlw	0
   789   001138  B4D8               	btfsc	status,2,c
   790   00113A  D00A               	goto	l2769
   791                           
   792                           ;main.c: 166:            enviar_Eusart(cola_get(&cola));
   793   00113C  0E73               	movlw	low main@cola
   794   00113E  6E07               	movwf	cola_get@c^0,c
   795   001140  ECFC  F00A         	call	_cola_get	;wreg free
   796   001144  6E16               	movwf	??_main^0,c
   797   001146  5016               	movf	??_main^0,w,c
   798   001148  6E0B               	movwf	enviar_Eusart@valor^0,c
   799   00114A  6A0C               	clrf	(enviar_Eusart@valor+1)^0,c
   800   00114C  ECC5  F00D         	call	_enviar_Eusart	;wreg free
   801   001150                     l2769:
   802                           
   803                           ;main.c: 168:         if(UART1_is_rx_ready()){
   804   001150  EC9E  F00D         	call	_UART1_is_rx_ready	;wreg free
   805   001154  0900               	iorlw	0
   806   001156  B4D8               	btfsc	status,2,c
   807   001158  D004               	goto	l737
   808                           
   809                           ;main.c: 170:             recibir_periodo_Eusart(&disp);
   810   00115A  0E88               	movlw	low main@disp
   811   00115C  6E03               	movwf	recibir_periodo_Eusart@disp^0,c
   812   00115E  ECC7  F008         	call	_recibir_periodo_Eusart	;wreg free
   813   001162                     l737:
   814                           
   815                           ;main.c: 172:         if(dato_recibido_completo(&disp)){
   816   001162  0E88               	movlw	low main@disp
   817   001164  6E03               	movwf	dato_recibido_completo@disp^0,c
   818   001166  EC90  F00D         	call	_dato_recibido_completo	;wreg free
   819   00116A  0900               	iorlw	0
   820   00116C  B4D8               	btfsc	status,2,c
   821   00116E  D772               	goto	l2715
   822                           
   823                           ;main.c: 173:             Tm_Inicie_periodico(&timer,1 + actualizar_recibido_Eusart(&dis
      +                          p));
   824   001170  0E6C               	movlw	low main@timer
   825   001172  6E13               	movwf	Tm_Inicie_periodico@ctp^0,c
   826   001174  0E88               	movlw	low main@disp
   827   001176  6E09               	movwf	actualizar_recibido_Eusart@disp^0,c
   828   001178  EC6D  F00A         	call	_actualizar_recibido_Eusart	;wreg free
   829   00117C  0E01               	movlw	1
   830   00117E  2409               	addwf	?_actualizar_recibido_Eusart^0,w,c
   831   001180  6E14               	movwf	Tm_Inicie_periodico@periodo^0,c
   832   001182  0E00               	movlw	0
   833   001184  200A               	addwfc	(?_actualizar_recibido_Eusart+1)^0,w,c
   834   001186  6E15               	movwf	(Tm_Inicie_periodico@periodo+1)^0,c
   835   001188  EC4C  F00C         	call	_Tm_Inicie_periodico	;wreg free
   836   00118C  D763               	goto	l2715
   837   00118E                     __end_of_main:
   838                           	callstack 0
   839                           
   840 ;; *************** function _recibir_periodo_Eusart *****************
   841 ;; Defined at:
   842 ;;		line 17 in file "proceseusart.c"
   843 ;; Parameters:    Size  Location     Type
   844 ;;  disp            1    2[COMRAM] PTR struct usart
   845 ;;		 -> main@disp(11), 
   846 ;; Auto vars:     Size  Location     Type
   847 ;;		None
   848 ;; Return value:  Size  Location     Type
   849 ;;                  1    wreg      void 
   850 ;; Registers used:
   851 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   852 ;; Tracked objects:
   853 ;;		On entry : 0/3E
   854 ;;		On exit  : 0/0
   855 ;;		Unchanged: 0/0
   856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   857 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   859 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   860 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   861 ;;Total ram usage:        3 bytes
   862 ;; Hardware stack levels used: 1
   863 ;; Hardware stack levels required when called: 4
   864 ;; This function calls:
   865 ;;		Nothing
   866 ;; This function is called by:
   867 ;;		_main
   868 ;; This function uses a non-reentrant model
   869 ;;
   870                           
   871                           	psect	text1
   872   00118E                     __ptext1:
   873                           	callstack 0
   874   00118E                     _recibir_periodo_Eusart:
   875                           	callstack 26
   876                           
   877                           ;proceseusart.c: 18:     disp -> valor = U1RXB;
   878                           
   879                           ;incstack = 0
   880   00118E  5003               	movf	recibir_periodo_Eusart@disp^0,w,c
   881   001190  6ED9               	movwf	fsr2l,c
   882   001192  6ADA               	clrf	fsr2h,c
   883   001194  006F F7A3 FFDF     	movff	15848,indf2	;volatile
   884                           
   885                           ;proceseusart.c: 19:     switch(disp -> caso)
   886   00119A  D08E               	goto	l2677
   887   00119C                     l2659:
   888                           
   889                           ;proceseusart.c: 22:             if(disp -> valor == 60){
   890   00119C  5003               	movf	recibir_periodo_Eusart@disp^0,w,c
   891   00119E  6ED9               	movwf	fsr2l,c
   892   0011A0  6ADA               	clrf	fsr2h,c
   893   0011A2  0E3C               	movlw	60
   894   0011A4  18DE               	xorwf	postinc2,w,c
   895   0011A6  A4D8               	btfss	status,2,c
   896   0011A8  D00A               	goto	l2663
   897                           
   898                           ;proceseusart.c: 23:                 disp -> caso = 1;
   899   0011AA  5003               	movf	recibir_periodo_Eusart@disp^0,w,c
   900   0011AC  6ED9               	movwf	fsr2l,c
   901   0011AE  6ADA               	clrf	fsr2h,c
   902   0011B0  0E07               	movlw	7
   903   0011B2  26D9               	addwf	fsr2l,f,c
   904   0011B4  0E01               	movlw	1
   905   0011B6  6EDE               	movwf	postinc2,c
   906   0011B8  0E00               	movlw	0
   907   0011BA  6EDD               	movwf	postdec2,c
   908                           
   909                           ;proceseusart.c: 24:             }
   910   0011BC  0012               	return	
   911   0011BE                     l2663:
   912                           
   913                           ;proceseusart.c: 26:             {;proceseusart.c: 27:                 disp -> caso = 0;
   914   0011BE  5003               	movf	recibir_periodo_Eusart@disp^0,w,c
   915   0011C0  6ED9               	movwf	fsr2l,c
   916   0011C2  6ADA               	clrf	fsr2h,c
   917   0011C4  0E07               	movlw	7
   918   0011C6  26D9               	addwf	fsr2l,f,c
   919   0011C8  0E00               	movlw	0
   920   0011CA  6EDE               	movwf	postinc2,c
   921   0011CC  0E00               	movlw	0
   922   0011CE  6EDD               	movwf	postdec2,c
   923   0011D0  0012               	return	
   924   0011D2                     l2665:
   925                           
   926                           ;proceseusart.c: 31:             disp -> caso = 2;
   927   0011D2  5003               	movf	recibir_periodo_Eusart@disp^0,w,c
   928   0011D4  6ED9               	movwf	fsr2l,c
   929   0011D6  6ADA               	clrf	fsr2h,c
   930   0011D8  0E07               	movlw	7
   931   0011DA  26D9               	addwf	fsr2l,f,c
   932   0011DC  0E02               	movlw	2
   933   0011DE  6EDE               	movwf	postinc2,c
   934   0011E0  0E00               	movlw	0
   935   0011E2  6EDD               	movwf	postdec2,c
   936                           
   937                           ;proceseusart.c: 32:             disp -> numero1 = disp -> valor;
   938   0011E4  5003               	movf	recibir_periodo_Eusart@disp^0,w,c
   939   0011E6  6ED9               	movwf	fsr2l,c
   940   0011E8  6ADA               	clrf	fsr2h,c
   941   0011EA  50DF               	movf	indf2,w,c
   942   0011EC  6E04               	movwf	??_recibir_periodo_Eusart^0,c
   943   0011EE  6A05               	clrf	(??_recibir_periodo_Eusart+1)^0,c
   944   0011F0  5003               	movf	recibir_periodo_Eusart@disp^0,w,c
   945   0011F2  6ED9               	movwf	fsr2l,c
   946   0011F4  6ADA               	clrf	fsr2h,c
   947   0011F6  0E01               	movlw	1
   948   0011F8  26D9               	addwf	fsr2l,f,c
   949   0011FA  0060  F013  FFDE   	movff	??_recibir_periodo_Eusart,postinc2
   950   001200  0060  F017  FFDD   	movff	??_recibir_periodo_Eusart+1,postdec2
   951                           
   952                           ;proceseusart.c: 33:             break;
   953   001206  0012               	return	
   954   001208                     l2667:
   955                           
   956                           ;proceseusart.c: 35:             disp -> caso = 3;
   957   001208  5003               	movf	recibir_periodo_Eusart@disp^0,w,c
   958   00120A  6ED9               	movwf	fsr2l,c
   959   00120C  6ADA               	clrf	fsr2h,c
   960   00120E  0E07               	movlw	7
   961   001210  26D9               	addwf	fsr2l,f,c
   962   001212  0E03               	movlw	3
   963   001214  6EDE               	movwf	postinc2,c
   964   001216  0E00               	movlw	0
   965   001218  6EDD               	movwf	postdec2,c
   966                           
   967                           ;proceseusart.c: 36:             disp -> numero2 = disp -> valor;
   968   00121A  5003               	movf	recibir_periodo_Eusart@disp^0,w,c
   969   00121C  6ED9               	movwf	fsr2l,c
   970   00121E  6ADA               	clrf	fsr2h,c
   971   001220  50DF               	movf	indf2,w,c
   972   001222  6E04               	movwf	??_recibir_periodo_Eusart^0,c
   973   001224  6A05               	clrf	(??_recibir_periodo_Eusart+1)^0,c
   974   001226  5003               	movf	recibir_periodo_Eusart@disp^0,w,c
   975   001228  6ED9               	movwf	fsr2l,c
   976   00122A  6ADA               	clrf	fsr2h,c
   977   00122C  0E03               	movlw	3
   978   00122E  26D9               	addwf	fsr2l,f,c
   979   001230  0060  F013  FFDE   	movff	??_recibir_periodo_Eusart,postinc2
   980   001236  0060  F017  FFDD   	movff	??_recibir_periodo_Eusart+1,postdec2
   981                           
   982                           ;proceseusart.c: 37:             break;
   983   00123C  0012               	return	
   984   00123E                     l2669:
   985                           
   986                           ;proceseusart.c: 39:             disp -> caso = 4;
   987   00123E  5003               	movf	recibir_periodo_Eusart@disp^0,w,c
   988   001240  6ED9               	movwf	fsr2l,c
   989   001242  6ADA               	clrf	fsr2h,c
   990   001244  0E07               	movlw	7
   991   001246  26D9               	addwf	fsr2l,f,c
   992   001248  0E04               	movlw	4
   993   00124A  6EDE               	movwf	postinc2,c
   994   00124C  0E00               	movlw	0
   995   00124E  6EDD               	movwf	postdec2,c
   996                           
   997                           ;proceseusart.c: 40:             disp -> numero3 = disp -> valor;
   998   001250  5003               	movf	recibir_periodo_Eusart@disp^0,w,c
   999   001252  6ED9               	movwf	fsr2l,c
  1000   001254  6ADA               	clrf	fsr2h,c
  1001   001256  50DF               	movf	indf2,w,c
  1002   001258  6E04               	movwf	??_recibir_periodo_Eusart^0,c
  1003   00125A  6A05               	clrf	(??_recibir_periodo_Eusart+1)^0,c
  1004   00125C  5003               	movf	recibir_periodo_Eusart@disp^0,w,c
  1005   00125E  6ED9               	movwf	fsr2l,c
  1006   001260  6ADA               	clrf	fsr2h,c
  1007   001262  0E05               	movlw	5
  1008   001264  26D9               	addwf	fsr2l,f,c
  1009   001266  0060  F013  FFDE   	movff	??_recibir_periodo_Eusart,postinc2
  1010   00126C  0060  F017  FFDD   	movff	??_recibir_periodo_Eusart+1,postdec2
  1011                           
  1012                           ;proceseusart.c: 41:             break;
  1013   001272  0012               	return	
  1014   001274                     l2671:
  1015                           
  1016                           ;proceseusart.c: 43:             if(disp -> valor == 62){
  1017   001274  5003               	movf	recibir_periodo_Eusart@disp^0,w,c
  1018   001276  6ED9               	movwf	fsr2l,c
  1019   001278  6ADA               	clrf	fsr2h,c
  1020   00127A  0E3E               	movlw	62
  1021   00127C  18DE               	xorwf	postinc2,w,c
  1022   00127E  A4D8               	btfss	status,2,c
  1023   001280  D011               	goto	l2675
  1024                           
  1025                           ;proceseusart.c: 44:                 disp -> recibir_dato_completo = 1;
  1026   001282  5003               	movf	recibir_periodo_Eusart@disp^0,w,c
  1027   001284  6ED9               	movwf	fsr2l,c
  1028   001286  6ADA               	clrf	fsr2h,c
  1029   001288  0E09               	movlw	9
  1030   00128A  26D9               	addwf	fsr2l,f,c
  1031   00128C  0E01               	movlw	1
  1032   00128E  6EDF               	movwf	indf2,c
  1033                           
  1034                           ;proceseusart.c: 45:                 disp -> caso = 0;
  1035   001290  5003               	movf	recibir_periodo_Eusart@disp^0,w,c
  1036   001292  6ED9               	movwf	fsr2l,c
  1037   001294  6ADA               	clrf	fsr2h,c
  1038   001296  0E07               	movlw	7
  1039   001298  26D9               	addwf	fsr2l,f,c
  1040   00129A  0E00               	movlw	0
  1041   00129C  6EDE               	movwf	postinc2,c
  1042   00129E  0E00               	movlw	0
  1043   0012A0  6EDD               	movwf	postdec2,c
  1044                           
  1045                           ;proceseusart.c: 46:             }
  1046   0012A2  0012               	return	
  1047   0012A4                     l2675:
  1048                           
  1049                           ;proceseusart.c: 48:                 disp -> caso = 0;
  1050   0012A4  5003               	movf	recibir_periodo_Eusart@disp^0,w,c
  1051   0012A6  6ED9               	movwf	fsr2l,c
  1052   0012A8  6ADA               	clrf	fsr2h,c
  1053   0012AA  0E07               	movlw	7
  1054   0012AC  26D9               	addwf	fsr2l,f,c
  1055   0012AE  0E00               	movlw	0
  1056   0012B0  6EDE               	movwf	postinc2,c
  1057   0012B2  0E00               	movlw	0
  1058   0012B4  6EDD               	movwf	postdec2,c
  1059   0012B6  0012               	return	
  1060   0012B8                     l2677:
  1061   0012B8  5003               	movf	recibir_periodo_Eusart@disp^0,w,c
  1062   0012BA  6ED9               	movwf	fsr2l,c
  1063   0012BC  6ADA               	clrf	fsr2h,c
  1064   0012BE  0E07               	movlw	7
  1065   0012C0  26D9               	addwf	fsr2l,f,c
  1066   0012C2  006F FF78  F004    	movff	postinc2,??_recibir_periodo_Eusart
  1067   0012C8  006F FF74  F005    	movff	postdec2,??_recibir_periodo_Eusart+1
  1068                           
  1069                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1070                           ; Switch size 1, requested type "simple"
  1071                           ; Number of cases is 1, Range of values is 0 to 0
  1072                           ; switch strategies available:
  1073                           ; Name         Instructions Cycles
  1074                           ; simple_byte            4     3 (average)
  1075                           ;	Chosen strategy is simple_byte
  1076   0012CE  5005               	movf	(??_recibir_periodo_Eusart+1)^0,w,c
  1077   0012D0  0A00               	xorlw	0	; case 0
  1078   0012D2  A4D8               	btfss	status,2,c
  1079   0012D4  0012               	return	
  1080                           
  1081                           ; Switch size 1, requested type "simple"
  1082                           ; Number of cases is 5, Range of values is 0 to 4
  1083                           ; switch strategies available:
  1084                           ; Name         Instructions Cycles
  1085                           ; simple_byte           16     9 (average)
  1086                           ;	Chosen strategy is simple_byte
  1087   0012D6  5004               	movf	??_recibir_periodo_Eusart^0,w,c
  1088   0012D8  0A00               	xorlw	0	; case 0
  1089   0012DA  B4D8               	btfsc	status,2,c
  1090   0012DC  D75F               	goto	l2659
  1091   0012DE  0A01               	xorlw	1	; case 1
  1092   0012E0  B4D8               	btfsc	status,2,c
  1093   0012E2  D777               	goto	l2665
  1094   0012E4  0A03               	xorlw	3	; case 2
  1095   0012E6  B4D8               	btfsc	status,2,c
  1096   0012E8  D78F               	goto	l2667
  1097   0012EA  0A01               	xorlw	1	; case 3
  1098   0012EC  B4D8               	btfsc	status,2,c
  1099   0012EE  D7A7               	goto	l2669
  1100   0012F0  0A07               	xorlw	7	; case 4
  1101   0012F2  A4D8               	btfss	status,2,c
  1102   0012F4  0012               	return	
  1103   0012F6  D7BE               	goto	l2671
  1104   0012F8                     __end_of_recibir_periodo_Eusart:
  1105                           	callstack 0
  1106                           
  1107 ;; *************** function _inicie_cola *****************
  1108 ;; Defined at:
  1109 ;;		line 3 in file "cola.c"
  1110 ;; Parameters:    Size  Location     Type
  1111 ;;  c               1    2[COMRAM] PTR struct eCola
  1112 ;;		 -> main@cola(21), 
  1113 ;; Auto vars:     Size  Location     Type
  1114 ;;		None
  1115 ;; Return value:  Size  Location     Type
  1116 ;;                  1    wreg      void 
  1117 ;; Registers used:
  1118 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1119 ;; Tracked objects:
  1120 ;;		On entry : 0/39
  1121 ;;		On exit  : 0/0
  1122 ;;		Unchanged: 0/0
  1123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1124 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1127 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1128 ;;Total ram usage:        1 bytes
  1129 ;; Hardware stack levels used: 1
  1130 ;; Hardware stack levels required when called: 4
  1131 ;; This function calls:
  1132 ;;		Nothing
  1133 ;; This function is called by:
  1134 ;;		_main
  1135 ;; This function uses a non-reentrant model
  1136 ;;
  1137                           
  1138                           	psect	text2
  1139   0018DE                     __ptext2:
  1140                           	callstack 0
  1141   0018DE                     _inicie_cola:
  1142                           	callstack 26
  1143                           
  1144                           ;cola.c: 3: void inicie_cola(eCola* c);cola.c: 4: {;cola.c: 5:     c->entrada=0;
  1145                           
  1146                           ;incstack = 0
  1147   0018DE  5003               	movf	inicie_cola@c^0,w,c
  1148   0018E0  6ED9               	movwf	fsr2l,c
  1149   0018E2  6ADA               	clrf	fsr2h,c
  1150   0018E4  0E0F               	movlw	15
  1151   0018E6  26D9               	addwf	fsr2l,f,c
  1152   0018E8  0E00               	movlw	0
  1153   0018EA  6EDE               	movwf	postinc2,c
  1154   0018EC  0E00               	movlw	0
  1155   0018EE  6EDD               	movwf	postdec2,c
  1156                           
  1157                           ;cola.c: 6:     c->salida=0;
  1158   0018F0  5003               	movf	inicie_cola@c^0,w,c
  1159   0018F2  6ED9               	movwf	fsr2l,c
  1160   0018F4  6ADA               	clrf	fsr2h,c
  1161   0018F6  0E11               	movlw	17
  1162   0018F8  26D9               	addwf	fsr2l,f,c
  1163   0018FA  0E00               	movlw	0
  1164   0018FC  6EDE               	movwf	postinc2,c
  1165   0018FE  0E00               	movlw	0
  1166   001900  6EDD               	movwf	postdec2,c
  1167                           
  1168                           ;cola.c: 7:     c->peso=0;
  1169   001902  5003               	movf	inicie_cola@c^0,w,c
  1170   001904  6ED9               	movwf	fsr2l,c
  1171   001906  6ADA               	clrf	fsr2h,c
  1172   001908  0E13               	movlw	19
  1173   00190A  26D9               	addwf	fsr2l,f,c
  1174   00190C  0E00               	movlw	0
  1175   00190E  6EDE               	movwf	postinc2,c
  1176   001910  0E00               	movlw	0
  1177   001912  6EDD               	movwf	postdec2,c
  1178   001914  0012               	return		;funcret
  1179   001916                     __end_of_inicie_cola:
  1180                           	callstack 0
  1181                           
  1182 ;; *************** function _inicie_SPI *****************
  1183 ;; Defined at:
  1184 ;;		line 8 in file "processpi.c"
  1185 ;; Parameters:    Size  Location     Type
  1186 ;;  spi             1    2[COMRAM] PTR struct structspi
  1187 ;;		 -> main@spi(12), 
  1188 ;; Auto vars:     Size  Location     Type
  1189 ;;		None
  1190 ;; Return value:  Size  Location     Type
  1191 ;;                  1    wreg      void 
  1192 ;; Registers used:
  1193 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1194 ;; Tracked objects:
  1195 ;;		On entry : 0/39
  1196 ;;		On exit  : 0/0
  1197 ;;		Unchanged: 0/0
  1198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1199 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1202 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1203 ;;Total ram usage:        1 bytes
  1204 ;; Hardware stack levels used: 1
  1205 ;; Hardware stack levels required when called: 4
  1206 ;; This function calls:
  1207 ;;		Nothing
  1208 ;; This function is called by:
  1209 ;;		_main
  1210 ;; This function uses a non-reentrant model
  1211 ;;
  1212                           
  1213                           	psect	text3
  1214   00167C                     __ptext3:
  1215                           	callstack 0
  1216   00167C                     _inicie_SPI:
  1217                           	callstack 26
  1218                           
  1219                           ;processpi.c: 9:     spi -> valor = 0;
  1220                           
  1221                           ;incstack = 0
  1222   00167C  5003               	movf	inicie_SPI@spi^0,w,c
  1223   00167E  6ED9               	movwf	fsr2l,c
  1224   001680  6ADA               	clrf	fsr2h,c
  1225   001682  0E00               	movlw	0
  1226   001684  6EDE               	movwf	postinc2,c
  1227   001686  0E00               	movlw	0
  1228   001688  6EDD               	movwf	postdec2,c
  1229                           
  1230                           ;processpi.c: 10:     spi -> ganancia = 0;
  1231   00168A  5003               	movf	inicie_SPI@spi^0,w,c
  1232   00168C  6ED9               	movwf	fsr2l,c
  1233   00168E  6ADA               	clrf	fsr2h,c
  1234   001690  0E04               	movlw	4
  1235   001692  26D9               	addwf	fsr2l,f,c
  1236   001694  0E00               	movlw	0
  1237   001696  6EDF               	movwf	indf2,c
  1238                           
  1239                           ;processpi.c: 11:     spi -> canal = 0;
  1240   001698  5003               	movf	inicie_SPI@spi^0,w,c
  1241   00169A  6ED9               	movwf	fsr2l,c
  1242   00169C  6ADA               	clrf	fsr2h,c
  1243   00169E  0E03               	movlw	3
  1244   0016A0  26D9               	addwf	fsr2l,f,c
  1245   0016A2  0E00               	movlw	0
  1246   0016A4  6EDF               	movwf	indf2,c
  1247                           
  1248                           ;processpi.c: 12:     spi -> impedancia = 0;
  1249   0016A6  5003               	movf	inicie_SPI@spi^0,w,c
  1250   0016A8  6ED9               	movwf	fsr2l,c
  1251   0016AA  6ADA               	clrf	fsr2h,c
  1252   0016AC  0E05               	movlw	5
  1253   0016AE  26D9               	addwf	fsr2l,f,c
  1254   0016B0  0E00               	movlw	0
  1255   0016B2  6EDF               	movwf	indf2,c
  1256                           
  1257                           ;processpi.c: 13:     spi -> valor_enviando = 0;
  1258   0016B4  5003               	movf	inicie_SPI@spi^0,w,c
  1259   0016B6  6ED9               	movwf	fsr2l,c
  1260   0016B8  6ADA               	clrf	fsr2h,c
  1261   0016BA  0E02               	movlw	2
  1262   0016BC  26D9               	addwf	fsr2l,f,c
  1263   0016BE  0E00               	movlw	0
  1264   0016C0  6EDF               	movwf	indf2,c
  1265                           
  1266                           ;processpi.c: 14:     spi -> estado_registro = 16;
  1267   0016C2  5003               	movf	inicie_SPI@spi^0,w,c
  1268   0016C4  6ED9               	movwf	fsr2l,c
  1269   0016C6  6ADA               	clrf	fsr2h,c
  1270   0016C8  0E06               	movlw	6
  1271   0016CA  26D9               	addwf	fsr2l,f,c
  1272   0016CC  0E10               	movlw	16
  1273   0016CE  6EDE               	movwf	postinc2,c
  1274   0016D0  0E00               	movlw	0
  1275   0016D2  6EDD               	movwf	postdec2,c
  1276                           
  1277                           ;processpi.c: 15:     spi -> caso = 0;
  1278   0016D4  5003               	movf	inicie_SPI@spi^0,w,c
  1279   0016D6  6ED9               	movwf	fsr2l,c
  1280   0016D8  6ADA               	clrf	fsr2h,c
  1281   0016DA  0E08               	movlw	8
  1282   0016DC  26D9               	addwf	fsr2l,f,c
  1283   0016DE  0E00               	movlw	0
  1284   0016E0  6EDE               	movwf	postinc2,c
  1285   0016E2  0E00               	movlw	0
  1286   0016E4  6EDD               	movwf	postdec2,c
  1287                           
  1288                           ;processpi.c: 16:     spi -> tamano_registro = 16;
  1289   0016E6  5003               	movf	inicie_SPI@spi^0,w,c
  1290   0016E8  6ED9               	movwf	fsr2l,c
  1291   0016EA  6ADA               	clrf	fsr2h,c
  1292   0016EC  0E0A               	movlw	10
  1293   0016EE  26D9               	addwf	fsr2l,f,c
  1294   0016F0  0E10               	movlw	16
  1295   0016F2  6EDE               	movwf	postinc2,c
  1296   0016F4  0E00               	movlw	0
  1297   0016F6  6EDD               	movwf	postdec2,c
  1298   0016F8  0012               	return		;funcret
  1299   0016FA                     __end_of_inicie_SPI:
  1300                           	callstack 0
  1301                           
  1302 ;; *************** function _iniciar_struct_usart *****************
  1303 ;; Defined at:
  1304 ;;		line 7 in file "proceseusart.c"
  1305 ;; Parameters:    Size  Location     Type
  1306 ;;  disp            1    2[COMRAM] PTR struct usart
  1307 ;;		 -> main@disp(11), 
  1308 ;; Auto vars:     Size  Location     Type
  1309 ;;		None
  1310 ;; Return value:  Size  Location     Type
  1311 ;;                  1    wreg      void 
  1312 ;; Registers used:
  1313 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1314 ;; Tracked objects:
  1315 ;;		On entry : 0/39
  1316 ;;		On exit  : 0/0
  1317 ;;		Unchanged: 0/0
  1318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1319 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1322 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1323 ;;Total ram usage:        1 bytes
  1324 ;; Hardware stack levels used: 1
  1325 ;; Hardware stack levels required when called: 4
  1326 ;; This function calls:
  1327 ;;		Nothing
  1328 ;; This function is called by:
  1329 ;;		_main
  1330 ;; This function uses a non-reentrant model
  1331 ;;
  1332                           
  1333                           	psect	text4
  1334   001778                     __ptext4:
  1335                           	callstack 0
  1336   001778                     _iniciar_struct_usart:
  1337                           	callstack 26
  1338                           
  1339                           ;proceseusart.c: 8:     disp -> numero1 = 0;
  1340                           
  1341                           ;incstack = 0
  1342   001778  5003               	movf	iniciar_struct_usart@disp^0,w,c
  1343   00177A  6ED9               	movwf	fsr2l,c
  1344   00177C  6ADA               	clrf	fsr2h,c
  1345   00177E  0E01               	movlw	1
  1346   001780  26D9               	addwf	fsr2l,f,c
  1347   001782  0E00               	movlw	0
  1348   001784  6EDE               	movwf	postinc2,c
  1349   001786  0E00               	movlw	0
  1350   001788  6EDD               	movwf	postdec2,c
  1351                           
  1352                           ;proceseusart.c: 9:     disp -> numero2 = 0;
  1353   00178A  5003               	movf	iniciar_struct_usart@disp^0,w,c
  1354   00178C  6ED9               	movwf	fsr2l,c
  1355   00178E  6ADA               	clrf	fsr2h,c
  1356   001790  0E03               	movlw	3
  1357   001792  26D9               	addwf	fsr2l,f,c
  1358   001794  0E00               	movlw	0
  1359   001796  6EDE               	movwf	postinc2,c
  1360   001798  0E00               	movlw	0
  1361   00179A  6EDD               	movwf	postdec2,c
  1362                           
  1363                           ;proceseusart.c: 10:     disp -> numero3 = 0;
  1364   00179C  5003               	movf	iniciar_struct_usart@disp^0,w,c
  1365   00179E  6ED9               	movwf	fsr2l,c
  1366   0017A0  6ADA               	clrf	fsr2h,c
  1367   0017A2  0E05               	movlw	5
  1368   0017A4  26D9               	addwf	fsr2l,f,c
  1369   0017A6  0E00               	movlw	0
  1370   0017A8  6EDE               	movwf	postinc2,c
  1371   0017AA  0E00               	movlw	0
  1372   0017AC  6EDD               	movwf	postdec2,c
  1373                           
  1374                           ;proceseusart.c: 11:     disp -> valor = 0;
  1375   0017AE  5003               	movf	iniciar_struct_usart@disp^0,w,c
  1376   0017B0  6ED9               	movwf	fsr2l,c
  1377   0017B2  6ADA               	clrf	fsr2h,c
  1378   0017B4  0E00               	movlw	0
  1379   0017B6  6EDF               	movwf	indf2,c
  1380                           
  1381                           ;proceseusart.c: 12:     disp -> recibir_dato_completo = 0;
  1382   0017B8  5003               	movf	iniciar_struct_usart@disp^0,w,c
  1383   0017BA  6ED9               	movwf	fsr2l,c
  1384   0017BC  6ADA               	clrf	fsr2h,c
  1385   0017BE  0E09               	movlw	9
  1386   0017C0  26D9               	addwf	fsr2l,f,c
  1387   0017C2  0E00               	movlw	0
  1388   0017C4  6EDF               	movwf	indf2,c
  1389                           
  1390                           ;proceseusart.c: 13:     disp -> esperar_datos_eusart = 0;
  1391   0017C6  5003               	movf	iniciar_struct_usart@disp^0,w,c
  1392   0017C8  6ED9               	movwf	fsr2l,c
  1393   0017CA  6ADA               	clrf	fsr2h,c
  1394   0017CC  0E0A               	movlw	10
  1395   0017CE  26D9               	addwf	fsr2l,f,c
  1396   0017D0  0E00               	movlw	0
  1397   0017D2  6EDF               	movwf	indf2,c
  1398                           
  1399                           ;proceseusart.c: 14:     disp -> caso = 0;
  1400   0017D4  5003               	movf	iniciar_struct_usart@disp^0,w,c
  1401   0017D6  6ED9               	movwf	fsr2l,c
  1402   0017D8  6ADA               	clrf	fsr2h,c
  1403   0017DA  0E07               	movlw	7
  1404   0017DC  26D9               	addwf	fsr2l,f,c
  1405   0017DE  0E00               	movlw	0
  1406   0017E0  6EDE               	movwf	postinc2,c
  1407   0017E2  0E00               	movlw	0
  1408   0017E4  6EDD               	movwf	postdec2,c
  1409   0017E6  0012               	return		;funcret
  1410   0017E8                     __end_of_iniciar_struct_usart:
  1411                           	callstack 0
  1412                           
  1413 ;; *************** function _enviar_Eusart *****************
  1414 ;; Defined at:
  1415 ;;		line 61 in file "proceseusart.c"
  1416 ;; Parameters:    Size  Location     Type
  1417 ;;  valor           2   10[COMRAM] int 
  1418 ;; Auto vars:     Size  Location     Type
  1419 ;;		None
  1420 ;; Return value:  Size  Location     Type
  1421 ;;                  1    wreg      void 
  1422 ;; Registers used:
  1423 ;;		None
  1424 ;; Tracked objects:
  1425 ;;		On entry : 0/3E
  1426 ;;		On exit  : 0/0
  1427 ;;		Unchanged: 0/0
  1428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1429 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1432 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1433 ;;Total ram usage:        2 bytes
  1434 ;; Hardware stack levels used: 1
  1435 ;; Hardware stack levels required when called: 4
  1436 ;; This function calls:
  1437 ;;		Nothing
  1438 ;; This function is called by:
  1439 ;;		_main
  1440 ;; This function uses a non-reentrant model
  1441 ;;
  1442                           
  1443                           	psect	text5
  1444   001B8A                     __ptext5:
  1445                           	callstack 0
  1446   001B8A                     _enviar_Eusart:
  1447                           	callstack 26
  1448                           
  1449                           ;proceseusart.c: 62:     U1TXB = valor;
  1450                           
  1451                           ;incstack = 0
  1452   001B8A  0060  F02F  FDEA   	movff	enviar_Eusart@valor,15850	;volatile
  1453   001B90  0012               	return		;funcret
  1454   001B92                     __end_of_enviar_Eusart:
  1455                           	callstack 0
  1456                           
  1457 ;; *************** function _dato_recibido_completo *****************
  1458 ;; Defined at:
  1459 ;;		line 72 in file "proceseusart.c"
  1460 ;; Parameters:    Size  Location     Type
  1461 ;;  disp            1    2[COMRAM] PTR struct usart
  1462 ;;		 -> main@disp(11), 
  1463 ;; Auto vars:     Size  Location     Type
  1464 ;;		None
  1465 ;; Return value:  Size  Location     Type
  1466 ;;                  1    wreg      _Bool 
  1467 ;; Registers used:
  1468 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1469 ;; Tracked objects:
  1470 ;;		On entry : 0/3E
  1471 ;;		On exit  : 0/0
  1472 ;;		Unchanged: 0/0
  1473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1474 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1477 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1478 ;;Total ram usage:        1 bytes
  1479 ;; Hardware stack levels used: 1
  1480 ;; Hardware stack levels required when called: 4
  1481 ;; This function calls:
  1482 ;;		Nothing
  1483 ;; This function is called by:
  1484 ;;		_main
  1485 ;; This function uses a non-reentrant model
  1486 ;;
  1487                           
  1488                           	psect	text6
  1489   001B20                     __ptext6:
  1490                           	callstack 0
  1491   001B20                     _dato_recibido_completo:
  1492                           	callstack 26
  1493                           
  1494                           ;proceseusart.c: 74:     return disp -> recibir_dato_completo;
  1495                           
  1496                           ;incstack = 0
  1497   001B20  5003               	movf	dato_recibido_completo@disp^0,w,c
  1498   001B22  6ED9               	movwf	fsr2l,c
  1499   001B24  6ADA               	clrf	fsr2h,c
  1500   001B26  0E09               	movlw	9
  1501   001B28  26D9               	addwf	fsr2l,f,c
  1502   001B2A  50DF               	movf	indf2,w,c
  1503   001B2C  0012               	return		;funcret
  1504   001B2E                     __end_of_dato_recibido_completo:
  1505                           	callstack 0
  1506                           
  1507 ;; *************** function _cola_get *****************
  1508 ;; Defined at:
  1509 ;;		line 43 in file "cola.c"
  1510 ;; Parameters:    Size  Location     Type
  1511 ;;  c               1    6[COMRAM] PTR struct eCola
  1512 ;;		 -> main@cola(21), 
  1513 ;; Auto vars:     Size  Location     Type
  1514 ;;  temp            1    9[COMRAM] unsigned char 
  1515 ;; Return value:  Size  Location     Type
  1516 ;;                  1    wreg      unsigned char 
  1517 ;; Registers used:
  1518 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1519 ;; Tracked objects:
  1520 ;;		On entry : 0/3E
  1521 ;;		On exit  : 0/0
  1522 ;;		Unchanged: 0/0
  1523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1524 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1525 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1526 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1527 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1528 ;;Total ram usage:        4 bytes
  1529 ;; Hardware stack levels used: 1
  1530 ;; Hardware stack levels required when called: 5
  1531 ;; This function calls:
  1532 ;;		_cola_vacia
  1533 ;; This function is called by:
  1534 ;;		_main
  1535 ;; This function uses a non-reentrant model
  1536 ;;
  1537                           
  1538                           	psect	text7
  1539   0015F8                     __ptext7:
  1540                           	callstack 0
  1541   0015F8                     _cola_get:
  1542                           	callstack 25
  1543                           
  1544                           ;cola.c: 43: DATOCOLA cola_get(eCola* c);cola.c: 44: {;cola.c: 48:     DATOCOLA temp;;co
      +                          la.c: 49:     if(!cola_vacia(c)){
  1545                           
  1546                           ;incstack = 0
  1547   0015F8  C007  F003         	movff	cola_get@c,cola_vacia@c
  1548   0015FC  ECA4  F00C         	call	_cola_vacia	;wreg free
  1549   001600  5003               	movf	?_cola_vacia^0,w,c
  1550   001602  1004               	iorwf	(?_cola_vacia+1)^0,w,c
  1551   001604  A4D8               	btfss	status,2,c
  1552   001606  D01E               	goto	l2643
  1553                           
  1554                           ;cola.c: 50:         temp=c->data[c->salida];
  1555   001608  5007               	movf	cola_get@c^0,w,c
  1556   00160A  6ED9               	movwf	fsr2l,c
  1557   00160C  6ADA               	clrf	fsr2h,c
  1558   00160E  0E11               	movlw	17
  1559   001610  26D9               	addwf	fsr2l,f,c
  1560   001612  50DF               	movf	indf2,w,c
  1561   001614  6E08               	movwf	??_cola_get^0,c
  1562   001616  5007               	movf	cola_get@c^0,w,c
  1563   001618  2408               	addwf	??_cola_get^0,w,c
  1564   00161A  6ED9               	movwf	fsr2l,c
  1565   00161C  6ADA               	clrf	fsr2h,c
  1566   00161E  50DF               	movf	indf2,w,c
  1567   001620  6E0A               	movwf	cola_get@temp^0,c
  1568                           
  1569                           ;cola.c: 51:         c->salida++;
  1570   001622  5007               	movf	cola_get@c^0,w,c
  1571   001624  6ED9               	movwf	fsr2l,c
  1572   001626  6ADA               	clrf	fsr2h,c
  1573   001628  0E11               	movlw	17
  1574   00162A  26D9               	addwf	fsr2l,f,c
  1575   00162C  2ADE               	incf	postinc2,f,c
  1576   00162E  0E00               	movlw	0
  1577   001630  22DD               	addwfc	postdec2,f,c
  1578                           
  1579                           ;cola.c: 52:         c->peso--;
  1580   001632  5007               	movf	cola_get@c^0,w,c
  1581   001634  6ED9               	movwf	fsr2l,c
  1582   001636  6ADA               	clrf	fsr2h,c
  1583   001638  0E13               	movlw	19
  1584   00163A  26D9               	addwf	fsr2l,f,c
  1585   00163C  06DE               	decf	postinc2,f,c
  1586   00163E  0E00               	movlw	0
  1587   001640  5ADD               	subwfb	postdec2,f,c
  1588                           
  1589                           ;cola.c: 53:     }
  1590   001642  D002               	goto	l2647
  1591   001644                     l2643:
  1592                           
  1593                           ;cola.c: 55:     {;cola.c: 56:         return 1;
  1594   001644  0E01               	movlw	1
  1595   001646  0012               	return	
  1596   001648                     l2647:
  1597                           
  1598                           ;cola.c: 60:     if (c->salida >=15)
  1599   001648  5007               	movf	cola_get@c^0,w,c
  1600   00164A  6ED9               	movwf	fsr2l,c
  1601   00164C  6ADA               	clrf	fsr2h,c
  1602   00164E  0E11               	movlw	17
  1603   001650  26D9               	addwf	fsr2l,f,c
  1604   001652  0E01               	movlw	1
  1605   001654  BEDB               	btfsc	plusw2,7,c
  1606   001656  D010               	goto	l2651
  1607   001658  0E01               	movlw	1
  1608   00165A  50DB               	movf	plusw2,w,c
  1609   00165C  E104               	bnz	u1010
  1610   00165E  0E0F               	movlw	15
  1611   001660  5CDE               	subwf	postinc2,w,c
  1612   001662  A0D8               	btfss	status,0,c
  1613   001664  D009               	goto	l2651
  1614   001666                     u1010:
  1615                           
  1616                           ;cola.c: 61:         c->salida=0;
  1617   001666  5007               	movf	cola_get@c^0,w,c
  1618   001668  6ED9               	movwf	fsr2l,c
  1619   00166A  6ADA               	clrf	fsr2h,c
  1620   00166C  0E11               	movlw	17
  1621   00166E  26D9               	addwf	fsr2l,f,c
  1622   001670  0E00               	movlw	0
  1623   001672  6EDE               	movwf	postinc2,c
  1624   001674  0E00               	movlw	0
  1625   001676  6EDD               	movwf	postdec2,c
  1626   001678                     l2651:
  1627                           
  1628                           ;cola.c: 62:     return temp;
  1629   001678  500A               	movf	cola_get@temp^0,w,c
  1630   00167A  0012               	return		;funcret
  1631   00167C                     __end_of_cola_get:
  1632                           	callstack 0
  1633                           
  1634 ;; *************** function _cola_vacia *****************
  1635 ;; Defined at:
  1636 ;;		line 85 in file "cola.c"
  1637 ;; Parameters:    Size  Location     Type
  1638 ;;  c               1    2[COMRAM] PTR struct eCola
  1639 ;;		 -> main@cola(21), 
  1640 ;; Auto vars:     Size  Location     Type
  1641 ;;		None
  1642 ;; Return value:  Size  Location     Type
  1643 ;;                  2    2[COMRAM] int 
  1644 ;; Registers used:
  1645 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1646 ;; Tracked objects:
  1647 ;;		On entry : 0/3E
  1648 ;;		On exit  : 0/0
  1649 ;;		Unchanged: 0/0
  1650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1651 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1653 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1654 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1655 ;;Total ram usage:        4 bytes
  1656 ;; Hardware stack levels used: 1
  1657 ;; Hardware stack levels required when called: 4
  1658 ;; This function calls:
  1659 ;;		Nothing
  1660 ;; This function is called by:
  1661 ;;		_main
  1662 ;;		_cola_get
  1663 ;; This function uses a non-reentrant model
  1664 ;;
  1665                           
  1666                           	psect	text8
  1667   001948                     __ptext8:
  1668                           	callstack 0
  1669   001948                     _cola_vacia:
  1670                           	callstack 26
  1671                           
  1672                           ;cola.c: 85: int cola_vacia(eCola* c);cola.c: 86: {;cola.c: 87:     if (c->peso<=0){
  1673                           
  1674                           ;incstack = 0
  1675   001948  5003               	movf	cola_vacia@c^0,w,c
  1676   00194A  6ED9               	movwf	fsr2l,c
  1677   00194C  6ADA               	clrf	fsr2h,c
  1678   00194E  0E13               	movlw	19
  1679   001950  26D9               	addwf	fsr2l,f,c
  1680   001952  0E01               	movlw	1
  1681   001954  BEDB               	btfsc	plusw2,7,c
  1682   001956  D006               	goto	u850
  1683   001958  0E01               	movlw	1
  1684   00195A  50DB               	movf	plusw2,w,c
  1685   00195C  E108               	bnz	l2505
  1686   00195E  04DE               	decf	postinc2,w,c
  1687   001960  B0D8               	btfsc	status,0,c
  1688   001962  D005               	goto	l2505
  1689   001964                     u850:
  1690                           
  1691                           ;cola.c: 88:         return 1;
  1692   001964  0E00               	movlw	0
  1693   001966  6E04               	movwf	(?_cola_vacia+1)^0,c
  1694   001968  0E01               	movlw	1
  1695   00196A  6E03               	movwf	?_cola_vacia^0,c
  1696   00196C  0012               	return	
  1697   00196E                     l2505:
  1698                           
  1699                           ;cola.c: 91:         return 0;
  1700   00196E  0E00               	movlw	0
  1701   001970  6E04               	movwf	(?_cola_vacia+1)^0,c
  1702   001972  0E00               	movlw	0
  1703   001974  6E03               	movwf	?_cola_vacia^0,c
  1704   001976  0012               	return		;funcret
  1705   001978                     __end_of_cola_vacia:
  1706                           	callstack 0
  1707                           
  1708 ;; *************** function _cola_add *****************
  1709 ;; Defined at:
  1710 ;;		line 18 in file "cola.c"
  1711 ;; Parameters:    Size  Location     Type
  1712 ;;  c               1    6[COMRAM] PTR struct eCola
  1713 ;;		 -> main@cola(21), 
  1714 ;;  dato            1    7[COMRAM] unsigned char 
  1715 ;; Auto vars:     Size  Location     Type
  1716 ;;		None
  1717 ;; Return value:  Size  Location     Type
  1718 ;;                  1    wreg      unsigned char 
  1719 ;; Registers used:
  1720 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1721 ;; Tracked objects:
  1722 ;;		On entry : 0/3E
  1723 ;;		On exit  : 0/0
  1724 ;;		Unchanged: 0/0
  1725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1726 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1728 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1729 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1730 ;;Total ram usage:        4 bytes
  1731 ;; Hardware stack levels used: 1
  1732 ;; Hardware stack levels required when called: 5
  1733 ;; This function calls:
  1734 ;;		_cola_llena
  1735 ;; This function is called by:
  1736 ;;		_main
  1737 ;; This function uses a non-reentrant model
  1738 ;;
  1739                           
  1740                           	psect	text9
  1741   0016FA                     __ptext9:
  1742                           	callstack 0
  1743   0016FA                     _cola_add:
  1744                           	callstack 25
  1745                           
  1746                           ;cola.c: 18: char cola_add(eCola* c,DATOCOLA dato);cola.c: 19: {;cola.c: 24:     if(!col
      +                          a_llena(c)){
  1747                           
  1748                           ;incstack = 0
  1749   0016FA  C007  F003         	movff	cola_add@c,cola_llena@c
  1750   0016FE  EC8B  F00C         	call	_cola_llena	;wreg free
  1751   001702  5003               	movf	?_cola_llena^0,w,c
  1752   001704  1004               	iorwf	(?_cola_llena+1)^0,w,c
  1753   001706  A4D8               	btfss	status,2,c
  1754   001708  0012               	return	
  1755                           
  1756                           ;cola.c: 25:         c->data[c->entrada]=dato;
  1757   00170A  5007               	movf	cola_add@c^0,w,c
  1758   00170C  6ED9               	movwf	fsr2l,c
  1759   00170E  6ADA               	clrf	fsr2h,c
  1760   001710  0E0F               	movlw	15
  1761   001712  26D9               	addwf	fsr2l,f,c
  1762   001714  50DF               	movf	indf2,w,c
  1763   001716  6E09               	movwf	??_cola_add^0,c
  1764   001718  5007               	movf	cola_add@c^0,w,c
  1765   00171A  2409               	addwf	??_cola_add^0,w,c
  1766   00171C  6ED9               	movwf	fsr2l,c
  1767   00171E  6ADA               	clrf	fsr2h,c
  1768   001720  0060  F023  FFDF   	movff	cola_add@dato,indf2
  1769                           
  1770                           ;cola.c: 26:         c->entrada++;
  1771   001726  5007               	movf	cola_add@c^0,w,c
  1772   001728  6ED9               	movwf	fsr2l,c
  1773   00172A  6ADA               	clrf	fsr2h,c
  1774   00172C  0E0F               	movlw	15
  1775   00172E  26D9               	addwf	fsr2l,f,c
  1776   001730  2ADE               	incf	postinc2,f,c
  1777   001732  0E00               	movlw	0
  1778   001734  22DD               	addwfc	postdec2,f,c
  1779                           
  1780                           ;cola.c: 27:         c->peso++;
  1781   001736  5007               	movf	cola_add@c^0,w,c
  1782   001738  6ED9               	movwf	fsr2l,c
  1783   00173A  6ADA               	clrf	fsr2h,c
  1784   00173C  0E13               	movlw	19
  1785   00173E  26D9               	addwf	fsr2l,f,c
  1786   001740  2ADE               	incf	postinc2,f,c
  1787   001742  0E00               	movlw	0
  1788   001744  22DD               	addwfc	postdec2,f,c
  1789                           
  1790                           ;cola.c: 35:     if (c->entrada >=15)
  1791                           
  1792                           ;cola.c: 28:     }
  1793   001746  5007               	movf	cola_add@c^0,w,c
  1794   001748  6ED9               	movwf	fsr2l,c
  1795   00174A  6ADA               	clrf	fsr2h,c
  1796   00174C  0E0F               	movlw	15
  1797   00174E  26D9               	addwf	fsr2l,f,c
  1798   001750  0E01               	movlw	1
  1799   001752  BEDB               	btfsc	plusw2,7,c
  1800   001754  0012               	return	
  1801   001756  0E01               	movlw	1
  1802   001758  50DB               	movf	plusw2,w,c
  1803   00175A  E104               	bnz	u990
  1804   00175C  0E0F               	movlw	15
  1805   00175E  5CDE               	subwf	postinc2,w,c
  1806   001760  A0D8               	btfss	status,0,c
  1807   001762  0012               	return	
  1808   001764                     u990:
  1809                           
  1810                           ;cola.c: 36:         c->entrada=0;
  1811   001764  5007               	movf	cola_add@c^0,w,c
  1812   001766  6ED9               	movwf	fsr2l,c
  1813   001768  6ADA               	clrf	fsr2h,c
  1814   00176A  0E0F               	movlw	15
  1815   00176C  26D9               	addwf	fsr2l,f,c
  1816   00176E  0E00               	movlw	0
  1817   001770  6EDE               	movwf	postinc2,c
  1818   001772  0E00               	movlw	0
  1819   001774  6EDD               	movwf	postdec2,c
  1820   001776  0012               	return		;funcret
  1821   001778                     __end_of_cola_add:
  1822                           	callstack 0
  1823                           
  1824 ;; *************** function _cola_llena *****************
  1825 ;; Defined at:
  1826 ;;		line 75 in file "cola.c"
  1827 ;; Parameters:    Size  Location     Type
  1828 ;;  c               1    2[COMRAM] PTR struct eCola
  1829 ;;		 -> main@cola(21), 
  1830 ;; Auto vars:     Size  Location     Type
  1831 ;;		None
  1832 ;; Return value:  Size  Location     Type
  1833 ;;                  2    2[COMRAM] int 
  1834 ;; Registers used:
  1835 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1836 ;; Tracked objects:
  1837 ;;		On entry : 0/3E
  1838 ;;		On exit  : 0/0
  1839 ;;		Unchanged: 0/0
  1840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1841 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1843 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1844 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1845 ;;Total ram usage:        4 bytes
  1846 ;; Hardware stack levels used: 1
  1847 ;; Hardware stack levels required when called: 4
  1848 ;; This function calls:
  1849 ;;		Nothing
  1850 ;; This function is called by:
  1851 ;;		_cola_add
  1852 ;; This function uses a non-reentrant model
  1853 ;;
  1854                           
  1855                           	psect	text10
  1856   001916                     __ptext10:
  1857                           	callstack 0
  1858   001916                     _cola_llena:
  1859                           	callstack 25
  1860                           
  1861                           ;cola.c: 76:     if (c->peso>=15){
  1862                           
  1863                           ;incstack = 0
  1864   001916  5003               	movf	cola_llena@c^0,w,c
  1865   001918  6ED9               	movwf	fsr2l,c
  1866   00191A  6ADA               	clrf	fsr2h,c
  1867   00191C  0E13               	movlw	19
  1868   00191E  26D9               	addwf	fsr2l,f,c
  1869   001920  0E01               	movlw	1
  1870   001922  BEDB               	btfsc	plusw2,7,c
  1871   001924  D00C               	goto	l2517
  1872   001926  0E01               	movlw	1
  1873   001928  50DB               	movf	plusw2,w,c
  1874   00192A  E104               	bnz	u860
  1875   00192C  0E0F               	movlw	15
  1876   00192E  5CDE               	subwf	postinc2,w,c
  1877   001930  A0D8               	btfss	status,0,c
  1878   001932  D005               	goto	l2517
  1879   001934                     u860:
  1880                           
  1881                           ;cola.c: 77:         return 1;
  1882   001934  0E00               	movlw	0
  1883   001936  6E04               	movwf	(?_cola_llena+1)^0,c
  1884   001938  0E01               	movlw	1
  1885   00193A  6E03               	movwf	?_cola_llena^0,c
  1886   00193C  0012               	return	
  1887   00193E                     l2517:
  1888                           
  1889                           ;cola.c: 80:         return 0;
  1890   00193E  0E00               	movlw	0
  1891   001940  6E04               	movwf	(?_cola_llena+1)^0,c
  1892   001942  0E00               	movlw	0
  1893   001944  6E03               	movwf	?_cola_llena^0,c
  1894   001946  0012               	return		;funcret
  1895   001948                     __end_of_cola_llena:
  1896                           	callstack 0
  1897                           
  1898 ;; *************** function _actualize_valor *****************
  1899 ;; Defined at:
  1900 ;;		line 29 in file "processpi.c"
  1901 ;; Parameters:    Size  Location     Type
  1902 ;;  spi             1    2[COMRAM] PTR struct structspi
  1903 ;;		 -> main@spi(12), 
  1904 ;;  valorspi        2    3[COMRAM] unsigned int 
  1905 ;; Auto vars:     Size  Location     Type
  1906 ;;		None
  1907 ;; Return value:  Size  Location     Type
  1908 ;;                  1    wreg      void 
  1909 ;; Registers used:
  1910 ;;		wreg, fsr2l, fsr2h, status,2
  1911 ;; Tracked objects:
  1912 ;;		On entry : 0/39
  1913 ;;		On exit  : 0/0
  1914 ;;		Unchanged: 0/0
  1915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1916 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1919 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1920 ;;Total ram usage:        3 bytes
  1921 ;; Hardware stack levels used: 1
  1922 ;; Hardware stack levels required when called: 4
  1923 ;; This function calls:
  1924 ;;		Nothing
  1925 ;; This function is called by:
  1926 ;;		_main
  1927 ;; This function uses a non-reentrant model
  1928 ;;
  1929                           
  1930                           	psect	text11
  1931   001AC8                     __ptext11:
  1932                           	callstack 0
  1933   001AC8                     _actualize_valor:
  1934                           	callstack 26
  1935                           
  1936                           ;processpi.c: 30:     spi -> valor = valorspi;
  1937                           
  1938                           ;incstack = 0
  1939   001AC8  5003               	movf	actualize_valor@spi^0,w,c
  1940   001ACA  6ED9               	movwf	fsr2l,c
  1941   001ACC  6ADA               	clrf	fsr2h,c
  1942   001ACE  0060  F013  FFDE   	movff	actualize_valor@valorspi,postinc2
  1943   001AD4  0060  F017  FFDD   	movff	actualize_valor@valorspi+1,postdec2
  1944   001ADA  0012               	return		;funcret
  1945   001ADC                     __end_of_actualize_valor:
  1946                           	callstack 0
  1947                           
  1948 ;; *************** function _actualizar_recibido_Eusart *****************
  1949 ;; Defined at:
  1950 ;;		line 79 in file "proceseusart.c"
  1951 ;; Parameters:    Size  Location     Type
  1952 ;;  disp            1    8[COMRAM] PTR struct usart
  1953 ;;		 -> main@disp(11), 
  1954 ;; Auto vars:     Size  Location     Type
  1955 ;;		None
  1956 ;; Return value:  Size  Location     Type
  1957 ;;                  2    8[COMRAM] int 
  1958 ;; Registers used:
  1959 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1960 ;; Tracked objects:
  1961 ;;		On entry : 0/3E
  1962 ;;		On exit  : 0/0
  1963 ;;		Unchanged: 0/0
  1964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1965 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1967 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1968 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1969 ;;Total ram usage:       10 bytes
  1970 ;; Hardware stack levels used: 1
  1971 ;; Hardware stack levels required when called: 5
  1972 ;; This function calls:
  1973 ;;		___wmul
  1974 ;; This function is called by:
  1975 ;;		_main
  1976 ;; This function uses a non-reentrant model
  1977 ;;
  1978                           
  1979                           	psect	text12
  1980   0014DA                     __ptext12:
  1981                           	callstack 0
  1982   0014DA                     _actualizar_recibido_Eusart:
  1983                           	callstack 25
  1984                           
  1985                           ;proceseusart.c: 80:     disp -> recibir_dato_completo = 0;
  1986                           
  1987                           ;incstack = 0
  1988   0014DA  5009               	movf	actualizar_recibido_Eusart@disp^0,w,c
  1989   0014DC  6ED9               	movwf	fsr2l,c
  1990   0014DE  6ADA               	clrf	fsr2h,c
  1991   0014E0  0E09               	movlw	9
  1992   0014E2  26D9               	addwf	fsr2l,f,c
  1993   0014E4  0E00               	movlw	0
  1994   0014E6  6EDF               	movwf	indf2,c
  1995                           
  1996                           ;proceseusart.c: 81:     return ((disp -> numero1 - 48)*100 + (disp -> numero2 - 48)*10 
      +                          + (disp -> numero3 - 48));
  1997   0014E8  5009               	movf	actualizar_recibido_Eusart@disp^0,w,c
  1998   0014EA  6ED9               	movwf	fsr2l,c
  1999   0014EC  6ADA               	clrf	fsr2h,c
  2000   0014EE  0E05               	movlw	5
  2001   0014F0  26D9               	addwf	fsr2l,f,c
  2002   0014F2  006F FF78  F00B    	movff	postinc2,??_actualizar_recibido_Eusart
  2003   0014F8  006F FF74  F00C    	movff	postdec2,??_actualizar_recibido_Eusart+1
  2004   0014FE  5009               	movf	actualizar_recibido_Eusart@disp^0,w,c
  2005   001500  6ED9               	movwf	fsr2l,c
  2006   001502  6ADA               	clrf	fsr2h,c
  2007   001504  0E01               	movlw	1
  2008   001506  26D9               	addwf	fsr2l,f,c
  2009   001508  006F FF78  F003    	movff	postinc2,___wmul@multiplier
  2010   00150E  006F FF74  F004    	movff	postdec2,___wmul@multiplier+1
  2011   001514  0E00               	movlw	0
  2012   001516  6E06               	movwf	(___wmul@multiplicand+1)^0,c
  2013   001518  0E64               	movlw	100
  2014   00151A  6E05               	movwf	___wmul@multiplicand^0,c
  2015   00151C  ECD1  F00C         	call	___wmul	;wreg free
  2016   001520  C003  F00D         	movff	?___wmul,??_actualizar_recibido_Eusart+2
  2017   001524  C004  F00E         	movff	?___wmul+1,??_actualizar_recibido_Eusart+3
  2018   001528  5009               	movf	actualizar_recibido_Eusart@disp^0,w,c
  2019   00152A  6ED9               	movwf	fsr2l,c
  2020   00152C  6ADA               	clrf	fsr2h,c
  2021   00152E  0E03               	movlw	3
  2022   001530  26D9               	addwf	fsr2l,f,c
  2023   001532  006F FF78  F003    	movff	postinc2,___wmul@multiplier
  2024   001538  006F FF74  F004    	movff	postdec2,___wmul@multiplier+1
  2025   00153E  0E00               	movlw	0
  2026   001540  6E06               	movwf	(___wmul@multiplicand+1)^0,c
  2027   001542  0E0A               	movlw	10
  2028   001544  6E05               	movwf	___wmul@multiplicand^0,c
  2029   001546  ECD1  F00C         	call	___wmul	;wreg free
  2030   00154A  5003               	movf	?___wmul^0,w,c
  2031   00154C  240D               	addwf	(??_actualizar_recibido_Eusart+2)^0,w,c
  2032   00154E  6E0F               	movwf	(??_actualizar_recibido_Eusart+4)^0,c
  2033   001550  5004               	movf	(?___wmul+1)^0,w,c
  2034   001552  200E               	addwfc	(??_actualizar_recibido_Eusart+3)^0,w,c
  2035   001554  6E10               	movwf	(??_actualizar_recibido_Eusart+5)^0,c
  2036   001556  500B               	movf	??_actualizar_recibido_Eusart^0,w,c
  2037   001558  240F               	addwf	(??_actualizar_recibido_Eusart+4)^0,w,c
  2038   00155A  6E11               	movwf	(??_actualizar_recibido_Eusart+6)^0,c
  2039   00155C  500C               	movf	(??_actualizar_recibido_Eusart+1)^0,w,c
  2040   00155E  2010               	addwfc	(??_actualizar_recibido_Eusart+5)^0,w,c
  2041   001560  6E12               	movwf	(??_actualizar_recibido_Eusart+7)^0,c
  2042   001562  0E30               	movlw	48
  2043   001564  2411               	addwf	(??_actualizar_recibido_Eusart+6)^0,w,c
  2044   001566  6E09               	movwf	?_actualizar_recibido_Eusart^0,c
  2045   001568  0EEB               	movlw	235
  2046   00156A  2012               	addwfc	(??_actualizar_recibido_Eusart+7)^0,w,c
  2047   00156C  6E0A               	movwf	(?_actualizar_recibido_Eusart+1)^0,c
  2048   00156E  0012               	return		;funcret
  2049   001570                     __end_of_actualizar_recibido_Eusart:
  2050                           	callstack 0
  2051                           
  2052 ;; *************** function ___wmul *****************
  2053 ;; Defined at:
  2054 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  2055 ;; Parameters:    Size  Location     Type
  2056 ;;  multiplier      2    2[COMRAM] unsigned int 
  2057 ;;  multiplicand    2    4[COMRAM] unsigned int 
  2058 ;; Auto vars:     Size  Location     Type
  2059 ;;  product         2    6[COMRAM] unsigned int 
  2060 ;; Return value:  Size  Location     Type
  2061 ;;                  2    2[COMRAM] unsigned int 
  2062 ;; Registers used:
  2063 ;;		wreg, status,2, status,0, prodl, prodh
  2064 ;; Tracked objects:
  2065 ;;		On entry : 0/3E
  2066 ;;		On exit  : 0/0
  2067 ;;		Unchanged: 0/0
  2068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2069 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2070 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2072 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2073 ;;Total ram usage:        6 bytes
  2074 ;; Hardware stack levels used: 1
  2075 ;; Hardware stack levels required when called: 4
  2076 ;; This function calls:
  2077 ;;		Nothing
  2078 ;; This function is called by:
  2079 ;;		_actualizar_recibido_Eusart
  2080 ;; This function uses a non-reentrant model
  2081 ;;
  2082                           
  2083                           	psect	text13
  2084   0019A2                     __ptext13:
  2085                           	callstack 0
  2086   0019A2                     ___wmul:
  2087                           	callstack 25
  2088                           
  2089                           ;incstack = 0
  2090   0019A2  5003               	movf	___wmul@multiplier^0,w,c
  2091   0019A4  0205               	mulwf	___wmul@multiplicand^0,c
  2092   0019A6  006F FFCC  F007    	movff	prodl,___wmul@product
  2093   0019AC  006F FFD0  F008    	movff	prodh,___wmul@product+1
  2094   0019B2  5003               	movf	___wmul@multiplier^0,w,c
  2095   0019B4  0206               	mulwf	(___wmul@multiplicand+1)^0,c
  2096   0019B6  50F3               	movf	243,w,c
  2097   0019B8  2608               	addwf	(___wmul@product+1)^0,f,c
  2098   0019BA  5004               	movf	(___wmul@multiplier+1)^0,w,c
  2099   0019BC  0205               	mulwf	___wmul@multiplicand^0,c
  2100   0019BE  50F3               	movf	243,w,c
  2101   0019C0  2608               	addwf	(___wmul@product+1)^0,f,c
  2102   0019C2  C007  F003         	movff	___wmul@product,?___wmul
  2103   0019C6  C008  F004         	movff	___wmul@product+1,?___wmul+1
  2104   0019CA  0012               	return		;funcret
  2105   0019CC                     __end_of___wmul:
  2106                           	callstack 0
  2107                           
  2108 ;; *************** function _UART1_is_tx_ready *****************
  2109 ;; Defined at:
  2110 ;;		line 165 in file "mcc_generated_files/uart1.c"
  2111 ;; Parameters:    Size  Location     Type
  2112 ;;		None
  2113 ;; Auto vars:     Size  Location     Type
  2114 ;;		None
  2115 ;; Return value:  Size  Location     Type
  2116 ;;                  1    wreg      _Bool 
  2117 ;; Registers used:
  2118 ;;		wreg, status,2
  2119 ;; Tracked objects:
  2120 ;;		On entry : 0/3E
  2121 ;;		On exit  : 0/0
  2122 ;;		Unchanged: 0/0
  2123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2127 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2128 ;;Total ram usage:        0 bytes
  2129 ;; Hardware stack levels used: 1
  2130 ;; Hardware stack levels required when called: 4
  2131 ;; This function calls:
  2132 ;;		Nothing
  2133 ;; This function is called by:
  2134 ;;		_main
  2135 ;; This function uses a non-reentrant model
  2136 ;;
  2137                           
  2138                           	psect	text14
  2139   001B2E                     __ptext14:
  2140                           	callstack 0
  2141   001B2E                     _UART1_is_tx_ready:
  2142                           	callstack 26
  2143                           
  2144                           ;mcc_generated_files/uart1.c: 167:     return (uart1TxBufferRemaining ? 1 : 0);
  2145                           
  2146                           ;incstack = 0
  2147   001B2E  5029               	movf	_uart1TxBufferRemaining^0,w,c	;volatile
  2148   001B30  B4D8               	btfsc	status,2,c
  2149   001B32  D002               	goto	u930
  2150   001B34  0E01               	movlw	1
  2151   001B36  0012               	return	
  2152   001B38                     u930:
  2153   001B38  0E00               	movlw	0
  2154   001B3A  0012               	return		;funcret
  2155   001B3C                     __end_of_UART1_is_tx_ready:
  2156                           	callstack 0
  2157                           
  2158 ;; *************** function _UART1_is_rx_ready *****************
  2159 ;; Defined at:
  2160 ;;		line 160 in file "mcc_generated_files/uart1.c"
  2161 ;; Parameters:    Size  Location     Type
  2162 ;;		None
  2163 ;; Auto vars:     Size  Location     Type
  2164 ;;		None
  2165 ;; Return value:  Size  Location     Type
  2166 ;;                  1    wreg      _Bool 
  2167 ;; Registers used:
  2168 ;;		wreg, status,2
  2169 ;; Tracked objects:
  2170 ;;		On entry : 0/3E
  2171 ;;		On exit  : 0/0
  2172 ;;		Unchanged: 0/0
  2173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2177 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2178 ;;Total ram usage:        0 bytes
  2179 ;; Hardware stack levels used: 1
  2180 ;; Hardware stack levels required when called: 4
  2181 ;; This function calls:
  2182 ;;		Nothing
  2183 ;; This function is called by:
  2184 ;;		_main
  2185 ;; This function uses a non-reentrant model
  2186 ;;
  2187                           
  2188                           	psect	text15
  2189   001B3C                     __ptext15:
  2190                           	callstack 0
  2191   001B3C                     _UART1_is_rx_ready:
  2192                           	callstack 26
  2193                           
  2194                           ;mcc_generated_files/uart1.c: 162:     return (uart1RxCount ? 1 : 0);
  2195                           
  2196                           ;incstack = 0
  2197   001B3C  5026               	movf	_uart1RxCount^0,w,c	;volatile
  2198   001B3E  B4D8               	btfsc	status,2,c
  2199   001B40  D002               	goto	u910
  2200   001B42  0E01               	movlw	1
  2201   001B44  0012               	return	
  2202   001B46                     u910:
  2203   001B46  0E00               	movlw	0
  2204   001B48  0012               	return		;funcret
  2205   001B4A                     __end_of_UART1_is_rx_ready:
  2206                           	callstack 0
  2207                           
  2208 ;; *************** function _Tm_Procese_tiempo *****************
  2209 ;; Defined at:
  2210 ;;		line 33 in file "nuestrostimers.c"
  2211 ;; Parameters:    Size  Location     Type
  2212 ;;  ctp             1    2[COMRAM] PTR struct Tm_Periodico
  2213 ;;		 -> main@timer(7), 
  2214 ;; Auto vars:     Size  Location     Type
  2215 ;;		None
  2216 ;; Return value:  Size  Location     Type
  2217 ;;                  1    wreg      void 
  2218 ;; Registers used:
  2219 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2220 ;; Tracked objects:
  2221 ;;		On entry : 3F/39
  2222 ;;		On exit  : 3F/39
  2223 ;;		Unchanged: 3E/0
  2224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2225 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2227 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2228 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2229 ;;Total ram usage:        5 bytes
  2230 ;; Hardware stack levels used: 1
  2231 ;; Hardware stack levels required when called: 4
  2232 ;; This function calls:
  2233 ;;		Nothing
  2234 ;; This function is called by:
  2235 ;;		_main
  2236 ;; This function uses a non-reentrant model
  2237 ;;
  2238                           
  2239                           	psect	text16
  2240   001440                     __ptext16:
  2241                           	callstack 0
  2242   001440                     _Tm_Procese_tiempo:
  2243                           	callstack 26
  2244                           
  2245                           ; BSR set to: 57
  2246                           ;nuestrostimers.c: 33: void Tm_Procese_tiempo (Tm_Periodico *ctp);nuestrostimers.c: 35: 
      +                          {;nuestrostimers.c: 41:  if (ctp->banderas & 0x01U)
  2247                           
  2248                           ;incstack = 0
  2249   001440  5003               	movf	Tm_Procese_tiempo@ctp^0,w,c
  2250   001442  6ED9               	movwf	fsr2l,c
  2251   001444  6ADA               	clrf	fsr2h,c
  2252   001446  0E06               	movlw	6
  2253   001448  26D9               	addwf	fsr2l,f,c
  2254   00144A  A0DF               	btfss	indf2,0,c
  2255   00144C  D022               	goto	l2619
  2256                           
  2257                           ; BSR set to: 57
  2258                           ;nuestrostimers.c: 43:  {;nuestrostimers.c: 45:   --(ctp->contador);
  2259   00144E  5003               	movf	Tm_Procese_tiempo@ctp^0,w,c
  2260   001450  6ED9               	movwf	fsr2l,c
  2261   001452  6ADA               	clrf	fsr2h,c
  2262   001454  06DE               	decf	postinc2,f,c
  2263   001456  0E00               	movlw	0
  2264   001458  5ADD               	subwfb	postdec2,f,c
  2265                           
  2266                           ;nuestrostimers.c: 47:   if ( !(ctp->contador) )
  2267   00145A  5003               	movf	Tm_Procese_tiempo@ctp^0,w,c
  2268   00145C  6ED9               	movwf	fsr2l,c
  2269   00145E  6ADA               	clrf	fsr2h,c
  2270   001460  50DE               	movf	postinc2,w,c
  2271   001462  10DE               	iorwf	postinc2,w,c
  2272   001464  A4D8               	btfss	status,2,c
  2273   001466  D015               	goto	l2619
  2274                           
  2275                           ; BSR set to: 57
  2276                           ;nuestrostimers.c: 49:   {;nuestrostimers.c: 51:    ctp->banderas |= 0x02U;
  2277   001468  5003               	movf	Tm_Procese_tiempo@ctp^0,w,c
  2278   00146A  6ED9               	movwf	fsr2l,c
  2279   00146C  6ADA               	clrf	fsr2h,c
  2280   00146E  0E06               	movlw	6
  2281   001470  26D9               	addwf	fsr2l,f,c
  2282   001472  0E00               	movlw	0
  2283   001474  82DB               	bsf	plusw2,1,c
  2284                           
  2285                           ; BSR set to: 57
  2286                           ;nuestrostimers.c: 53:    ctp->contador = ctp->periodo;
  2287   001476  5003               	movf	Tm_Procese_tiempo@ctp^0,w,c
  2288   001478  6ED9               	movwf	fsr2l,c
  2289   00147A  6ADA               	clrf	fsr2h,c
  2290   00147C  0E02               	movlw	2
  2291   00147E  26D9               	addwf	fsr2l,f,c
  2292   001480  5003               	movf	Tm_Procese_tiempo@ctp^0,w,c
  2293   001482  6EE1               	movwf	fsr1l,c
  2294   001484  6AE2               	clrf	fsr1h,c
  2295   001486  006F FF7B FFE6     	movff	postinc2,postinc1
  2296   00148C  006F FF77 FFE5     	movff	postdec2,postdec1
  2297   001492                     l2619:
  2298                           
  2299                           ; BSR set to: 57
  2300                           ;nuestrostimers.c: 59:  if (ctp->banderas & 0x04U)
  2301   001492  5003               	movf	Tm_Procese_tiempo@ctp^0,w,c
  2302   001494  6ED9               	movwf	fsr2l,c
  2303   001496  6ADA               	clrf	fsr2h,c
  2304   001498  0E06               	movlw	6
  2305   00149A  26D9               	addwf	fsr2l,f,c
  2306   00149C  A4DF               	btfss	indf2,2,c
  2307   00149E  0012               	return	
  2308                           
  2309                           ; BSR set to: 57
  2310                           ;nuestrostimers.c: 61:  ctp->timeout=ctp->timeout-1;
  2311   0014A0  5003               	movf	Tm_Procese_tiempo@ctp^0,w,c
  2312   0014A2  6ED9               	movwf	fsr2l,c
  2313   0014A4  6ADA               	clrf	fsr2h,c
  2314   0014A6  0E04               	movlw	4
  2315   0014A8  26D9               	addwf	fsr2l,f,c
  2316   0014AA  006F FF78  F004    	movff	postinc2,??_Tm_Procese_tiempo
  2317   0014B0  006F FF74  F005    	movff	postdec2,??_Tm_Procese_tiempo+1
  2318   0014B6  0EFF               	movlw	255
  2319   0014B8  2404               	addwf	??_Tm_Procese_tiempo^0,w,c
  2320   0014BA  6E06               	movwf	(??_Tm_Procese_tiempo+2)^0,c
  2321   0014BC  0EFF               	movlw	255
  2322   0014BE  2005               	addwfc	(??_Tm_Procese_tiempo+1)^0,w,c
  2323   0014C0  6E07               	movwf	(??_Tm_Procese_tiempo+3)^0,c
  2324   0014C2  5003               	movf	Tm_Procese_tiempo@ctp^0,w,c
  2325   0014C4  6ED9               	movwf	fsr2l,c
  2326   0014C6  6ADA               	clrf	fsr2h,c
  2327   0014C8  0E04               	movlw	4
  2328   0014CA  26D9               	addwf	fsr2l,f,c
  2329   0014CC  0060  F01B  FFDE   	movff	??_Tm_Procese_tiempo+2,postinc2
  2330   0014D2  0060  F01F  FFDD   	movff	??_Tm_Procese_tiempo+3,postdec2
  2331                           
  2332                           ; BSR set to: 57
  2333   0014D8  0012               	return		;funcret
  2334   0014DA                     __end_of_Tm_Procese_tiempo:
  2335                           	callstack 0
  2336                           
  2337 ;; *************** function _Tm_Inicie_periodico *****************
  2338 ;; Defined at:
  2339 ;;		line 21 in file "nuestrostimers.c"
  2340 ;; Parameters:    Size  Location     Type
  2341 ;;  ctp             1   18[COMRAM] PTR struct Tm_Periodico
  2342 ;;		 -> main@timer(7), 
  2343 ;;  periodo         2   19[COMRAM] unsigned int 
  2344 ;; Auto vars:     Size  Location     Type
  2345 ;;		None
  2346 ;; Return value:  Size  Location     Type
  2347 ;;                  1    wreg      void 
  2348 ;; Registers used:
  2349 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2350 ;; Tracked objects:
  2351 ;;		On entry : 0/39
  2352 ;;		On exit  : 0/0
  2353 ;;		Unchanged: 0/0
  2354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2355 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2358 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2359 ;;Total ram usage:        3 bytes
  2360 ;; Hardware stack levels used: 1
  2361 ;; Hardware stack levels required when called: 4
  2362 ;; This function calls:
  2363 ;;		Nothing
  2364 ;; This function is called by:
  2365 ;;		_main
  2366 ;; This function uses a non-reentrant model
  2367 ;;
  2368                           
  2369                           	psect	text17
  2370   001898                     __ptext17:
  2371                           	callstack 0
  2372   001898                     _Tm_Inicie_periodico:
  2373                           	callstack 26
  2374                           
  2375                           ;nuestrostimers.c: 21: void Tm_Inicie_periodico (Tm_Periodico *ctp,unsigned int periodo)
      +                          ;nuestrostimers.c: 23: {;nuestrostimers.c: 25:  ctp->banderas |= 0x01U;
  2376                           
  2377                           ; BSR set to: 57
  2378                           ;incstack = 0
  2379   001898  5013               	movf	Tm_Inicie_periodico@ctp^0,w,c
  2380   00189A  6ED9               	movwf	fsr2l,c
  2381   00189C  6ADA               	clrf	fsr2h,c
  2382   00189E  0E06               	movlw	6
  2383   0018A0  26D9               	addwf	fsr2l,f,c
  2384   0018A2  0E00               	movlw	0
  2385   0018A4  80DB               	bsf	plusw2,0,c
  2386                           
  2387                           ;nuestrostimers.c: 27:  ctp->banderas &= ~0x02U;
  2388   0018A6  5013               	movf	Tm_Inicie_periodico@ctp^0,w,c
  2389   0018A8  6ED9               	movwf	fsr2l,c
  2390   0018AA  6ADA               	clrf	fsr2h,c
  2391   0018AC  0E06               	movlw	6
  2392   0018AE  26D9               	addwf	fsr2l,f,c
  2393   0018B0  0EFD               	movlw	253
  2394   0018B2  16DF               	andwf	indf2,f,c
  2395                           
  2396                           ;nuestrostimers.c: 29:  ctp->contador = ctp->periodo = periodo;
  2397   0018B4  5013               	movf	Tm_Inicie_periodico@ctp^0,w,c
  2398   0018B6  6ED9               	movwf	fsr2l,c
  2399   0018B8  6ADA               	clrf	fsr2h,c
  2400   0018BA  0E02               	movlw	2
  2401   0018BC  26D9               	addwf	fsr2l,f,c
  2402   0018BE  0060  F053  FFDE   	movff	Tm_Inicie_periodico@periodo,postinc2
  2403   0018C4  0060  F057  FFDD   	movff	Tm_Inicie_periodico@periodo+1,postdec2
  2404   0018CA  5013               	movf	Tm_Inicie_periodico@ctp^0,w,c
  2405   0018CC  6EE1               	movwf	fsr1l,c
  2406   0018CE  6AE2               	clrf	fsr1h,c
  2407   0018D0  006F FF7B FFE6     	movff	postinc2,postinc1
  2408   0018D6  006F FF77 FFE5     	movff	postdec2,postdec1
  2409   0018DC  0012               	return		;funcret
  2410   0018DE                     __end_of_Tm_Inicie_periodico:
  2411                           	callstack 0
  2412                           
  2413 ;; *************** function _Tm_Hubo_periodico *****************
  2414 ;; Defined at:
  2415 ;;		line 65 in file "nuestrostimers.c"
  2416 ;; Parameters:    Size  Location     Type
  2417 ;;  ctp             1    2[COMRAM] PTR struct Tm_Periodico
  2418 ;;		 -> main@timer(7), 
  2419 ;; Auto vars:     Size  Location     Type
  2420 ;;		None
  2421 ;; Return value:  Size  Location     Type
  2422 ;;                  1    wreg      unsigned char 
  2423 ;; Registers used:
  2424 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2425 ;; Tracked objects:
  2426 ;;		On entry : 3F/39
  2427 ;;		On exit  : 3F/39
  2428 ;;		Unchanged: 3E/0
  2429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2430 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2433 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2434 ;;Total ram usage:        1 bytes
  2435 ;; Hardware stack levels used: 1
  2436 ;; Hardware stack levels required when called: 4
  2437 ;; This function calls:
  2438 ;;		Nothing
  2439 ;; This function is called by:
  2440 ;;		_main
  2441 ;; This function uses a non-reentrant model
  2442 ;;
  2443                           
  2444                           	psect	text18
  2445   001AF0                     __ptext18:
  2446                           	callstack 0
  2447   001AF0                     _Tm_Hubo_periodico:
  2448                           	callstack 26
  2449                           
  2450                           ; BSR set to: 57
  2451                           ;nuestrostimers.c: 65: char Tm_Hubo_periodico (Tm_Periodico *ctp);nuestrostimers.c: 67: 
      +                          {;nuestrostimers.c: 69:  return (ctp->banderas & 0x02U);
  2452                           
  2453                           ;incstack = 0
  2454   001AF0  5003               	movf	Tm_Hubo_periodico@ctp^0,w,c
  2455   001AF2  6ED9               	movwf	fsr2l,c
  2456   001AF4  6ADA               	clrf	fsr2h,c
  2457   001AF6  0E06               	movlw	6
  2458   001AF8  26D9               	addwf	fsr2l,f,c
  2459   001AFA  50DF               	movf	indf2,w,c
  2460   001AFC  0B02               	andlw	2
  2461                           
  2462                           ; BSR set to: 57
  2463   001AFE  0012               	return		;funcret
  2464   001B00                     __end_of_Tm_Hubo_periodico:
  2465                           	callstack 0
  2466                           
  2467 ;; *************** function _Tm_Baje_periodico *****************
  2468 ;; Defined at:
  2469 ;;		line 73 in file "nuestrostimers.c"
  2470 ;; Parameters:    Size  Location     Type
  2471 ;;  ctp             1    2[COMRAM] PTR struct Tm_Periodico
  2472 ;;		 -> main@timer(7), 
  2473 ;; Auto vars:     Size  Location     Type
  2474 ;;		None
  2475 ;; Return value:  Size  Location     Type
  2476 ;;                  1    wreg      void 
  2477 ;; Registers used:
  2478 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2479 ;; Tracked objects:
  2480 ;;		On entry : 3F/39
  2481 ;;		On exit  : 3F/39
  2482 ;;		Unchanged: 3E/0
  2483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2484 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2487 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2488 ;;Total ram usage:        1 bytes
  2489 ;; Hardware stack levels used: 1
  2490 ;; Hardware stack levels required when called: 4
  2491 ;; This function calls:
  2492 ;;		Nothing
  2493 ;; This function is called by:
  2494 ;;		_main
  2495 ;; This function uses a non-reentrant model
  2496 ;;
  2497                           
  2498                           	psect	text19
  2499   001B00                     __ptext19:
  2500                           	callstack 0
  2501   001B00                     _Tm_Baje_periodico:
  2502                           	callstack 26
  2503                           
  2504                           ; BSR set to: 57
  2505                           ;nuestrostimers.c: 73: void Tm_Baje_periodico (Tm_Periodico *ctp);nuestrostimers.c: 75: 
      +                          {;nuestrostimers.c: 77:  ctp->banderas &= ~0x02U;
  2506                           
  2507                           ; BSR set to: 57
  2508                           ;incstack = 0
  2509   001B00  5003               	movf	Tm_Baje_periodico@ctp^0,w,c
  2510   001B02  6ED9               	movwf	fsr2l,c
  2511   001B04  6ADA               	clrf	fsr2h,c
  2512   001B06  0E06               	movlw	6
  2513   001B08  26D9               	addwf	fsr2l,f,c
  2514   001B0A  0EFD               	movlw	253
  2515   001B0C  16DF               	andwf	indf2,f,c
  2516                           
  2517                           ; BSR set to: 57
  2518   001B0E  0012               	return		;funcret
  2519   001B10                     __end_of_Tm_Baje_periodico:
  2520                           	callstack 0
  2521                           
  2522 ;; *************** function _TMR2_HasOverflowOccured *****************
  2523 ;; Defined at:
  2524 ;;		line 157 in file "mcc_generated_files/tmr2.c"
  2525 ;; Parameters:    Size  Location     Type
  2526 ;;		None
  2527 ;; Auto vars:     Size  Location     Type
  2528 ;;  status          1    2[COMRAM] _Bool 
  2529 ;; Return value:  Size  Location     Type
  2530 ;;                  1    wreg      _Bool 
  2531 ;; Registers used:
  2532 ;;		wreg, status,2
  2533 ;; Tracked objects:
  2534 ;;		On entry : 0/39
  2535 ;;		On exit  : 3F/39
  2536 ;;		Unchanged: 0/0
  2537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2539 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2541 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2542 ;;Total ram usage:        1 bytes
  2543 ;; Hardware stack levels used: 1
  2544 ;; Hardware stack levels required when called: 4
  2545 ;; This function calls:
  2546 ;;		Nothing
  2547 ;; This function is called by:
  2548 ;;		_main
  2549 ;; This function uses a non-reentrant model
  2550 ;;
  2551                           
  2552                           	psect	text20
  2553   001AB0                     __ptext20:
  2554                           	callstack 0
  2555   001AB0                     _TMR2_HasOverflowOccured:
  2556                           	callstack 26
  2557                           
  2558                           ;mcc_generated_files/tmr2.c: 160:     _Bool status = PIR4bits.TMR2IF;
  2559                           
  2560                           ; BSR set to: 57
  2561                           ;incstack = 0
  2562   001AB0  0139               	movlb	57	; () banked
  2563   001AB2  A5A4               	btfss	164,2,b	;volatile
  2564   001AB4  D002               	goto	u870
  2565   001AB6  0E01               	movlw	1
  2566   001AB8  D001               	goto	u876
  2567   001ABA                     u870:
  2568   001ABA  0E00               	movlw	0
  2569   001ABC                     u876:
  2570   001ABC  6E03               	movwf	TMR2_HasOverflowOccured@status^0,c
  2571                           
  2572                           ;mcc_generated_files/tmr2.c: 161:     if(status)
  2573   001ABE  5003               	movf	TMR2_HasOverflowOccured@status^0,w,c
  2574   001AC0  A4D8               	btfss	status,2,c
  2575                           
  2576                           ; BSR set to: 57
  2577                           ;mcc_generated_files/tmr2.c: 162:     {;mcc_generated_files/tmr2.c: 164:         PIR4bit
      +                          s.TMR2IF = 0;
  2578   001AC2  95A4               	bcf	164,2,b	;volatile
  2579                           
  2580                           ; BSR set to: 57
  2581                           ;mcc_generated_files/tmr2.c: 166:     return status;
  2582   001AC4  5003               	movf	TMR2_HasOverflowOccured@status^0,w,c
  2583                           
  2584                           ; BSR set to: 57
  2585   001AC6  0012               	return		;funcret
  2586   001AC8                     __end_of_TMR2_HasOverflowOccured:
  2587                           	callstack 0
  2588                           
  2589 ;; *************** function _SYSTEM_Initialize *****************
  2590 ;; Defined at:
  2591 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2592 ;; Parameters:    Size  Location     Type
  2593 ;;		None
  2594 ;; Auto vars:     Size  Location     Type
  2595 ;;		None
  2596 ;; Return value:  Size  Location     Type
  2597 ;;                  1    wreg      void 
  2598 ;; Registers used:
  2599 ;;		wreg, status,2, status,0, cstack
  2600 ;; Tracked objects:
  2601 ;;		On entry : 0/0
  2602 ;;		On exit  : 3F/3D
  2603 ;;		Unchanged: 0/0
  2604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2608 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2609 ;;Total ram usage:        0 bytes
  2610 ;; Hardware stack levels used: 1
  2611 ;; Hardware stack levels required when called: 6
  2612 ;; This function calls:
  2613 ;;		_ADCC_Initialize
  2614 ;;		_FVR_Initialize
  2615 ;;		_INTERRUPT_Initialize
  2616 ;;		_OSCILLATOR_Initialize
  2617 ;;		_PIN_MANAGER_Initialize
  2618 ;;		_PMD_Initialize
  2619 ;;		_SPI1_Initialize
  2620 ;;		_TMR2_Initialize
  2621 ;;		_UART1_Initialize
  2622 ;; This function is called by:
  2623 ;;		_main
  2624 ;; This function uses a non-reentrant model
  2625 ;;
  2626                           
  2627                           	psect	text21
  2628   0019F4                     __ptext21:
  2629                           	callstack 0
  2630   0019F4                     _SYSTEM_Initialize:
  2631                           	callstack 24
  2632                           
  2633                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
  2634                           
  2635                           ; BSR set to: 57
  2636                           ;incstack = 0
  2637   0019F4  ECD3  F00D         	call	_INTERRUPT_Initialize	;wreg free
  2638                           
  2639                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  2640   0019F8  EC0D  F00D         	call	_PMD_Initialize	;wreg free
  2641                           
  2642                           ; BSR set to: 57
  2643                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  2644   0019FC  EC7C  F009         	call	_PIN_MANAGER_Initialize	;wreg free
  2645                           
  2646                           ; BSR set to: 58
  2647                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  2648   001A00  EC3D  F00D         	call	_OSCILLATOR_Initialize	;wreg free
  2649                           
  2650                           ; BSR set to: 57
  2651                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
  2652   001A04  ECC9  F00D         	call	_FVR_Initialize	;wreg free
  2653                           
  2654                           ; BSR set to: 62
  2655                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
  2656   001A08  ECF4  F00B         	call	_ADCC_Initialize	;wreg free
  2657                           
  2658                           ; BSR set to: 62
  2659                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
  2660   001A0C  EC1F  F00D         	call	_TMR2_Initialize	;wreg free
  2661                           
  2662                           ; BSR set to: 57
  2663                           ;mcc_generated_files/mcc.c: 59:     UART1_Initialize();
  2664   001A10  ECCF  F009         	call	_UART1_Initialize	;wreg free
  2665                           
  2666                           ; BSR set to: 57
  2667                           ;mcc_generated_files/mcc.c: 60:     SPI1_Initialize();
  2668   001A14  EC4B  F00D         	call	_SPI1_Initialize	;wreg free
  2669                           
  2670                           ; BSR set to: 61
  2671   001A18  0012               	return		;funcret
  2672   001A1A                     __end_of_SYSTEM_Initialize:
  2673                           	callstack 0
  2674                           
  2675 ;; *************** function _UART1_Initialize *****************
  2676 ;; Defined at:
  2677 ;;		line 86 in file "mcc_generated_files/uart1.c"
  2678 ;; Parameters:    Size  Location     Type
  2679 ;;		None
  2680 ;; Auto vars:     Size  Location     Type
  2681 ;;		None
  2682 ;; Return value:  Size  Location     Type
  2683 ;;                  1    wreg      void 
  2684 ;; Registers used:
  2685 ;;		wreg, status,2, status,0, cstack
  2686 ;; Tracked objects:
  2687 ;;		On entry : 3B/3D
  2688 ;;		On exit  : 3F/39
  2689 ;;		Unchanged: 0/0
  2690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2694 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2695 ;;Total ram usage:        0 bytes
  2696 ;; Hardware stack levels used: 1
  2697 ;; Hardware stack levels required when called: 5
  2698 ;; This function calls:
  2699 ;;		_UART1_SetErrorHandler
  2700 ;;		_UART1_SetFramingErrorHandler
  2701 ;;		_UART1_SetOverrunErrorHandler
  2702 ;;		_UART1_SetRxInterruptHandler
  2703 ;;		_UART1_SetTxInterruptHandler
  2704 ;; This function is called by:
  2705 ;;		_SYSTEM_Initialize
  2706 ;;		_main
  2707 ;; This function uses a non-reentrant model
  2708 ;;
  2709                           
  2710                           	psect	text22
  2711   00139E                     __ptext22:
  2712                           	callstack 0
  2713   00139E                     _UART1_Initialize:
  2714                           	callstack 25
  2715                           
  2716                           ;mcc_generated_files/uart1.c: 89:     PIE3bits.U1RXIE = 0;
  2717                           
  2718                           ; BSR set to: 61
  2719                           ;incstack = 0
  2720   00139E  0139               	movlb	57	; () banked
  2721   0013A0  9793               	bcf	147,3,b	;volatile
  2722                           
  2723                           ; BSR set to: 57
  2724                           ;mcc_generated_files/uart1.c: 90:     UART1_SetRxInterruptHandler(UART1_Receive_ISR);
  2725   0013A2  0E70               	movlw	low _UART1_Receive_ISR
  2726   0013A4  6E03               	movwf	UART1_SetRxInterruptHandler@InterruptHandler^0,c
  2727   0013A6  0E15               	movlw	high _UART1_Receive_ISR
  2728   0013A8  6E04               	movwf	(UART1_SetRxInterruptHandler@InterruptHandler+1)^0,c
  2729   0013AA  ECB1  F00D         	call	_UART1_SetRxInterruptHandler	;wreg free
  2730                           
  2731                           ; BSR set to: 57
  2732                           ;mcc_generated_files/uart1.c: 91:     PIE3bits.U1TXIE = 0;
  2733   0013AE  9993               	bcf	147,4,b	;volatile
  2734                           
  2735                           ;mcc_generated_files/uart1.c: 92:     UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
  2736   0013B0  0ECC               	movlw	low _UART1_Transmit_ISR
  2737   0013B2  6E03               	movwf	UART1_SetTxInterruptHandler@InterruptHandler^0,c
  2738   0013B4  0E19               	movlw	high _UART1_Transmit_ISR
  2739   0013B6  6E04               	movwf	(UART1_SetTxInterruptHandler@InterruptHandler+1)^0,c
  2740   0013B8  ECAC  F00D         	call	_UART1_SetTxInterruptHandler	;wreg free
  2741                           
  2742                           ; BSR set to: 57
  2743                           ;mcc_generated_files/uart1.c: 97:     U1P1L = 0x00;
  2744   0013BC  0E00               	movlw	0
  2745   0013BE  013D               	movlb	61	; () banked
  2746   0013C0  6FEC               	movwf	236,b	;volatile
  2747                           
  2748                           ; BSR set to: 61
  2749                           ;mcc_generated_files/uart1.c: 100:     U1P1H = 0x00;
  2750   0013C2  0E00               	movlw	0
  2751   0013C4  6FED               	movwf	237,b	;volatile
  2752                           
  2753                           ; BSR set to: 61
  2754                           ;mcc_generated_files/uart1.c: 103:     U1P2L = 0x00;
  2755   0013C6  0E00               	movlw	0
  2756   0013C8  6FEE               	movwf	238,b	;volatile
  2757                           
  2758                           ; BSR set to: 61
  2759                           ;mcc_generated_files/uart1.c: 106:     U1P2H = 0x00;
  2760   0013CA  0E00               	movlw	0
  2761   0013CC  6FEF               	movwf	239,b	;volatile
  2762                           
  2763                           ; BSR set to: 61
  2764                           ;mcc_generated_files/uart1.c: 109:     U1P3L = 0x00;
  2765   0013CE  0E00               	movlw	0
  2766   0013D0  6FF0               	movwf	240,b	;volatile
  2767                           
  2768                           ; BSR set to: 61
  2769                           ;mcc_generated_files/uart1.c: 112:     U1P3H = 0x00;
  2770   0013D2  0E00               	movlw	0
  2771   0013D4  6FF1               	movwf	241,b	;volatile
  2772                           
  2773                           ; BSR set to: 61
  2774                           ;mcc_generated_files/uart1.c: 115:     U1CON0 = 0xB0;
  2775   0013D6  0EB0               	movlw	176
  2776   0013D8  6FF2               	movwf	242,b	;volatile
  2777                           
  2778                           ; BSR set to: 61
  2779                           ;mcc_generated_files/uart1.c: 118:     U1CON1 = 0x80;
  2780   0013DA  0E80               	movlw	128
  2781   0013DC  6FF3               	movwf	243,b	;volatile
  2782                           
  2783                           ; BSR set to: 61
  2784                           ;mcc_generated_files/uart1.c: 121:     U1CON2 = 0x00;
  2785   0013DE  0E00               	movlw	0
  2786   0013E0  6FF4               	movwf	244,b	;volatile
  2787                           
  2788                           ; BSR set to: 61
  2789                           ;mcc_generated_files/uart1.c: 124:     U1BRGL = 0x07;
  2790   0013E2  0E07               	movlw	7
  2791   0013E4  6FF5               	movwf	245,b	;volatile
  2792                           
  2793                           ; BSR set to: 61
  2794                           ;mcc_generated_files/uart1.c: 127:     U1BRGH = 0x00;
  2795   0013E6  0E00               	movlw	0
  2796   0013E8  6FF6               	movwf	246,b	;volatile
  2797                           
  2798                           ; BSR set to: 61
  2799                           ;mcc_generated_files/uart1.c: 130:     U1FIFO = 0x00;
  2800   0013EA  0E00               	movlw	0
  2801   0013EC  6FF7               	movwf	247,b	;volatile
  2802                           
  2803                           ; BSR set to: 61
  2804                           ;mcc_generated_files/uart1.c: 133:     U1UIR = 0x00;
  2805   0013EE  0E00               	movlw	0
  2806   0013F0  6FF8               	movwf	248,b	;volatile
  2807                           
  2808                           ; BSR set to: 61
  2809                           ;mcc_generated_files/uart1.c: 136:     U1ERRIR = 0x00;
  2810   0013F2  0E00               	movlw	0
  2811   0013F4  6FF9               	movwf	249,b	;volatile
  2812                           
  2813                           ; BSR set to: 61
  2814                           ;mcc_generated_files/uart1.c: 139:     U1ERRIE = 0x00;
  2815   0013F6  0E00               	movlw	0
  2816   0013F8  6FFA               	movwf	250,b	;volatile
  2817                           
  2818                           ; BSR set to: 61
  2819                           ;mcc_generated_files/uart1.c: 142:     UART1_SetFramingErrorHandler(UART1_DefaultFraming
      +                          ErrorHandler);
  2820   0013FA  0EAC               	movlw	low _UART1_DefaultFramingErrorHandler
  2821   0013FC  6E03               	movwf	UART1_SetFramingErrorHandler@interruptHandler^0,c
  2822   0013FE  0E1B               	movlw	high _UART1_DefaultFramingErrorHandler
  2823   001400  6E04               	movwf	(UART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  2824   001402  ECBB  F00D         	call	_UART1_SetFramingErrorHandler	;wreg free
  2825                           
  2826                           ; BSR set to: 61
  2827                           ;mcc_generated_files/uart1.c: 143:     UART1_SetOverrunErrorHandler(UART1_DefaultOverrun
      +                          ErrorHandler);
  2828   001406  0EAA               	movlw	low _UART1_DefaultOverrunErrorHandler
  2829   001408  6E03               	movwf	UART1_SetOverrunErrorHandler@interruptHandler^0,c
  2830   00140A  0E1B               	movlw	high _UART1_DefaultOverrunErrorHandler
  2831   00140C  6E04               	movwf	(UART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  2832   00140E  ECB6  F00D         	call	_UART1_SetOverrunErrorHandler	;wreg free
  2833                           
  2834                           ; BSR set to: 61
  2835                           ;mcc_generated_files/uart1.c: 144:     UART1_SetErrorHandler(UART1_DefaultErrorHandler);
  2836   001412  0EA0               	movlw	low _UART1_DefaultErrorHandler
  2837   001414  6E03               	movwf	UART1_SetErrorHandler@interruptHandler^0,c
  2838   001416  0E1B               	movlw	high _UART1_DefaultErrorHandler
  2839   001418  6E04               	movwf	(UART1_SetErrorHandler@interruptHandler+1)^0,c
  2840   00141A  ECC0  F00D         	call	_UART1_SetErrorHandler	;wreg free
  2841                           
  2842                           ;mcc_generated_files/uart1.c: 146:     uart1RxLastError.status = 0;
  2843   00141E  0E00               	movlw	0
  2844   001420  6E25               	movwf	_uart1RxLastError^0,c	;volatile
  2845                           
  2846                           ;mcc_generated_files/uart1.c: 149:     uart1TxHead = 0;
  2847   001422  0E00               	movlw	0
  2848   001424  6E2B               	movwf	_uart1TxHead^0,c	;volatile
  2849                           
  2850                           ;mcc_generated_files/uart1.c: 150:     uart1TxTail = 0;
  2851   001426  0E00               	movlw	0
  2852   001428  6E2A               	movwf	_uart1TxTail^0,c	;volatile
  2853                           
  2854                           ;mcc_generated_files/uart1.c: 151:     uart1TxBufferRemaining = sizeof(uart1TxBuffer);
  2855   00142A  0E08               	movlw	8
  2856   00142C  6E29               	movwf	_uart1TxBufferRemaining^0,c	;volatile
  2857                           
  2858                           ;mcc_generated_files/uart1.c: 152:     uart1RxHead = 0;
  2859   00142E  0E00               	movlw	0
  2860   001430  6E28               	movwf	_uart1RxHead^0,c	;volatile
  2861                           
  2862                           ;mcc_generated_files/uart1.c: 153:     uart1RxTail = 0;
  2863   001432  0E00               	movlw	0
  2864   001434  6E27               	movwf	_uart1RxTail^0,c	;volatile
  2865                           
  2866                           ;mcc_generated_files/uart1.c: 154:     uart1RxCount = 0;
  2867   001436  0E00               	movlw	0
  2868   001438  6E26               	movwf	_uart1RxCount^0,c	;volatile
  2869                           
  2870                           ; BSR set to: 61
  2871                           ;mcc_generated_files/uart1.c: 157:     PIE3bits.U1RXIE = 1;
  2872   00143A  0139               	movlb	57	; () banked
  2873   00143C  8793               	bsf	147,3,b	;volatile
  2874                           
  2875                           ; BSR set to: 57
  2876   00143E  0012               	return		;funcret
  2877   001440                     __end_of_UART1_Initialize:
  2878                           	callstack 0
  2879                           
  2880 ;; *************** function _UART1_SetTxInterruptHandler *****************
  2881 ;; Defined at:
  2882 ;;		line 308 in file "mcc_generated_files/uart1.c"
  2883 ;; Parameters:    Size  Location     Type
  2884 ;;  InterruptHan    2    2[COMRAM] PTR FTN()void 
  2885 ;;		 -> UART1_Transmit_ISR(1), 
  2886 ;; Auto vars:     Size  Location     Type
  2887 ;;		None
  2888 ;; Return value:  Size  Location     Type
  2889 ;;                  1    wreg      void 
  2890 ;; Registers used:
  2891 ;;		wreg, status,2, status,0
  2892 ;; Tracked objects:
  2893 ;;		On entry : 3F/39
  2894 ;;		On exit  : 3F/39
  2895 ;;		Unchanged: 3E/0
  2896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2897 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2900 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2901 ;;Total ram usage:        2 bytes
  2902 ;; Hardware stack levels used: 1
  2903 ;; Hardware stack levels required when called: 4
  2904 ;; This function calls:
  2905 ;;		Nothing
  2906 ;; This function is called by:
  2907 ;;		_UART1_Initialize
  2908 ;; This function uses a non-reentrant model
  2909 ;;
  2910                           
  2911                           	psect	text23
  2912   001B58                     __ptext23:
  2913                           	callstack 0
  2914   001B58                     _UART1_SetTxInterruptHandler:
  2915                           	callstack 25
  2916                           
  2917                           ; BSR set to: 57
  2918                           ;mcc_generated_files/uart1.c: 309:     UART1_TxInterruptHandler = InterruptHandler;
  2919                           
  2920                           ; BSR set to: 57
  2921                           ;incstack = 0
  2922   001B58  C003  F01D         	movff	UART1_SetTxInterruptHandler@InterruptHandler,_UART1_TxInterruptHandler
  2923   001B5C  C004  F01E         	movff	UART1_SetTxInterruptHandler@InterruptHandler+1,_UART1_TxInterruptHandler+1
  2924                           
  2925                           ; BSR set to: 57
  2926   001B60  0012               	return		;funcret
  2927   001B62                     __end_of_UART1_SetTxInterruptHandler:
  2928                           	callstack 0
  2929                           
  2930 ;; *************** function _UART1_SetRxInterruptHandler *****************
  2931 ;; Defined at:
  2932 ;;		line 304 in file "mcc_generated_files/uart1.c"
  2933 ;; Parameters:    Size  Location     Type
  2934 ;;  InterruptHan    2    2[COMRAM] PTR FTN()void 
  2935 ;;		 -> UART1_Receive_ISR(1), 
  2936 ;; Auto vars:     Size  Location     Type
  2937 ;;		None
  2938 ;; Return value:  Size  Location     Type
  2939 ;;                  1    wreg      void 
  2940 ;; Registers used:
  2941 ;;		wreg, status,2, status,0
  2942 ;; Tracked objects:
  2943 ;;		On entry : 3F/39
  2944 ;;		On exit  : 3F/39
  2945 ;;		Unchanged: 3E/0
  2946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2947 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2950 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2951 ;;Total ram usage:        2 bytes
  2952 ;; Hardware stack levels used: 1
  2953 ;; Hardware stack levels required when called: 4
  2954 ;; This function calls:
  2955 ;;		Nothing
  2956 ;; This function is called by:
  2957 ;;		_UART1_Initialize
  2958 ;; This function uses a non-reentrant model
  2959 ;;
  2960                           
  2961                           	psect	text24
  2962   001B62                     __ptext24:
  2963                           	callstack 0
  2964   001B62                     _UART1_SetRxInterruptHandler:
  2965                           	callstack 25
  2966                           
  2967                           ; BSR set to: 57
  2968                           ;mcc_generated_files/uart1.c: 305:     UART1_RxInterruptHandler = InterruptHandler;
  2969                           
  2970                           ; BSR set to: 57
  2971                           ;incstack = 0
  2972   001B62  C003  F01F         	movff	UART1_SetRxInterruptHandler@InterruptHandler,_UART1_RxInterruptHandler
  2973   001B66  C004  F020         	movff	UART1_SetRxInterruptHandler@InterruptHandler+1,_UART1_RxInterruptHandler+1
  2974                           
  2975                           ; BSR set to: 57
  2976   001B6A  0012               	return		;funcret
  2977   001B6C                     __end_of_UART1_SetRxInterruptHandler:
  2978                           	callstack 0
  2979                           
  2980 ;; *************** function _UART1_SetOverrunErrorHandler *****************
  2981 ;; Defined at:
  2982 ;;		line 294 in file "mcc_generated_files/uart1.c"
  2983 ;; Parameters:    Size  Location     Type
  2984 ;;  interruptHan    2    2[COMRAM] PTR FTN()void 
  2985 ;;		 -> UART1_DefaultOverrunErrorHandler(1), 
  2986 ;; Auto vars:     Size  Location     Type
  2987 ;;		None
  2988 ;; Return value:  Size  Location     Type
  2989 ;;                  1    wreg      void 
  2990 ;; Registers used:
  2991 ;;		wreg, status,2, status,0
  2992 ;; Tracked objects:
  2993 ;;		On entry : 3F/3D
  2994 ;;		On exit  : 3F/3D
  2995 ;;		Unchanged: 3E/0
  2996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2997 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3000 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3001 ;;Total ram usage:        2 bytes
  3002 ;; Hardware stack levels used: 1
  3003 ;; Hardware stack levels required when called: 4
  3004 ;; This function calls:
  3005 ;;		Nothing
  3006 ;; This function is called by:
  3007 ;;		_UART1_Initialize
  3008 ;; This function uses a non-reentrant model
  3009 ;;
  3010                           
  3011                           	psect	text25
  3012   001B6C                     __ptext25:
  3013                           	callstack 0
  3014   001B6C                     _UART1_SetOverrunErrorHandler:
  3015                           	callstack 25
  3016                           
  3017                           ; BSR set to: 61
  3018                           ;mcc_generated_files/uart1.c: 295:     UART1_OverrunErrorHandler = interruptHandler;
  3019                           
  3020                           ; BSR set to: 57
  3021                           ;incstack = 0
  3022   001B6C  C003  F0AD         	movff	UART1_SetOverrunErrorHandler@interruptHandler,_UART1_OverrunErrorHandler
  3023   001B70  C004  F0AE         	movff	UART1_SetOverrunErrorHandler@interruptHandler+1,_UART1_OverrunErrorHandler+1
  3024                           
  3025                           ; BSR set to: 61
  3026   001B74  0012               	return		;funcret
  3027   001B76                     __end_of_UART1_SetOverrunErrorHandler:
  3028                           	callstack 0
  3029                           
  3030 ;; *************** function _UART1_SetFramingErrorHandler *****************
  3031 ;; Defined at:
  3032 ;;		line 290 in file "mcc_generated_files/uart1.c"
  3033 ;; Parameters:    Size  Location     Type
  3034 ;;  interruptHan    2    2[COMRAM] PTR FTN()void 
  3035 ;;		 -> UART1_DefaultFramingErrorHandler(1), 
  3036 ;; Auto vars:     Size  Location     Type
  3037 ;;		None
  3038 ;; Return value:  Size  Location     Type
  3039 ;;                  1    wreg      void 
  3040 ;; Registers used:
  3041 ;;		wreg, status,2, status,0
  3042 ;; Tracked objects:
  3043 ;;		On entry : 3F/3D
  3044 ;;		On exit  : 3F/3D
  3045 ;;		Unchanged: 3E/0
  3046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3047 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3050 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3051 ;;Total ram usage:        2 bytes
  3052 ;; Hardware stack levels used: 1
  3053 ;; Hardware stack levels required when called: 4
  3054 ;; This function calls:
  3055 ;;		Nothing
  3056 ;; This function is called by:
  3057 ;;		_UART1_Initialize
  3058 ;; This function uses a non-reentrant model
  3059 ;;
  3060                           
  3061                           	psect	text26
  3062   001B76                     __ptext26:
  3063                           	callstack 0
  3064   001B76                     _UART1_SetFramingErrorHandler:
  3065                           	callstack 25
  3066                           
  3067                           ; BSR set to: 61
  3068                           ;mcc_generated_files/uart1.c: 291:     UART1_FramingErrorHandler = interruptHandler;
  3069                           
  3070                           ; BSR set to: 61
  3071                           ;incstack = 0
  3072   001B76  C003  F0AF         	movff	UART1_SetFramingErrorHandler@interruptHandler,_UART1_FramingErrorHandler
  3073   001B7A  C004  F0B0         	movff	UART1_SetFramingErrorHandler@interruptHandler+1,_UART1_FramingErrorHandler+1
  3074                           
  3075                           ; BSR set to: 61
  3076   001B7E  0012               	return		;funcret
  3077   001B80                     __end_of_UART1_SetFramingErrorHandler:
  3078                           	callstack 0
  3079                           
  3080 ;; *************** function _UART1_SetErrorHandler *****************
  3081 ;; Defined at:
  3082 ;;		line 298 in file "mcc_generated_files/uart1.c"
  3083 ;; Parameters:    Size  Location     Type
  3084 ;;  interruptHan    2    2[COMRAM] PTR FTN()void 
  3085 ;;		 -> UART1_DefaultErrorHandler(1), 
  3086 ;; Auto vars:     Size  Location     Type
  3087 ;;		None
  3088 ;; Return value:  Size  Location     Type
  3089 ;;                  1    wreg      void 
  3090 ;; Registers used:
  3091 ;;		wreg, status,2, status,0
  3092 ;; Tracked objects:
  3093 ;;		On entry : 3F/3D
  3094 ;;		On exit  : 3F/3D
  3095 ;;		Unchanged: 3E/0
  3096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3097 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3100 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3101 ;;Total ram usage:        2 bytes
  3102 ;; Hardware stack levels used: 1
  3103 ;; Hardware stack levels required when called: 4
  3104 ;; This function calls:
  3105 ;;		Nothing
  3106 ;; This function is called by:
  3107 ;;		_UART1_Initialize
  3108 ;; This function uses a non-reentrant model
  3109 ;;
  3110                           
  3111                           	psect	text27
  3112   001B80                     __ptext27:
  3113                           	callstack 0
  3114   001B80                     _UART1_SetErrorHandler:
  3115                           	callstack 25
  3116                           
  3117                           ; BSR set to: 61
  3118                           ;mcc_generated_files/uart1.c: 299:     UART1_ErrorHandler = interruptHandler;
  3119                           
  3120                           ; BSR set to: 61
  3121                           ;incstack = 0
  3122   001B80  C003  F0AB         	movff	UART1_SetErrorHandler@interruptHandler,_UART1_ErrorHandler
  3123   001B84  C004  F0AC         	movff	UART1_SetErrorHandler@interruptHandler+1,_UART1_ErrorHandler+1
  3124                           
  3125                           ; BSR set to: 61
  3126   001B88  0012               	return		;funcret
  3127   001B8A                     __end_of_UART1_SetErrorHandler:
  3128                           	callstack 0
  3129                           
  3130 ;; *************** function _TMR2_Initialize *****************
  3131 ;; Defined at:
  3132 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  3133 ;; Parameters:    Size  Location     Type
  3134 ;;		None
  3135 ;; Auto vars:     Size  Location     Type
  3136 ;;		None
  3137 ;; Return value:  Size  Location     Type
  3138 ;;                  1    wreg      void 
  3139 ;; Registers used:
  3140 ;;		wreg, status,2
  3141 ;; Tracked objects:
  3142 ;;		On entry : 3C/3D
  3143 ;;		On exit  : 3F/39
  3144 ;;		Unchanged: 0/0
  3145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3149 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3150 ;;Total ram usage:        0 bytes
  3151 ;; Hardware stack levels used: 1
  3152 ;; Hardware stack levels required when called: 4
  3153 ;; This function calls:
  3154 ;;		Nothing
  3155 ;; This function is called by:
  3156 ;;		_SYSTEM_Initialize
  3157 ;;		_main
  3158 ;; This function uses a non-reentrant model
  3159 ;;
  3160                           
  3161                           	psect	text28
  3162   001A3E                     __ptext28:
  3163                           	callstack 0
  3164   001A3E                     _TMR2_Initialize:
  3165                           	callstack 26
  3166                           
  3167                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x03;
  3168                           
  3169                           ; BSR set to: 61
  3170                           ;incstack = 0
  3171   001A3E  0E03               	movlw	3
  3172   001A40  6EAE               	movwf	174,c	;volatile
  3173                           
  3174                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
  3175   001A42  0E00               	movlw	0
  3176   001A44  6EAD               	movwf	173,c	;volatile
  3177                           
  3178                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
  3179   001A46  0E00               	movlw	0
  3180   001A48  6EAF               	movwf	175,c	;volatile
  3181                           
  3182                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0xC7;
  3183   001A4A  0EC7               	movlw	199
  3184   001A4C  6EAB               	movwf	171,c	;volatile
  3185                           
  3186                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
  3187   001A4E  0E00               	movlw	0
  3188   001A50  6EAA               	movwf	170,c	;volatile
  3189                           
  3190                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
  3191   001A52  0139               	movlb	57	; () banked
  3192   001A54  95A4               	bcf	164,2,b	;volatile
  3193                           
  3194                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xD0;
  3195   001A56  0ED0               	movlw	208
  3196   001A58  6EAC               	movwf	172,c	;volatile
  3197                           
  3198                           ; BSR set to: 57
  3199   001A5A  0012               	return		;funcret
  3200   001A5C                     __end_of_TMR2_Initialize:
  3201                           	callstack 0
  3202                           
  3203 ;; *************** function _SPI1_Initialize *****************
  3204 ;; Defined at:
  3205 ;;		line 64 in file "mcc_generated_files/spi1.c"
  3206 ;; Parameters:    Size  Location     Type
  3207 ;;		None
  3208 ;; Auto vars:     Size  Location     Type
  3209 ;;		None
  3210 ;; Return value:  Size  Location     Type
  3211 ;;                  1    wreg      void 
  3212 ;; Registers used:
  3213 ;;		wreg, status,2
  3214 ;; Tracked objects:
  3215 ;;		On entry : 38/3E
  3216 ;;		On exit  : 3F/3D
  3217 ;;		Unchanged: 0/0
  3218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3222 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3223 ;;Total ram usage:        0 bytes
  3224 ;; Hardware stack levels used: 1
  3225 ;; Hardware stack levels required when called: 4
  3226 ;; This function calls:
  3227 ;;		Nothing
  3228 ;; This function is called by:
  3229 ;;		_SYSTEM_Initialize
  3230 ;;		_main
  3231 ;; This function uses a non-reentrant model
  3232 ;;
  3233                           
  3234                           	psect	text29
  3235   001A96                     __ptext29:
  3236                           	callstack 0
  3237   001A96                     _SPI1_Initialize:
  3238                           	callstack 25
  3239                           
  3240                           ;mcc_generated_files/spi1.c: 67:     SPI1CON0 = 0x02;
  3241                           
  3242                           ; BSR set to: 57
  3243                           ;incstack = 0
  3244   001A96  0E02               	movlw	2
  3245   001A98  013D               	movlb	61	; () banked
  3246   001A9A  6F14               	movwf	20,b	;volatile
  3247                           
  3248                           ;mcc_generated_files/spi1.c: 69:     SPI1CON1 = 0x40;
  3249   001A9C  0E40               	movlw	64
  3250   001A9E  6F15               	movwf	21,b	;volatile
  3251                           
  3252                           ;mcc_generated_files/spi1.c: 71:     SPI1CON2 = 0x00;
  3253   001AA0  0E00               	movlw	0
  3254   001AA2  6F16               	movwf	22,b	;volatile
  3255                           
  3256                           ;mcc_generated_files/spi1.c: 73:     SPI1CLK = 0x00;
  3257   001AA4  0E00               	movlw	0
  3258   001AA6  6F1C               	movwf	28,b	;volatile
  3259                           
  3260                           ;mcc_generated_files/spi1.c: 75:     SPI1BAUD = 0x00;
  3261   001AA8  0E00               	movlw	0
  3262   001AAA  6F19               	movwf	25,b	;volatile
  3263                           
  3264                           ; BSR set to: 61
  3265                           ;mcc_generated_files/spi1.c: 76:     TRISCbits.TRISC3 = 0;
  3266   001AAC  96C4               	bcf	196,3,c	;volatile
  3267                           
  3268                           ; BSR set to: 61
  3269   001AAE  0012               	return		;funcret
  3270   001AB0                     __end_of_SPI1_Initialize:
  3271                           	callstack 0
  3272                           
  3273 ;; *************** function _PMD_Initialize *****************
  3274 ;; Defined at:
  3275 ;;		line 81 in file "mcc_generated_files/mcc.c"
  3276 ;; Parameters:    Size  Location     Type
  3277 ;;		None
  3278 ;; Auto vars:     Size  Location     Type
  3279 ;;		None
  3280 ;; Return value:  Size  Location     Type
  3281 ;;                  1    wreg      void 
  3282 ;; Registers used:
  3283 ;;		wreg, status,2
  3284 ;; Tracked objects:
  3285 ;;		On entry : 0/0
  3286 ;;		On exit  : 3F/39
  3287 ;;		Unchanged: 0/0
  3288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3292 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3293 ;;Total ram usage:        0 bytes
  3294 ;; Hardware stack levels used: 1
  3295 ;; Hardware stack levels required when called: 4
  3296 ;; This function calls:
  3297 ;;		Nothing
  3298 ;; This function is called by:
  3299 ;;		_SYSTEM_Initialize
  3300 ;; This function uses a non-reentrant model
  3301 ;;
  3302                           
  3303                           	psect	text30
  3304   001A1A                     __ptext30:
  3305                           	callstack 0
  3306   001A1A                     _PMD_Initialize:
  3307                           	callstack 25
  3308                           
  3309                           ;mcc_generated_files/mcc.c: 84:     PMD0 = 0x00;
  3310                           
  3311                           ; BSR set to: 61
  3312                           ;incstack = 0
  3313   001A1A  0E00               	movlw	0
  3314   001A1C  0139               	movlb	57	; () banked
  3315   001A1E  6FC0               	movwf	192,b	;volatile
  3316                           
  3317                           ;mcc_generated_files/mcc.c: 86:     PMD1 = 0x00;
  3318   001A20  0E00               	movlw	0
  3319   001A22  6FC1               	movwf	193,b	;volatile
  3320                           
  3321                           ;mcc_generated_files/mcc.c: 88:     PMD2 = 0x00;
  3322   001A24  0E00               	movlw	0
  3323   001A26  6FC2               	movwf	194,b	;volatile
  3324                           
  3325                           ;mcc_generated_files/mcc.c: 90:     PMD3 = 0x00;
  3326   001A28  0E00               	movlw	0
  3327   001A2A  6FC3               	movwf	195,b	;volatile
  3328                           
  3329                           ;mcc_generated_files/mcc.c: 92:     PMD4 = 0x00;
  3330   001A2C  0E00               	movlw	0
  3331   001A2E  6FC4               	movwf	196,b	;volatile
  3332                           
  3333                           ;mcc_generated_files/mcc.c: 94:     PMD5 = 0x00;
  3334   001A30  0E00               	movlw	0
  3335   001A32  6FC5               	movwf	197,b	;volatile
  3336                           
  3337                           ;mcc_generated_files/mcc.c: 96:     PMD6 = 0x00;
  3338   001A34  0E00               	movlw	0
  3339   001A36  6FC6               	movwf	198,b	;volatile
  3340                           
  3341                           ;mcc_generated_files/mcc.c: 98:     PMD7 = 0x00;
  3342   001A38  0E00               	movlw	0
  3343   001A3A  6FC7               	movwf	199,b	;volatile
  3344                           
  3345                           ; BSR set to: 57
  3346   001A3C  0012               	return		;funcret
  3347   001A3E                     __end_of_PMD_Initialize:
  3348                           	callstack 0
  3349                           
  3350 ;; *************** function _PIN_MANAGER_Initialize *****************
  3351 ;; Defined at:
  3352 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  3353 ;; Parameters:    Size  Location     Type
  3354 ;;		None
  3355 ;; Auto vars:     Size  Location     Type
  3356 ;;		None
  3357 ;; Return value:  Size  Location     Type
  3358 ;;                  1    wreg      void 
  3359 ;; Registers used:
  3360 ;;		wreg, status,2
  3361 ;; Tracked objects:
  3362 ;;		On entry : 3F/39
  3363 ;;		On exit  : 3F/3A
  3364 ;;		Unchanged: 0/0
  3365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3369 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3370 ;;Total ram usage:        0 bytes
  3371 ;; Hardware stack levels used: 1
  3372 ;; Hardware stack levels required when called: 4
  3373 ;; This function calls:
  3374 ;;		Nothing
  3375 ;; This function is called by:
  3376 ;;		_SYSTEM_Initialize
  3377 ;; This function uses a non-reentrant model
  3378 ;;
  3379                           
  3380                           	psect	text31
  3381   0012F8                     __ptext31:
  3382                           	callstack 0
  3383   0012F8                     _PIN_MANAGER_Initialize:
  3384                           	callstack 25
  3385                           
  3386                           ; BSR set to: 57
  3387                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  3388                           
  3389                           ; BSR set to: 57
  3390                           ;incstack = 0
  3391   0012F8  0E00               	movlw	0
  3392   0012FA  6EBE               	movwf	190,c	;volatile
  3393                           
  3394                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  3395   0012FC  0E00               	movlw	0
  3396   0012FE  6EBD               	movwf	189,c	;volatile
  3397                           
  3398                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  3399   001300  0E00               	movlw	0
  3400   001302  6EBA               	movwf	186,c	;volatile
  3401                           
  3402                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  3403   001304  0E00               	movlw	0
  3404   001306  6EBB               	movwf	187,c	;volatile
  3405                           
  3406                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  3407   001308  0E00               	movlw	0
  3408   00130A  6EBC               	movwf	188,c	;volatile
  3409                           
  3410                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  3411   00130C  0E07               	movlw	7
  3412   00130E  6EC6               	movwf	198,c	;volatile
  3413                           
  3414                           ; BSR set to: 57
  3415                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xFF;
  3416   001310  68C2               	setf	194,c	;volatile
  3417                           
  3418                           ; BSR set to: 57
  3419                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
  3420   001312  68C3               	setf	195,c	;volatile
  3421                           
  3422                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0x97;
  3423   001314  0E97               	movlw	151
  3424   001316  6EC4               	movwf	196,c	;volatile
  3425                           
  3426                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xEF;
  3427   001318  0EEF               	movlw	239
  3428   00131A  6EC5               	movwf	197,c	;volatile
  3429                           
  3430                           ; BSR set to: 57
  3431                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
  3432   00131C  013A               	movlb	58	; () banked
  3433   00131E  6970               	setf	112,b	;volatile
  3434                           
  3435                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0x67;
  3436   001320  0E67               	movlw	103
  3437   001322  6F60               	movwf	96,b	;volatile
  3438                           
  3439                           ; BSR set to: 58
  3440                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0xFF;
  3441   001324  6950               	setf	80,b	;volatile
  3442                           
  3443                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
  3444   001326  0E07               	movlw	7
  3445   001328  6F80               	movwf	128,b	;volatile
  3446                           
  3447                           ; BSR set to: 58
  3448                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0xFF;
  3449   00132A  6940               	setf	64,b	;volatile
  3450                           
  3451                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
  3452   00132C  0E00               	movlw	0
  3453   00132E  6F71               	movwf	113,b	;volatile
  3454                           
  3455                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
  3456   001330  0E00               	movlw	0
  3457   001332  6F81               	movwf	129,b	;volatile
  3458                           
  3459                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
  3460   001334  0E00               	movlw	0
  3461   001336  6F51               	movwf	81,b	;volatile
  3462                           
  3463                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
  3464   001338  0E00               	movlw	0
  3465   00133A  6F41               	movwf	65,b	;volatile
  3466                           
  3467                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
  3468   00133C  0E00               	movlw	0
  3469   00133E  6F61               	movwf	97,b	;volatile
  3470                           
  3471                           ;mcc_generated_files/pin_manager.c: 96:     RB1I2C = 0x00;
  3472   001340  0E00               	movlw	0
  3473   001342  6F5A               	movwf	90,b	;volatile
  3474                           
  3475                           ;mcc_generated_files/pin_manager.c: 97:     RB2I2C = 0x00;
  3476   001344  0E00               	movlw	0
  3477   001346  6F5B               	movwf	91,b	;volatile
  3478                           
  3479                           ;mcc_generated_files/pin_manager.c: 98:     RC3I2C = 0x00;
  3480   001348  0E00               	movlw	0
  3481   00134A  6F6A               	movwf	106,b	;volatile
  3482                           
  3483                           ;mcc_generated_files/pin_manager.c: 99:     RC4I2C = 0x00;
  3484   00134C  0E00               	movlw	0
  3485   00134E  6F6B               	movwf	107,b	;volatile
  3486                           
  3487                           ;mcc_generated_files/pin_manager.c: 100:     RD0I2C = 0x00;
  3488   001350  0E00               	movlw	0
  3489   001352  6F7A               	movwf	122,b	;volatile
  3490                           
  3491                           ;mcc_generated_files/pin_manager.c: 101:     RD1I2C = 0x00;
  3492   001354  0E00               	movlw	0
  3493   001356  6F7B               	movwf	123,b	;volatile
  3494                           
  3495                           ;mcc_generated_files/pin_manager.c: 106:     ODCONE = 0x00;
  3496   001358  0E00               	movlw	0
  3497   00135A  6F82               	movwf	130,b	;volatile
  3498                           
  3499                           ;mcc_generated_files/pin_manager.c: 107:     ODCONA = 0x00;
  3500   00135C  0E00               	movlw	0
  3501   00135E  6F42               	movwf	66,b	;volatile
  3502                           
  3503                           ;mcc_generated_files/pin_manager.c: 108:     ODCONB = 0x00;
  3504   001360  0E00               	movlw	0
  3505   001362  6F52               	movwf	82,b	;volatile
  3506                           
  3507                           ;mcc_generated_files/pin_manager.c: 109:     ODCONC = 0x00;
  3508   001364  0E00               	movlw	0
  3509   001366  6F62               	movwf	98,b	;volatile
  3510                           
  3511                           ;mcc_generated_files/pin_manager.c: 110:     ODCOND = 0x00;
  3512   001368  0E00               	movlw	0
  3513   00136A  6F72               	movwf	114,b	;volatile
  3514                           
  3515                           ; BSR set to: 58
  3516                           ;mcc_generated_files/pin_manager.c: 115:     SLRCONA = 0xFF;
  3517   00136C  6943               	setf	67,b	;volatile
  3518                           
  3519                           ; BSR set to: 58
  3520                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONB = 0xFF;
  3521   00136E  6953               	setf	83,b	;volatile
  3522                           
  3523                           ; BSR set to: 58
  3524                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONC = 0xFF;
  3525   001370  6963               	setf	99,b	;volatile
  3526                           
  3527                           ; BSR set to: 58
  3528                           ;mcc_generated_files/pin_manager.c: 118:     SLRCOND = 0xFF;
  3529   001372  6973               	setf	115,b	;volatile
  3530                           
  3531                           ;mcc_generated_files/pin_manager.c: 119:     SLRCONE = 0x07;
  3532   001374  0E07               	movlw	7
  3533   001376  6F83               	movwf	131,b	;volatile
  3534                           
  3535                           ; BSR set to: 58
  3536                           ;mcc_generated_files/pin_manager.c: 124:     INLVLA = 0xFF;
  3537   001378  6944               	setf	68,b	;volatile
  3538                           
  3539                           ; BSR set to: 58
  3540                           ;mcc_generated_files/pin_manager.c: 125:     INLVLB = 0xFF;
  3541   00137A  6954               	setf	84,b	;volatile
  3542                           
  3543                           ; BSR set to: 58
  3544                           ;mcc_generated_files/pin_manager.c: 126:     INLVLC = 0xFF;
  3545   00137C  6964               	setf	100,b	;volatile
  3546                           
  3547                           ; BSR set to: 58
  3548                           ;mcc_generated_files/pin_manager.c: 127:     INLVLD = 0xFF;
  3549   00137E  6974               	setf	116,b	;volatile
  3550                           
  3551                           ;mcc_generated_files/pin_manager.c: 128:     INLVLE = 0x0F;
  3552   001380  0E0F               	movlw	15
  3553   001382  6F84               	movwf	132,b	;volatile
  3554                           
  3555                           ;mcc_generated_files/pin_manager.c: 137:     SPI1SCKPPS = 0x13;
  3556   001384  0E13               	movlw	19
  3557   001386  6FDE               	movwf	222,b	;volatile
  3558                           
  3559                           ;mcc_generated_files/pin_manager.c: 138:     RC3PPS = 0x1E;
  3560   001388  0E1E               	movlw	30
  3561   00138A  6F13               	movwf	19,b	;volatile
  3562                           
  3563                           ;mcc_generated_files/pin_manager.c: 139:     RC5PPS = 0x1F;
  3564   00138C  0E1F               	movlw	31
  3565   00138E  6F15               	movwf	21,b	;volatile
  3566                           
  3567                           ;mcc_generated_files/pin_manager.c: 140:     RC6PPS = 0x13;
  3568   001390  0E13               	movlw	19
  3569   001392  6F16               	movwf	22,b	;volatile
  3570                           
  3571                           ;mcc_generated_files/pin_manager.c: 141:     U1RXPPS = 0x17;
  3572   001394  0E17               	movlw	23
  3573   001396  6FE5               	movwf	229,b	;volatile
  3574                           
  3575                           ;mcc_generated_files/pin_manager.c: 142:     SPI1SDIPPS = 0x14;
  3576   001398  0E14               	movlw	20
  3577   00139A  6FDF               	movwf	223,b	;volatile
  3578                           
  3579                           ; BSR set to: 58
  3580   00139C  0012               	return		;funcret
  3581   00139E                     __end_of_PIN_MANAGER_Initialize:
  3582                           	callstack 0
  3583                           
  3584 ;; *************** function _OSCILLATOR_Initialize *****************
  3585 ;; Defined at:
  3586 ;;		line 63 in file "mcc_generated_files/mcc.c"
  3587 ;; Parameters:    Size  Location     Type
  3588 ;;		None
  3589 ;; Auto vars:     Size  Location     Type
  3590 ;;		None
  3591 ;; Return value:  Size  Location     Type
  3592 ;;                  1    wreg      void 
  3593 ;; Registers used:
  3594 ;;		wreg, status,2
  3595 ;; Tracked objects:
  3596 ;;		On entry : 3F/3A
  3597 ;;		On exit  : 3F/39
  3598 ;;		Unchanged: 0/0
  3599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3603 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3604 ;;Total ram usage:        0 bytes
  3605 ;; Hardware stack levels used: 1
  3606 ;; Hardware stack levels required when called: 4
  3607 ;; This function calls:
  3608 ;;		Nothing
  3609 ;; This function is called by:
  3610 ;;		_SYSTEM_Initialize
  3611 ;; This function uses a non-reentrant model
  3612 ;;
  3613                           
  3614                           	psect	text32
  3615   001A7A                     __ptext32:
  3616                           	callstack 0
  3617   001A7A                     _OSCILLATOR_Initialize:
  3618                           	callstack 25
  3619                           
  3620                           ; BSR set to: 58
  3621                           ;mcc_generated_files/mcc.c: 66:     OSCCON1 = 0x20;
  3622                           
  3623                           ; BSR set to: 58
  3624                           ;incstack = 0
  3625   001A7A  0E20               	movlw	32
  3626   001A7C  0139               	movlb	57	; () banked
  3627   001A7E  6FD9               	movwf	217,b	;volatile
  3628                           
  3629                           ;mcc_generated_files/mcc.c: 68:     OSCCON3 = 0x00;
  3630   001A80  0E00               	movlw	0
  3631   001A82  6FDB               	movwf	219,b	;volatile
  3632                           
  3633                           ;mcc_generated_files/mcc.c: 70:     OSCEN = 0x00;
  3634   001A84  0E00               	movlw	0
  3635   001A86  6FDD               	movwf	221,b	;volatile
  3636                           
  3637                           ;mcc_generated_files/mcc.c: 72:     OSCFRQ = 0x08;
  3638   001A88  0E08               	movlw	8
  3639   001A8A  6FDF               	movwf	223,b	;volatile
  3640                           
  3641                           ;mcc_generated_files/mcc.c: 74:     OSCTUNE = 0x00;
  3642   001A8C  0E00               	movlw	0
  3643   001A8E  6FDE               	movwf	222,b	;volatile
  3644   001A90                     l56:
  3645                           
  3646                           ; BSR set to: 57
  3647                           ;mcc_generated_files/mcc.c: 76:     while(PLLR == 0)
  3648   001A90  B1DC               	btfsc	220,0,b	;volatile
  3649   001A92  0012               	return	
  3650   001A94  D7FD               	goto	l56
  3651   001A96                     __end_of_OSCILLATOR_Initialize:
  3652                           	callstack 0
  3653                           
  3654 ;; *************** function _INTERRUPT_Initialize *****************
  3655 ;; Defined at:
  3656 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  3657 ;; Parameters:    Size  Location     Type
  3658 ;;		None
  3659 ;; Auto vars:     Size  Location     Type
  3660 ;;		None
  3661 ;; Return value:  Size  Location     Type
  3662 ;;                  1    wreg      void 
  3663 ;; Registers used:
  3664 ;;		None
  3665 ;; Tracked objects:
  3666 ;;		On entry : 0/0
  3667 ;;		On exit  : 0/0
  3668 ;;		Unchanged: 0/0
  3669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3673 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3674 ;;Total ram usage:        0 bytes
  3675 ;; Hardware stack levels used: 1
  3676 ;; Hardware stack levels required when called: 4
  3677 ;; This function calls:
  3678 ;;		Nothing
  3679 ;; This function is called by:
  3680 ;;		_SYSTEM_Initialize
  3681 ;; This function uses a non-reentrant model
  3682 ;;
  3683                           
  3684                           	psect	text33
  3685   001BA6                     __ptext33:
  3686                           	callstack 0
  3687   001BA6                     _INTERRUPT_Initialize:
  3688                           	callstack 25
  3689                           
  3690                           ;mcc_generated_files/interrupt_manager.c: 55:     INTCON0bits.IPEN = 0;
  3691                           
  3692                           ; BSR set to: 57
  3693                           ;incstack = 0
  3694   001BA6  9AD2               	bcf	210,5,c	;volatile
  3695   001BA8  0012               	return		;funcret
  3696   001BAA                     __end_of_INTERRUPT_Initialize:
  3697                           	callstack 0
  3698                           
  3699 ;; *************** function _FVR_Initialize *****************
  3700 ;; Defined at:
  3701 ;;		line 58 in file "mcc_generated_files/fvr.c"
  3702 ;; Parameters:    Size  Location     Type
  3703 ;;		None
  3704 ;; Auto vars:     Size  Location     Type
  3705 ;;		None
  3706 ;; Return value:  Size  Location     Type
  3707 ;;                  1    wreg      void 
  3708 ;; Registers used:
  3709 ;;		wreg, status,2
  3710 ;; Tracked objects:
  3711 ;;		On entry : 3F/39
  3712 ;;		On exit  : 3F/3E
  3713 ;;		Unchanged: 0/0
  3714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3718 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3719 ;;Total ram usage:        0 bytes
  3720 ;; Hardware stack levels used: 1
  3721 ;; Hardware stack levels required when called: 4
  3722 ;; This function calls:
  3723 ;;		Nothing
  3724 ;; This function is called by:
  3725 ;;		_SYSTEM_Initialize
  3726 ;; This function uses a non-reentrant model
  3727 ;;
  3728                           
  3729                           	psect	text34
  3730   001B92                     __ptext34:
  3731                           	callstack 0
  3732   001B92                     _FVR_Initialize:
  3733                           	callstack 25
  3734                           
  3735                           ; BSR set to: 57
  3736                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0x82;
  3737                           
  3738                           ;incstack = 0
  3739   001B92  0E82               	movlw	130
  3740   001B94  013E               	movlb	62	; () banked
  3741   001B96  6FC1               	movwf	193,b	;volatile
  3742                           
  3743                           ; BSR set to: 62
  3744   001B98  0012               	return		;funcret
  3745   001B9A                     __end_of_FVR_Initialize:
  3746                           	callstack 0
  3747                           
  3748 ;; *************** function _ADCC_Initialize *****************
  3749 ;; Defined at:
  3750 ;;		line 62 in file "mcc_generated_files/adcc.c"
  3751 ;; Parameters:    Size  Location     Type
  3752 ;;		None
  3753 ;; Auto vars:     Size  Location     Type
  3754 ;;		None
  3755 ;; Return value:  Size  Location     Type
  3756 ;;                  1    wreg      void 
  3757 ;; Registers used:
  3758 ;;		wreg, status,2
  3759 ;; Tracked objects:
  3760 ;;		On entry : 38/39
  3761 ;;		On exit  : 3F/3E
  3762 ;;		Unchanged: 0/0
  3763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3767 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3768 ;;Total ram usage:        0 bytes
  3769 ;; Hardware stack levels used: 1
  3770 ;; Hardware stack levels required when called: 4
  3771 ;; This function calls:
  3772 ;;		Nothing
  3773 ;; This function is called by:
  3774 ;;		_SYSTEM_Initialize
  3775 ;;		_main
  3776 ;; This function uses a non-reentrant model
  3777 ;;
  3778                           
  3779                           	psect	text35
  3780   0017E8                     __ptext35:
  3781                           	callstack 0
  3782   0017E8                     _ADCC_Initialize:
  3783                           	callstack 25
  3784                           
  3785                           ;mcc_generated_files/adcc.c: 66:     ADLTHL = 0x00;
  3786                           
  3787                           ; BSR set to: 62
  3788                           ;incstack = 0
  3789   0017E8  0E00               	movlw	0
  3790   0017EA  013E               	movlb	62	; () banked
  3791   0017EC  6FDE               	movwf	222,b	;volatile
  3792                           
  3793                           ;mcc_generated_files/adcc.c: 68:     ADLTHH = 0x00;
  3794   0017EE  0E00               	movlw	0
  3795   0017F0  6FDF               	movwf	223,b	;volatile
  3796                           
  3797                           ;mcc_generated_files/adcc.c: 70:     ADUTHL = 0x00;
  3798   0017F2  0E00               	movlw	0
  3799   0017F4  6FE0               	movwf	224,b	;volatile
  3800                           
  3801                           ;mcc_generated_files/adcc.c: 72:     ADUTHH = 0x00;
  3802   0017F6  0E00               	movlw	0
  3803   0017F8  6FE1               	movwf	225,b	;volatile
  3804                           
  3805                           ;mcc_generated_files/adcc.c: 74:     ADSTPTL = 0x00;
  3806   0017FA  0E00               	movlw	0
  3807   0017FC  6FE4               	movwf	228,b	;volatile
  3808                           
  3809                           ;mcc_generated_files/adcc.c: 76:     ADSTPTH = 0x00;
  3810   0017FE  0E00               	movlw	0
  3811   001800  6FE5               	movwf	229,b	;volatile
  3812                           
  3813                           ;mcc_generated_files/adcc.c: 78:     ADACCU = 0x00;
  3814   001802  0E00               	movlw	0
  3815   001804  6FEA               	movwf	234,b	;volatile
  3816                           
  3817                           ;mcc_generated_files/adcc.c: 80:     ADRPT = 0x00;
  3818   001806  0E00               	movlw	0
  3819   001808  6FEC               	movwf	236,b	;volatile
  3820                           
  3821                           ;mcc_generated_files/adcc.c: 82:     ADPCH = 0x00;
  3822   00180A  0E00               	movlw	0
  3823   00180C  6FF1               	movwf	241,b	;volatile
  3824                           
  3825                           ;mcc_generated_files/adcc.c: 84:     ADACQL = 0x00;
  3826   00180E  0E00               	movlw	0
  3827   001810  6FF3               	movwf	243,b	;volatile
  3828                           
  3829                           ;mcc_generated_files/adcc.c: 86:     ADACQH = 0x00;
  3830   001812  0E00               	movlw	0
  3831   001814  6FF4               	movwf	244,b	;volatile
  3832                           
  3833                           ;mcc_generated_files/adcc.c: 88:     ADCAP = 0x00;
  3834   001816  0E00               	movlw	0
  3835   001818  6FF5               	movwf	245,b	;volatile
  3836                           
  3837                           ;mcc_generated_files/adcc.c: 90:     ADPREL = 0x00;
  3838   00181A  0E00               	movlw	0
  3839   00181C  6FF6               	movwf	246,b	;volatile
  3840                           
  3841                           ;mcc_generated_files/adcc.c: 92:     ADPREH = 0x00;
  3842   00181E  0E00               	movlw	0
  3843   001820  6FF7               	movwf	247,b	;volatile
  3844                           
  3845                           ;mcc_generated_files/adcc.c: 94:     ADCON1 = 0x00;
  3846   001822  0E00               	movlw	0
  3847   001824  6FF9               	movwf	249,b	;volatile
  3848                           
  3849                           ;mcc_generated_files/adcc.c: 96:     ADCON2 = 0x00;
  3850   001826  0E00               	movlw	0
  3851   001828  6FFA               	movwf	250,b	;volatile
  3852                           
  3853                           ;mcc_generated_files/adcc.c: 98:     ADCON3 = 0x00;
  3854   00182A  0E00               	movlw	0
  3855   00182C  6FFB               	movwf	251,b	;volatile
  3856                           
  3857                           ;mcc_generated_files/adcc.c: 100:     ADSTAT = 0x00;
  3858   00182E  0E00               	movlw	0
  3859   001830  6FFC               	movwf	252,b	;volatile
  3860                           
  3861                           ;mcc_generated_files/adcc.c: 102:     ADREF = 0x00;
  3862   001832  0E00               	movlw	0
  3863   001834  6FFD               	movwf	253,b	;volatile
  3864                           
  3865                           ;mcc_generated_files/adcc.c: 104:     ADACT = 0x00;
  3866   001836  0E00               	movlw	0
  3867   001838  6FFE               	movwf	254,b	;volatile
  3868                           
  3869                           ;mcc_generated_files/adcc.c: 106:     ADCLK = 0x1F;
  3870   00183A  0E1F               	movlw	31
  3871   00183C  6FFF               	movwf	255,b	;volatile
  3872                           
  3873                           ;mcc_generated_files/adcc.c: 108:     ADCON0 = 0x84;
  3874   00183E  0E84               	movlw	132
  3875   001840  6FF8               	movwf	248,b	;volatile
  3876                           
  3877                           ; BSR set to: 62
  3878   001842  0012               	return		;funcret
  3879   001844                     __end_of_ADCC_Initialize:
  3880                           	callstack 0
  3881                           
  3882 ;; *************** function _ADCC_StartConversion *****************
  3883 ;; Defined at:
  3884 ;;		line 113 in file "mcc_generated_files/adcc.c"
  3885 ;; Parameters:    Size  Location     Type
  3886 ;;  channel         1    wreg     enum E15846
  3887 ;; Auto vars:     Size  Location     Type
  3888 ;;  channel         1    2[COMRAM] enum E15846
  3889 ;; Return value:  Size  Location     Type
  3890 ;;                  1    wreg      void 
  3891 ;; Registers used:
  3892 ;;		wreg
  3893 ;; Tracked objects:
  3894 ;;		On entry : 38/39
  3895 ;;		On exit  : 3F/3E
  3896 ;;		Unchanged: 0/0
  3897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3899 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3901 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3902 ;;Total ram usage:        1 bytes
  3903 ;; Hardware stack levels used: 1
  3904 ;; Hardware stack levels required when called: 4
  3905 ;; This function calls:
  3906 ;;		Nothing
  3907 ;; This function is called by:
  3908 ;;		_main
  3909 ;; This function uses a non-reentrant model
  3910 ;;
  3911                           
  3912                           	psect	text36
  3913   001B10                     __ptext36:
  3914                           	callstack 0
  3915   001B10                     _ADCC_StartConversion:
  3916                           	callstack 26
  3917                           
  3918                           ; BSR set to: 62
  3919                           ;incstack = 0
  3920                           ;ADCC_StartConversion@channel stored from wreg
  3921   001B10  6E03               	movwf	ADCC_StartConversion@channel^0,c
  3922                           
  3923                           ;mcc_generated_files/adcc.c: 113: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 114: {;mcc_generated_files/adcc.c: 116:     ADPCH = channel;
  3924   001B12  0060  F00F  FEF1   	movff	ADCC_StartConversion@channel,16113	;volatile
  3925                           
  3926                           ;mcc_generated_files/adcc.c: 119:     ADCON0bits.ADON = 1;
  3927   001B18  013E               	movlb	62	; () banked
  3928   001B1A  8FF8               	bsf	248,7,b	;volatile
  3929                           
  3930                           ; BSR set to: 62
  3931                           ;mcc_generated_files/adcc.c: 122:     ADCON0bits.ADGO = 1;
  3932   001B1C  81F8               	bsf	248,0,b	;volatile
  3933                           
  3934                           ; BSR set to: 62
  3935   001B1E  0012               	return		;funcret
  3936   001B20                     __end_of_ADCC_StartConversion:
  3937                           	callstack 0
  3938                           
  3939 ;; *************** function _ADCC_IsConversionDone *****************
  3940 ;; Defined at:
  3941 ;;		line 125 in file "mcc_generated_files/adcc.c"
  3942 ;; Parameters:    Size  Location     Type
  3943 ;;		None
  3944 ;; Auto vars:     Size  Location     Type
  3945 ;;		None
  3946 ;; Return value:  Size  Location     Type
  3947 ;;                  1    wreg      _Bool 
  3948 ;; Registers used:
  3949 ;;		wreg
  3950 ;; Tracked objects:
  3951 ;;		On entry : 0/39
  3952 ;;		On exit  : 3F/3E
  3953 ;;		Unchanged: 0/0
  3954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3958 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3959 ;;Total ram usage:        0 bytes
  3960 ;; Hardware stack levels used: 1
  3961 ;; Hardware stack levels required when called: 4
  3962 ;; This function calls:
  3963 ;;		Nothing
  3964 ;; This function is called by:
  3965 ;;		_main
  3966 ;; This function uses a non-reentrant model
  3967 ;;
  3968                           
  3969                           	psect	text37
  3970   001B4A                     __ptext37:
  3971                           	callstack 0
  3972   001B4A                     _ADCC_IsConversionDone:
  3973                           	callstack 26
  3974                           
  3975                           ;mcc_generated_files/adcc.c: 128:     return ((unsigned char)(!ADCON0bits.ADGO));
  3976                           
  3977                           ; BSR set to: 62
  3978                           ;incstack = 0
  3979   001B4A  013E               	movlb	62	; () banked
  3980   001B4C  B1F8               	btfsc	248,0,b	;volatile
  3981   001B4E  D002               	goto	u890
  3982   001B50  0E01               	movlw	1
  3983   001B52  0012               	return	
  3984   001B54                     u890:
  3985   001B54  0E00               	movlw	0
  3986                           
  3987                           ; BSR set to: 62
  3988   001B56  0012               	return		;funcret
  3989   001B58                     __end_of_ADCC_IsConversionDone:
  3990                           	callstack 0
  3991                           
  3992 ;; *************** function _ADCC_GetConversionResult *****************
  3993 ;; Defined at:
  3994 ;;		line 131 in file "mcc_generated_files/adcc.c"
  3995 ;; Parameters:    Size  Location     Type
  3996 ;;		None
  3997 ;; Auto vars:     Size  Location     Type
  3998 ;;		None
  3999 ;; Return value:  Size  Location     Type
  4000 ;;                  2    2[COMRAM] unsigned short 
  4001 ;; Registers used:
  4002 ;;		wreg, status,2, status,0
  4003 ;; Tracked objects:
  4004 ;;		On entry : 3F/3E
  4005 ;;		On exit  : 3F/3E
  4006 ;;		Unchanged: 0/0
  4007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4008 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4010 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4011 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4012 ;;Total ram usage:        4 bytes
  4013 ;; Hardware stack levels used: 1
  4014 ;; Hardware stack levels required when called: 4
  4015 ;; This function calls:
  4016 ;;		Nothing
  4017 ;; This function is called by:
  4018 ;;		_main
  4019 ;; This function uses a non-reentrant model
  4020 ;;
  4021                           
  4022                           	psect	text38
  4023   001ADC                     __ptext38:
  4024                           	callstack 0
  4025   001ADC                     _ADCC_GetConversionResult:
  4026                           	callstack 26
  4027                           
  4028                           ; BSR set to: 62
  4029                           ;mcc_generated_files/adcc.c: 134:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  4030                           
  4031                           ; BSR set to: 62
  4032                           ;incstack = 0
  4033   001ADC  51F0               	movf	240,w,b	;volatile
  4034   001ADE  6E06               	movwf	(??_ADCC_GetConversionResult+1)^0,c
  4035   001AE0  6A05               	clrf	??_ADCC_GetConversionResult^0,c
  4036   001AE2  51EF               	movf	239,w,b	;volatile
  4037   001AE4  2405               	addwf	??_ADCC_GetConversionResult^0,w,c
  4038   001AE6  6E03               	movwf	?_ADCC_GetConversionResult^0,c
  4039   001AE8  0E00               	movlw	0
  4040   001AEA  2006               	addwfc	(??_ADCC_GetConversionResult+1)^0,w,c
  4041   001AEC  6E04               	movwf	(?_ADCC_GetConversionResult+1)^0,c
  4042                           
  4043                           ; BSR set to: 62
  4044   001AEE  0012               	return		;funcret
  4045   001AF0                     __end_of_ADCC_GetConversionResult:
  4046                           	callstack 0
  4047                           
  4048 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
  4049 ;; Defined at:
  4050 ;;		line 174 in file "mcc_generated_files/adcc.c"
  4051 ;; Parameters:    Size  Location     Type
  4052 ;;		None
  4053 ;; Auto vars:     Size  Location     Type
  4054 ;;		None
  4055 ;; Return value:  Size  Location     Type
  4056 ;;                  1    wreg      void 
  4057 ;; Registers used:
  4058 ;;		wreg, status,2
  4059 ;; Tracked objects:
  4060 ;;		On entry : 3F/3E
  4061 ;;		On exit  : 3F/3E
  4062 ;;		Unchanged: 0/0
  4063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4067 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4068 ;;Total ram usage:        0 bytes
  4069 ;; Hardware stack levels used: 1
  4070 ;; Hardware stack levels required when called: 4
  4071 ;; This function calls:
  4072 ;;		Nothing
  4073 ;; This function is called by:
  4074 ;;		_main
  4075 ;; This function uses a non-reentrant model
  4076 ;;
  4077                           
  4078                           	psect	text39
  4079   001B9A                     __ptext39:
  4080                           	callstack 0
  4081   001B9A                     _ADCC_DischargeSampleCapacitor:
  4082                           	callstack 26
  4083                           
  4084                           ; BSR set to: 62
  4085                           ;mcc_generated_files/adcc.c: 177:     ADPCH = 0x3b;
  4086                           
  4087                           ; BSR set to: 62
  4088                           ;incstack = 0
  4089   001B9A  0E3B               	movlw	59
  4090   001B9C  6FF1               	movwf	241,b	;volatile
  4091                           
  4092                           ; BSR set to: 62
  4093   001B9E  0012               	return		;funcret
  4094   001BA0                     __end_of_ADCC_DischargeSampleCapacitor:
  4095                           	callstack 0
  4096                           
  4097 ;; *************** function _INTERRUPT_InterruptManager *****************
  4098 ;; Defined at:
  4099 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  4100 ;; Parameters:    Size  Location     Type
  4101 ;;		None
  4102 ;; Auto vars:     Size  Location     Type
  4103 ;;		None
  4104 ;; Return value:  Size  Location     Type
  4105 ;;                  1    wreg      void 
  4106 ;; Registers used:
  4107 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  4108 ;; Tracked objects:
  4109 ;;		On entry : 0/0
  4110 ;;		On exit  : 0/0
  4111 ;;		Unchanged: 0/0
  4112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4115 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4116 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4117 ;;Total ram usage:        2 bytes
  4118 ;; Hardware stack levels used: 1
  4119 ;; Hardware stack levels required when called: 3
  4120 ;; This function calls:
  4121 ;;		Absolute function
  4122 ;;		_UART1_Receive_ISR
  4123 ;;		_UART1_Transmit_ISR
  4124 ;; This function is called by:
  4125 ;;		Interrupt level 2
  4126 ;; This function uses a non-reentrant model
  4127 ;;
  4128                           
  4129                           	psect	text40
  4130   001844                     __ptext40:
  4131                           	callstack 0
  4132   001844                     _INTERRUPT_InterruptManager:
  4133                           	callstack 24
  4134                           
  4135                           ; BSR set to: 62
  4136                           ;incstack = 0
  4137   001844  006F FFE8  F001    	movff	pclath,??_INTERRUPT_InterruptManager
  4138   00184A  006F FFEC  F002    	movff	pclatu,??_INTERRUPT_InterruptManager+1
  4139                           
  4140                           ;mcc_generated_files/interrupt_manager.c: 61:     if(PIE3bits.U1TXIE == 1 && PIR3bits.U1
      +                          TXIF == 1)
  4141   001850  0139               	movlb	57	; () banked
  4142   001852  B993               	btfsc	147,4,b	;volatile
  4143                           
  4144                           ; BSR set to: 57
  4145   001854  A9A3               	btfss	163,4,b	;volatile
  4146   001856  D00B               	goto	i2l646
  4147                           
  4148                           ; BSR set to: 57
  4149                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         UART1_TxInterruptHandler();
  4150   001858  D801               	call	i2u69_48
  4151   00185A  D017               	goto	i2u72_49
  4152   00185C                     i2u69_48:
  4153   00185C  0005               	push	
  4154   00185E  6EFA               	movwf	pclath,c
  4155   001860  501D               	movf	_UART1_TxInterruptHandler^0,w,c
  4156   001862  6EFD               	movwf	tosl,c
  4157   001864  501E               	movf	(_UART1_TxInterruptHandler+1)^0,w,c
  4158   001866  6EFE               	movwf	tosh,c
  4159   001868  6AFF               	clrf	tosu,c
  4160   00186A  50FA               	movf	pclath,w,c
  4161   00186C  0012               	return		;indir
  4162   00186E                     i2l646:
  4163                           
  4164                           ; BSR set to: 57
  4165   00186E  B793               	btfsc	147,3,b	;volatile
  4166                           
  4167                           ; BSR set to: 57
  4168   001870  A7A3               	btfss	163,3,b	;volatile
  4169   001872  D00B               	goto	i2u72_49
  4170                           
  4171                           ; BSR set to: 57
  4172                           ;mcc_generated_files/interrupt_manager.c: 66:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 67:         UART1_RxInterruptHandler();
  4173   001874  D801               	call	i2u72_48
  4174   001876  D009               	goto	i2u72_49
  4175   001878                     i2u72_48:
  4176   001878  0005               	push	
  4177   00187A  6EFA               	movwf	pclath,c
  4178   00187C  501F               	movf	_UART1_RxInterruptHandler^0,w,c
  4179   00187E  6EFD               	movwf	tosl,c
  4180   001880  5020               	movf	(_UART1_RxInterruptHandler+1)^0,w,c
  4181   001882  6EFE               	movwf	tosh,c
  4182   001884  6AFF               	clrf	tosu,c
  4183   001886  50FA               	movf	pclath,w,c
  4184   001888  0012               	return		;indir
  4185   00188A                     i2u72_49:
  4186                           
  4187                           ;mcc_generated_files/interrupt_manager.c: 68:     }
  4188   00188A  0060  F00B  FFFB   	movff	??_INTERRUPT_InterruptManager+1,pclatu
  4189   001890  0060  F007  FFFA   	movff	??_INTERRUPT_InterruptManager,pclath
  4190   001896  0011               	retfie		f
  4191   001898                     __end_of_INTERRUPT_InterruptManager:
  4192                           	callstack 0
  4193                           
  4194 ;; *************** function _UART1_Transmit_ISR *****************
  4195 ;; Defined at:
  4196 ;;		line 228 in file "mcc_generated_files/uart1.c"
  4197 ;; Parameters:    Size  Location     Type
  4198 ;;		None
  4199 ;; Auto vars:     Size  Location     Type
  4200 ;;		None
  4201 ;; Return value:  Size  Location     Type
  4202 ;;                  1    wreg      void 
  4203 ;; Registers used:
  4204 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4205 ;; Tracked objects:
  4206 ;;		On entry : 3F/39
  4207 ;;		On exit  : 3B/39
  4208 ;;		Unchanged: 0/0
  4209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4213 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4214 ;;Total ram usage:        0 bytes
  4215 ;; Hardware stack levels used: 1
  4216 ;; This function calls:
  4217 ;;		Nothing
  4218 ;; This function is called by:
  4219 ;;		_UART1_Initialize
  4220 ;;		_INTERRUPT_InterruptManager
  4221 ;; This function uses a non-reentrant model
  4222 ;;
  4223                           
  4224                           	psect	text41
  4225   0019CC                     __ptext41:
  4226                           	callstack 0
  4227   0019CC                     _UART1_Transmit_ISR:
  4228                           	callstack 26
  4229                           
  4230                           ; BSR set to: 57
  4231                           ;mcc_generated_files/uart1.c: 231:     if(sizeof(uart1TxBuffer) > uart1TxBufferRemaining
      +                          )
  4232                           
  4233                           ;incstack = 0
  4234   0019CC  0E08               	movlw	8
  4235   0019CE  6029               	cpfslt	_uart1TxBufferRemaining^0,c
  4236   0019D0  D00F               	goto	i2l590
  4237                           
  4238                           ; BSR set to: 57
  4239                           ;mcc_generated_files/uart1.c: 232:     {;mcc_generated_files/uart1.c: 233:         U1TXB
      +                           = uart1TxBuffer[uart1TxTail++];
  4240   0019D2  502A               	movf	_uart1TxTail^0,w,c
  4241   0019D4  0FA3               	addlw	low _uart1TxBuffer
  4242   0019D6  6ED9               	movwf	fsr2l,c
  4243   0019D8  6ADA               	clrf	fsr2h,c
  4244   0019DA  50DF               	movf	indf2,w,c
  4245   0019DC  013D               	movlb	61	; () banked
  4246   0019DE  6FEA               	movwf	234,b	;volatile
  4247                           
  4248                           ; BSR set to: 61
  4249   0019E0  2A2A               	incf	_uart1TxTail^0,f,c	;volatile
  4250                           
  4251                           ; BSR set to: 61
  4252                           ;mcc_generated_files/uart1.c: 234:        if(sizeof(uart1TxBuffer) <= uart1TxTail)
  4253   0019E2  0E07               	movlw	7
  4254   0019E4  642A               	cpfsgt	_uart1TxTail^0,c
  4255   0019E6  D002               	goto	i2l2147
  4256                           
  4257                           ; BSR set to: 61
  4258                           ;mcc_generated_files/uart1.c: 235:         {;mcc_generated_files/uart1.c: 236:          
      +                             uart1TxTail = 0;
  4259   0019E8  0E00               	movlw	0
  4260   0019EA  6E2A               	movwf	_uart1TxTail^0,c	;volatile
  4261   0019EC                     i2l2147:
  4262                           
  4263                           ; BSR set to: 61
  4264                           ;mcc_generated_files/uart1.c: 238:         uart1TxBufferRemaining++;
  4265   0019EC  2A29               	incf	_uart1TxBufferRemaining^0,f,c	;volatile
  4266                           
  4267                           ;mcc_generated_files/uart1.c: 239:     }
  4268   0019EE  0012               	return	
  4269   0019F0                     i2l590:
  4270                           
  4271                           ; BSR set to: 57
  4272                           ;mcc_generated_files/uart1.c: 241:     {;mcc_generated_files/uart1.c: 242:         PIE3b
      +                          its.U1TXIE = 0;
  4273   0019F0  9993               	bcf	147,4,b	;volatile
  4274   0019F2  0012               	return		;funcret
  4275   0019F4                     __end_of_UART1_Transmit_ISR:
  4276                           	callstack 0
  4277                           
  4278 ;; *************** function _UART1_Receive_ISR *****************
  4279 ;; Defined at:
  4280 ;;		line 248 in file "mcc_generated_files/uart1.c"
  4281 ;; Parameters:    Size  Location     Type
  4282 ;;		None
  4283 ;; Auto vars:     Size  Location     Type
  4284 ;;		None
  4285 ;; Return value:  Size  Location     Type
  4286 ;;                  1    wreg      void 
  4287 ;; Registers used:
  4288 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  4289 ;; Tracked objects:
  4290 ;;		On entry : 3F/39
  4291 ;;		On exit  : 0/0
  4292 ;;		Unchanged: 0/0
  4293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4297 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4298 ;;Total ram usage:        0 bytes
  4299 ;; Hardware stack levels used: 1
  4300 ;; Hardware stack levels required when called: 2
  4301 ;; This function calls:
  4302 ;;		Absolute function
  4303 ;;		_UART1_DefaultErrorHandler
  4304 ;;		_UART1_DefaultFramingErrorHandler
  4305 ;;		_UART1_DefaultOverrunErrorHandler
  4306 ;;		_UART1_RxDataHandler
  4307 ;; This function is called by:
  4308 ;;		_UART1_Initialize
  4309 ;;		_INTERRUPT_InterruptManager
  4310 ;; This function uses a non-reentrant model
  4311 ;;
  4312                           
  4313                           	psect	text42
  4314   001570                     __ptext42:
  4315                           	callstack 0
  4316   001570                     _UART1_Receive_ISR:
  4317                           	callstack 24
  4318                           
  4319                           ; BSR set to: 57
  4320                           ;mcc_generated_files/uart1.c: 251:     uart1RxStatusBuffer[uart1RxHead].status = 0;
  4321                           
  4322                           ;incstack = 0
  4323   001570  5028               	movf	_uart1RxHead^0,w,c
  4324   001572  0F93               	addlw	low _uart1RxStatusBuffer
  4325   001574  6ED9               	movwf	fsr2l,c
  4326   001576  6ADA               	clrf	fsr2h,c
  4327   001578  0E00               	movlw	0
  4328   00157A  6EDF               	movwf	indf2,c
  4329                           
  4330                           ; BSR set to: 57
  4331                           ;mcc_generated_files/uart1.c: 253:     if(U1ERRIRbits.FERIF){
  4332   00157C  013D               	movlb	61	; () banked
  4333   00157E  A7F9               	btfss	249,3,b	;volatile
  4334   001580  D011               	goto	i2u53_49
  4335                           
  4336                           ; BSR set to: 61
  4337                           ;mcc_generated_files/uart1.c: 254:         uart1RxStatusBuffer[uart1RxHead].ferr = 1;
  4338   001582  5028               	movf	_uart1RxHead^0,w,c
  4339   001584  0F93               	addlw	low _uart1RxStatusBuffer
  4340   001586  6ED9               	movwf	fsr2l,c
  4341   001588  6ADA               	clrf	fsr2h,c
  4342   00158A  0100               	movlb	0	; () banked
  4343   00158C  82DF               	bsf	indf2,1,c
  4344                           
  4345                           ; BSR set to: 0
  4346                           ;mcc_generated_files/uart1.c: 255:         UART1_FramingErrorHandler();
  4347   00158E  D801               	call	i2u53_48
  4348   001590  D009               	goto	i2u53_49
  4349   001592                     i2u53_48:
  4350   001592  0005               	push	
  4351   001594  6EFA               	movwf	pclath,c
  4352   001596  51AF               	movf	_UART1_FramingErrorHandler& (0+255),w,b
  4353   001598  6EFD               	movwf	tosl,c
  4354   00159A  51B0               	movf	(_UART1_FramingErrorHandler+1)& (0+255),w,b
  4355   00159C  6EFE               	movwf	tosh,c
  4356   00159E  6AFF               	clrf	tosu,c
  4357   0015A0  50FA               	movf	pclath,w,c
  4358   0015A2  0012               	return		;indir
  4359   0015A4                     i2u53_49:
  4360                           
  4361                           ;mcc_generated_files/uart1.c: 258:     if(U1ERRIRbits.RXFOIF){
  4362   0015A4  013D               	movlb	61	; () banked
  4363   0015A6  A3F9               	btfss	249,1,b	;volatile
  4364   0015A8  D011               	goto	i2u55_49
  4365                           
  4366                           ; BSR set to: 61
  4367                           ;mcc_generated_files/uart1.c: 259:         uart1RxStatusBuffer[uart1RxHead].oerr = 1;
  4368   0015AA  5028               	movf	_uart1RxHead^0,w,c
  4369   0015AC  0F93               	addlw	low _uart1RxStatusBuffer
  4370   0015AE  6ED9               	movwf	fsr2l,c
  4371   0015B0  6ADA               	clrf	fsr2h,c
  4372   0015B2  0100               	movlb	0	; () banked
  4373   0015B4  84DF               	bsf	indf2,2,c
  4374                           
  4375                           ; BSR set to: 0
  4376                           ;mcc_generated_files/uart1.c: 260:         UART1_OverrunErrorHandler();
  4377   0015B6  D801               	call	i2u55_48
  4378   0015B8  D009               	goto	i2u55_49
  4379   0015BA                     i2u55_48:
  4380   0015BA  0005               	push	
  4381   0015BC  6EFA               	movwf	pclath,c
  4382   0015BE  51AD               	movf	_UART1_OverrunErrorHandler& (0+255),w,b
  4383   0015C0  6EFD               	movwf	tosl,c
  4384   0015C2  51AE               	movf	(_UART1_OverrunErrorHandler+1)& (0+255),w,b
  4385   0015C4  6EFE               	movwf	tosh,c
  4386   0015C6  6AFF               	clrf	tosu,c
  4387   0015C8  50FA               	movf	pclath,w,c
  4388   0015CA  0012               	return		;indir
  4389   0015CC                     i2u55_49:
  4390                           
  4391                           ;mcc_generated_files/uart1.c: 263:     if(uart1RxStatusBuffer[uart1RxHead].status){
  4392   0015CC  5028               	movf	_uart1RxHead^0,w,c
  4393   0015CE  0F93               	addlw	low _uart1RxStatusBuffer
  4394   0015D0  6ED9               	movwf	fsr2l,c
  4395   0015D2  6ADA               	clrf	fsr2h,c
  4396   0015D4  50DF               	movf	indf2,w,c
  4397   0015D6  B4D8               	btfsc	status,2,c
  4398   0015D8  D00C               	goto	i2l2167
  4399                           
  4400                           ;mcc_generated_files/uart1.c: 264:         UART1_ErrorHandler();
  4401   0015DA  D801               	call	i2u57_48
  4402   0015DC  0012               	return	
  4403   0015DE                     i2u57_48:
  4404   0015DE  0005               	push	
  4405   0015E0  6EFA               	movwf	pclath,c
  4406   0015E2  0100               	movlb	0	; () banked
  4407   0015E4  51AB               	movf	_UART1_ErrorHandler& (0+255),w,b
  4408   0015E6  6EFD               	movwf	tosl,c
  4409   0015E8  51AC               	movf	(_UART1_ErrorHandler+1)& (0+255),w,b
  4410   0015EA  6EFE               	movwf	tosh,c
  4411   0015EC  6AFF               	clrf	tosu,c
  4412   0015EE  50FA               	movf	pclath,w,c
  4413   0015F0  0012               	return		;indir
  4414   0015F2                     i2l2167:
  4415                           
  4416                           ;mcc_generated_files/uart1.c: 266:         UART1_RxDataHandler();
  4417   0015F2  EC2E  F00D         	call	_UART1_RxDataHandler	;wreg free
  4418   0015F6  0012               	return		;funcret
  4419   0015F8                     __end_of_UART1_Receive_ISR:
  4420                           	callstack 0
  4421                           
  4422 ;; *************** function _UART1_DefaultOverrunErrorHandler *****************
  4423 ;; Defined at:
  4424 ;;		line 284 in file "mcc_generated_files/uart1.c"
  4425 ;; Parameters:    Size  Location     Type
  4426 ;;		None
  4427 ;; Auto vars:     Size  Location     Type
  4428 ;;		None
  4429 ;; Return value:  Size  Location     Type
  4430 ;;                  1    wreg      void 
  4431 ;; Registers used:
  4432 ;;		None
  4433 ;; Tracked objects:
  4434 ;;		On entry : 3F/0
  4435 ;;		On exit  : 3F/0
  4436 ;;		Unchanged: 3F/0
  4437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4441 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4442 ;;Total ram usage:        0 bytes
  4443 ;; Hardware stack levels used: 1
  4444 ;; This function calls:
  4445 ;;		Nothing
  4446 ;; This function is called by:
  4447 ;;		_UART1_Initialize
  4448 ;;		_UART1_Receive_ISR
  4449 ;; This function uses a non-reentrant model
  4450 ;;
  4451                           
  4452                           	psect	text43
  4453   001BAA                     __ptext43:
  4454                           	callstack 0
  4455   001BAA                     _UART1_DefaultOverrunErrorHandler:
  4456                           	callstack 25
  4457                           
  4458                           ; BSR set to: 0
  4459                           
  4460                           ;incstack = 0
  4461   001BAA  0012               	return		;funcret
  4462   001BAC                     __end_of_UART1_DefaultOverrunErrorHandler:
  4463                           	callstack 0
  4464                           
  4465 ;; *************** function _UART1_DefaultFramingErrorHandler *****************
  4466 ;; Defined at:
  4467 ;;		line 282 in file "mcc_generated_files/uart1.c"
  4468 ;; Parameters:    Size  Location     Type
  4469 ;;		None
  4470 ;; Auto vars:     Size  Location     Type
  4471 ;;		None
  4472 ;; Return value:  Size  Location     Type
  4473 ;;                  1    wreg      void 
  4474 ;; Registers used:
  4475 ;;		None
  4476 ;; Tracked objects:
  4477 ;;		On entry : 3F/0
  4478 ;;		On exit  : 3F/0
  4479 ;;		Unchanged: 3F/0
  4480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4484 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4485 ;;Total ram usage:        0 bytes
  4486 ;; Hardware stack levels used: 1
  4487 ;; This function calls:
  4488 ;;		Nothing
  4489 ;; This function is called by:
  4490 ;;		_UART1_Initialize
  4491 ;;		_UART1_Receive_ISR
  4492 ;; This function uses a non-reentrant model
  4493 ;;
  4494                           
  4495                           	psect	text44
  4496   001BAC                     __ptext44:
  4497                           	callstack 0
  4498   001BAC                     _UART1_DefaultFramingErrorHandler:
  4499                           	callstack 25
  4500                           
  4501                           ; BSR set to: 0
  4502                           
  4503                           ; BSR set to: 0
  4504                           ;incstack = 0
  4505   001BAC  0012               	return		;funcret
  4506   001BAE                     __end_of_UART1_DefaultFramingErrorHandler:
  4507                           	callstack 0
  4508                           
  4509 ;; *************** function _UART1_DefaultErrorHandler *****************
  4510 ;; Defined at:
  4511 ;;		line 286 in file "mcc_generated_files/uart1.c"
  4512 ;; Parameters:    Size  Location     Type
  4513 ;;		None
  4514 ;; Auto vars:     Size  Location     Type
  4515 ;;		None
  4516 ;; Return value:  Size  Location     Type
  4517 ;;                  1    wreg      void 
  4518 ;; Registers used:
  4519 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4520 ;; Tracked objects:
  4521 ;;		On entry : 3F/0
  4522 ;;		On exit  : 0/0
  4523 ;;		Unchanged: 0/0
  4524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4528 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4529 ;;Total ram usage:        0 bytes
  4530 ;; Hardware stack levels used: 1
  4531 ;; Hardware stack levels required when called: 1
  4532 ;; This function calls:
  4533 ;;		_UART1_RxDataHandler
  4534 ;; This function is called by:
  4535 ;;		_UART1_Initialize
  4536 ;;		_UART1_Receive_ISR
  4537 ;; This function uses a non-reentrant model
  4538 ;;
  4539                           
  4540                           	psect	text45
  4541   001BA0                     __ptext45:
  4542                           	callstack 0
  4543   001BA0                     _UART1_DefaultErrorHandler:
  4544                           	callstack 24
  4545                           
  4546                           ; BSR set to: 0
  4547                           ;mcc_generated_files/uart1.c: 287:     UART1_RxDataHandler();
  4548                           
  4549                           ; BSR set to: 0
  4550                           ;incstack = 0
  4551   001BA0  EC2E  F00D         	call	_UART1_RxDataHandler	;wreg free
  4552   001BA4  0012               	return		;funcret
  4553   001BA6                     __end_of_UART1_DefaultErrorHandler:
  4554                           	callstack 0
  4555                           
  4556 ;; *************** function _UART1_RxDataHandler *****************
  4557 ;; Defined at:
  4558 ;;		line 272 in file "mcc_generated_files/uart1.c"
  4559 ;; Parameters:    Size  Location     Type
  4560 ;;		None
  4561 ;; Auto vars:     Size  Location     Type
  4562 ;;		None
  4563 ;; Return value:  Size  Location     Type
  4564 ;;                  1    wreg      void 
  4565 ;; Registers used:
  4566 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4567 ;; Tracked objects:
  4568 ;;		On entry : 0/3D
  4569 ;;		On exit  : 0/0
  4570 ;;		Unchanged: 0/0
  4571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4575 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4576 ;;Total ram usage:        0 bytes
  4577 ;; Hardware stack levels used: 1
  4578 ;; This function calls:
  4579 ;;		Nothing
  4580 ;; This function is called by:
  4581 ;;		_UART1_Receive_ISR
  4582 ;;		_UART1_DefaultErrorHandler
  4583 ;; This function uses a non-reentrant model
  4584 ;;
  4585                           
  4586                           	psect	text46
  4587   001A5C                     __ptext46:
  4588                           	callstack 0
  4589   001A5C                     _UART1_RxDataHandler:
  4590                           	callstack 25
  4591                           
  4592                           ;mcc_generated_files/uart1.c: 274:     uart1RxBuffer[uart1RxHead++] = U1RXB;
  4593                           
  4594                           ;incstack = 0
  4595   001A5C  5028               	movf	_uart1RxHead^0,w,c
  4596   001A5E  0F9B               	addlw	low _uart1RxBuffer
  4597   001A60  6ED9               	movwf	fsr2l,c
  4598   001A62  6ADA               	clrf	fsr2h,c
  4599   001A64  006F F7A3 FFDF     	movff	15848,indf2	;volatile
  4600   001A6A  2A28               	incf	_uart1RxHead^0,f,c	;volatile
  4601                           
  4602                           ;mcc_generated_files/uart1.c: 275:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
  4603   001A6C  0E07               	movlw	7
  4604   001A6E  6428               	cpfsgt	_uart1RxHead^0,c
  4605   001A70  D002               	goto	i2l2037
  4606                           
  4607                           ;mcc_generated_files/uart1.c: 276:     {;mcc_generated_files/uart1.c: 277:         uart1
      +                          RxHead = 0;
  4608   001A72  0E00               	movlw	0
  4609   001A74  6E28               	movwf	_uart1RxHead^0,c	;volatile
  4610   001A76                     i2l2037:
  4611                           
  4612                           ;mcc_generated_files/uart1.c: 279:     uart1RxCount++;
  4613   001A76  2A26               	incf	_uart1RxCount^0,f,c	;volatile
  4614   001A78  0012               	return		;funcret
  4615   001A7A                     __end_of_UART1_RxDataHandler:
  4616                           	callstack 0
  4617                           
  4618                           ;
  4619                           ; Interrupt Vector Table @ 0x8
  4620                           ;
  4621                           
  4622                           	psect	ivt0x8
  4623   000008                     __pivt0x8:
  4624                           	callstack 0
  4625   000008                     ivt0x8_base:
  4626                           	callstack 0
  4627                           
  4628                           ; high-priority vector
  4629   000008  EF22  F00C         	goto	_INTERRUPT_InterruptManager
  4630   000018                     	org	16
  4631                           
  4632                           ; low-priority vector
  4633   000018  00FF               	reset	
  4634                           
  4635                           	psect	text47
  4636   000000                     __ptext47:
  4637                           	callstack 0
  4638                           
  4639                           	psect	rparam
  4640   000000                     
  4641                           	psect	idloc
  4642                           
  4643                           ;Config register IDLOC0 @ 0x200000
  4644                           ;	unspecified, using default values
  4645   200000                     	org	2097152
  4646   200000  0FFF               	dw	4095
  4647                           
  4648                           ;Config register IDLOC1 @ 0x200002
  4649                           ;	unspecified, using default values
  4650   200002                     	org	2097154
  4651   200002  0FFF               	dw	4095
  4652                           
  4653                           ;Config register IDLOC2 @ 0x200004
  4654                           ;	unspecified, using default values
  4655   200004                     	org	2097156
  4656   200004  0FFF               	dw	4095
  4657                           
  4658                           ;Config register IDLOC3 @ 0x200006
  4659                           ;	unspecified, using default values
  4660   200006                     	org	2097158
  4661   200006  0FFF               	dw	4095
  4662                           
  4663                           ;Config register IDLOC4 @ 0x200008
  4664                           ;	unspecified, using default values
  4665   200008                     	org	2097160
  4666   200008  0FFF               	dw	4095
  4667                           
  4668                           ;Config register IDLOC5 @ 0x20000A
  4669                           ;	unspecified, using default values
  4670   20000A                     	org	2097162
  4671   20000A  0FFF               	dw	4095
  4672                           
  4673                           ;Config register IDLOC6 @ 0x20000C
  4674                           ;	unspecified, using default values
  4675   20000C                     	org	2097164
  4676   20000C  0FFF               	dw	4095
  4677                           
  4678                           ;Config register IDLOC7 @ 0x20000E
  4679                           ;	unspecified, using default values
  4680   20000E                     	org	2097166
  4681   20000E  0FFF               	dw	4095
  4682                           
  4683                           	psect	config
  4684                           
  4685                           ;Config register CONFIG1L @ 0x300000
  4686                           ;	External Oscillator Selection
  4687                           ;	FEXTOSC = ECH, EC (external clock) above 8 MHz; PFM set to high power
  4688                           ;	Reset Oscillator Selection
  4689                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  4690   300000                     	org	3145728
  4691   300000  AF                 	db	175
  4692                           
  4693                           ;Config register CONFIG1H @ 0x300001
  4694                           ;	Clock out Enable bit
  4695                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  4696                           ;	PRLOCKED One-Way Set Enable bit
  4697                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
  4698                           ;	Clock Switch Enable bit
  4699                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  4700                           ;	Fail-Safe Clock Monitor Enable bit
  4701                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  4702   300001                     	org	3145729
  4703   300001  FF                 	db	255
  4704                           
  4705                           ;Config register CONFIG2L @ 0x300002
  4706                           ;	MCLR Enable bit
  4707                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  4708                           ;	Power-up timer selection bits
  4709                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  4710                           ;	Multi-vector enable bit
  4711                           ;	MVECEN = OFF, Interrupt contoller does not use vector table to prioritze interrupts
  4712                           ;	IVTLOCK bit One-way set enable bit
  4713                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
  4714                           ;	Low Power BOR Enable bit
  4715                           ;	LPBOREN = OFF, ULPBOR disabled
  4716                           ;	Brown-out Reset Enable bits
  4717                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  4718   300002                     	org	3145730
  4719   300002  F7                 	db	247
  4720                           
  4721                           ;Config register CONFIG2H @ 0x300003
  4722                           ;	Brown-out Reset Voltage Selection bits
  4723                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
  4724                           ;	ZCD Disable bit
  4725                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  4726                           ;	PPSLOCK bit One-Way Set Enable bit
  4727                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  4728                           ;	Stack Full/Underflow Reset Enable bit
  4729                           ;	STVREN = ON, Stack full/underflow will cause Reset
  4730                           ;	Debugger Enable bit
  4731                           ;	DEBUG = OFF, Background debugger disabled
  4732                           ;	Extended Instruction Set Enable bit
  4733                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  4734   300003                     	org	3145731
  4735   300003  FF                 	db	255
  4736                           
  4737                           ;Config register CONFIG3L @ 0x300004
  4738                           ;	WDT Period selection bits
  4739                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  4740                           ;	WDT operating mode
  4741                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  4742   300004                     	org	3145732
  4743   300004  9F                 	db	159
  4744                           
  4745                           ;Config register CONFIG3H @ 0x300005
  4746                           ;	WDT Window Select bits
  4747                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  4748                           ;	WDT input clock selector
  4749                           ;	WDTCCS = SC, Software Control
  4750   300005                     	org	3145733
  4751   300005  FF                 	db	255
  4752                           
  4753                           ;Config register CONFIG4L @ 0x300006
  4754                           ;	Boot Block Size selection bits
  4755                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  4756                           ;	Boot Block enable bit
  4757                           ;	BBEN = OFF, Boot block disabled
  4758                           ;	Storage Area Flash enable bit
  4759                           ;	SAFEN = OFF, SAF disabled
  4760                           ;	Application Block write protection bit
  4761                           ;	WRTAPP = OFF, Application Block not write protected
  4762   300006                     	org	3145734
  4763   300006  FF                 	db	255
  4764                           
  4765                           ;Config register CONFIG4H @ 0x300007
  4766                           ;	Boot Block Write Protection bit
  4767                           ;	WRTB = OFF, Boot Block not write-protected
  4768                           ;	Configuration Register Write Protection bit
  4769                           ;	WRTC = OFF, Configuration registers not write-protected
  4770                           ;	Data EEPROM Write Protection bit
  4771                           ;	WRTD = OFF, Data EEPROM not write-protected
  4772                           ;	SAF Write protection bit
  4773                           ;	WRTSAF = OFF, SAF not Write Protected
  4774                           ;	Low Voltage Programming Enable bit
  4775                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  4776   300007                     	org	3145735
  4777   300007  FF                 	db	255
  4778                           
  4779                           ;Config register CONFIG5L @ 0x300008
  4780                           ;	PFM and Data EEPROM Code Protection bit
  4781                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  4782   300008                     	org	3145736
  4783   300008  FF                 	db	255
  4784                           
  4785                           ;Config register CONFIG5H @ 0x300009
  4786                           ;	unspecified, using default values
  4787   300009                     	org	3145737
  4788   300009  FF                 	db	255
  4789                           tosu	equ	0x3FFF
  4790                           tosh	equ	0x3FFE
  4791                           tosl	equ	0x3FFD
  4792                           stkptr	equ	0x3FFC
  4793                           pclatu	equ	0x3FFB
  4794                           pclath	equ	0x3FFA
  4795                           pcl	equ	0x3FF9
  4796                           tblptru	equ	0x3FF8
  4797                           tblptrh	equ	0x3FF7
  4798                           tblptrl	equ	0x3FF6
  4799                           tablat	equ	0x3FF5
  4800                           prodh	equ	0x3FF4
  4801                           prodl	equ	0x3FF3
  4802                           indf0	equ	0x3FEF
  4803                           postinc0	equ	0x3FEE
  4804                           postdec0	equ	0x3FED
  4805                           preinc0	equ	0x3FEC
  4806                           plusw0	equ	0x3FEB
  4807                           fsr0h	equ	0x3FEA
  4808                           fsr0l	equ	0x3FE9
  4809                           wreg	equ	0x3FE8
  4810                           indf1	equ	0x3FE7
  4811                           postinc1	equ	0x3FE6
  4812                           postdec1	equ	0x3FE5
  4813                           preinc1	equ	0x3FE4
  4814                           plusw1	equ	0x3FE3
  4815                           fsr1h	equ	0x3FE2
  4816                           fsr1l	equ	0x3FE1
  4817                           bsr	equ	0x3FE0
  4818                           indf2	equ	0x3FDF
  4819                           postinc2	equ	0x3FDE
  4820                           postdec2	equ	0x3FDD
  4821                           preinc2	equ	0x3FDC
  4822                           plusw2	equ	0x3FDB
  4823                           fsr2h	equ	0x3FDA
  4824                           fsr2l	equ	0x3FD9
  4825                           status	equ	0x3FD8

Data Sizes:
    Strings     0
    Constant    5
    Data        0
    BSS         49
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     24      43
    BANK0           160     51      81
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0

Pointer List with Targets:

    actualizar_recibido_Eusart@disp	PTR struct usart size(1) Largest target is 11
		 -> main@disp(BANK0[11]), 

    dato_recibido_completo@disp	PTR struct usart size(1) Largest target is 11
		 -> main@disp(BANK0[11]), 

    recibir_periodo_Eusart@disp	PTR struct usart size(1) Largest target is 11
		 -> main@disp(BANK0[11]), 

    iniciar_struct_usart@disp	PTR struct usart size(1) Largest target is 11
		 -> main@disp(BANK0[11]), 

    actualize_valor@spi	PTR struct structspi size(1) Largest target is 12
		 -> main@spi(BANK0[12]), 

    inicie_SPI@spi	PTR struct structspi size(1) Largest target is 12
		 -> main@spi(BANK0[12]), 

    cola_vacia@c	PTR struct eCola size(1) Largest target is 21
		 -> main@cola(BANK0[21]), 

    cola_llena@c	PTR struct eCola size(1) Largest target is 21
		 -> main@cola(BANK0[21]), 

    cola_get@c	PTR struct eCola size(1) Largest target is 21
		 -> main@cola(BANK0[21]), 

    cola_add@c	PTR struct eCola size(1) Largest target is 21
		 -> main@cola(BANK0[21]), 

    inicie_cola@c	PTR struct eCola size(1) Largest target is 21
		 -> main@cola(BANK0[21]), 

    Tm_Baje_periodico@ctp	PTR struct Tm_Periodico size(1) Largest target is 7
		 -> main@timer(BANK0[7]), 

    Tm_Hubo_periodico@ctp	PTR struct Tm_Periodico size(1) Largest target is 7
		 -> main@timer(BANK0[7]), 

    Tm_Procese_tiempo@ctp	PTR struct Tm_Periodico size(1) Largest target is 7
		 -> main@timer(BANK0[7]), 

    Tm_Inicie_periodico@ctp	PTR struct Tm_Periodico size(1) Largest target is 7
		 -> main@timer(BANK0[7]), 

    UART1_SetTxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_Transmit_ISR(), 

    UART1_SetRxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_Receive_ISR(), 

    UART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultErrorHandler(), 

    UART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), 

    UART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), 

    UART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultErrorHandler(), 

    UART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultOverrunErrorHandler(), 

    UART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMRAM

    _main->_Tm_Inicie_periodico
    _enviar_Eusart->_cola_get
    _cola_get->_cola_vacia
    _cola_add->_cola_llena
    _actualizar_recibido_Eusart->___wmul
    _Tm_Inicie_periodico->_actualizar_recibido_Eusart
    _UART1_Initialize->_UART1_SetErrorHandler
    _UART1_Initialize->_UART1_SetFramingErrorHandler
    _UART1_Initialize->_UART1_SetOverrunErrorHandler
    _UART1_Initialize->_UART1_SetRxInterruptHandler
    _UART1_Initialize->_UART1_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                55    55      0    7614
                                             21 COMRAM     3     3      0
                                              0 BANK0     51    51      0
      _ADCC_DischargeSampleCapacitor
           _ADCC_GetConversionResult
                    _ADCC_Initialize
              _ADCC_IsConversionDone
               _ADCC_StartConversion
                    _SPI1_Initialize
                  _SYSTEM_Initialize
            _TMR2_HasOverflowOccured
                    _TMR2_Initialize
                  _Tm_Baje_periodico
                  _Tm_Hubo_periodico
                _Tm_Inicie_periodico
                  _Tm_Procese_tiempo
                   _UART1_Initialize
                  _UART1_is_rx_ready
                  _UART1_is_tx_ready
         _actualizar_recibido_Eusart
                    _actualize_valor
                           _cola_add
                           _cola_get
                         _cola_vacia
             _dato_recibido_completo
                      _enviar_Eusart
               _iniciar_struct_usart
                         _inicie_SPI
                        _inicie_cola
             _recibir_periodo_Eusart
 ---------------------------------------------------------------------------------
 (1) _recibir_periodo_Eusart                               3     2      1     648
                                              2 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (1) _inicie_cola                                          1     0      1     183
                                              2 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (1) _inicie_SPI                                           1     0      1     338
                                              2 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (1) _iniciar_struct_usart                                 1     0      1     307
                                              2 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (1) _enviar_Eusart                                        2     0      2     121
                                             10 COMRAM     2     0      2
                           _cola_get (ARG)
 ---------------------------------------------------------------------------------
 (1) _dato_recibido_completo                               1     0      1     121
                                              2 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (1) _cola_get                                             4     3      1     552
                                              6 COMRAM     4     3      1
                         _cola_vacia
 ---------------------------------------------------------------------------------
 (1) _cola_vacia                                           4     2      2     211
                                              2 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _cola_add                                             4     2      2     909
                                              6 COMRAM     4     2      2
                         _cola_llena
 ---------------------------------------------------------------------------------
 (2) _cola_llena                                           4     2      2     121
                                              2 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _actualize_valor                                      3     0      3     242
                                              2 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (1) _actualizar_recibido_Eusart                          10     8      2     686
                                              8 COMRAM    10     8      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     472
                                              2 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _UART1_is_tx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART1_is_rx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Tm_Procese_tiempo                                    5     4      1     369
                                              2 COMRAM     5     4      1
 ---------------------------------------------------------------------------------
 (1) _Tm_Inicie_periodico                                  3     0      3     515
                                             18 COMRAM     3     0      3
         _actualizar_recibido_Eusart (ARG)
 ---------------------------------------------------------------------------------
 (1) _Tm_Hubo_periodico                                    1     0      1     121
                                              2 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (1) _Tm_Baje_periodico                                    1     0      1     121
                                              2 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (1) _TMR2_HasOverflowOccured                              1     1      0      45
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     605
                    _ADCC_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                   _UART1_Initialize
 ---------------------------------------------------------------------------------
 (1) _UART1_Initialize                                     0     0      0     605
              _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _UART1_SetTxInterruptHandler                          2     0      2     121
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _UART1_SetRxInterruptHandler                          2     0      2     121
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _UART1_SetOverrunErrorHandler                         2     0      2     121
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _UART1_SetFramingErrorHandler                         2     0      2     121
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _UART1_SetErrorHandler                                2     0      2     121
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADCC_StartConversion                                 1     1      0      22
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADCC_IsConversionDone                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADCC_GetConversionResult                             4     2      2       0
                                              2 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _ADCC_DischargeSampleCapacitor                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           2     2      0       0
                                              0 COMRAM     2     2      0
                   Absolute function *
                  _UART1_Receive_ISR *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (5) _UART1_Transmit_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _UART1_Receive_ISR                                    0     0      0       0
                   Absolute function *
          _UART1_DefaultErrorHandler *
   _UART1_DefaultFramingErrorHandler *
   _UART1_DefaultOverrunErrorHandler *
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (6) _UART1_DefaultOverrunErrorHandler                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _UART1_DefaultFramingErrorHandler                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _UART1_DefaultErrorHandler                            0     0      0       0
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (6) _UART1_RxDataHandler                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_DischargeSampleCapacitor
   _ADCC_GetConversionResult
   _ADCC_Initialize
   _ADCC_IsConversionDone
   _ADCC_StartConversion
   _SPI1_Initialize
   _SYSTEM_Initialize
     _ADCC_Initialize
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _UART1_Initialize
       _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
   _TMR2_HasOverflowOccured
   _TMR2_Initialize
   _Tm_Baje_periodico
   _Tm_Hubo_periodico
   _Tm_Inicie_periodico
     _actualizar_recibido_Eusart (ARG)
       ___wmul
   _Tm_Procese_tiempo
   _UART1_Initialize
   _UART1_is_rx_ready
   _UART1_is_tx_ready
   _actualizar_recibido_Eusart
   _actualize_valor
   _cola_add
     _cola_llena
   _cola_get
     _cola_vacia
   _cola_vacia
   _dato_recibido_completo
   _enviar_Eusart
     _cola_get (ARG)
   _iniciar_struct_usart
   _inicie_SPI
   _inicie_cola
   _recibir_periodo_Eusart

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *
     Absolute function(Fake) *
     _UART1_DefaultErrorHandler *
       _UART1_RxDataHandler
     _UART1_DefaultFramingErrorHandler *
     _UART1_DefaultOverrunErrorHandler *
     _UART1_RxDataHandler *
   _UART1_Transmit_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FFF      0       0      69        0.0%
EEDATA             400      0       0       0        0.0%
BITBIGSFRhhhhll    22A      0       0      50        0.0%
BITBIGSFRlllll     193      0       0      67        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBIGSFRhhhhll     CB      0       0      46        0.0%
BITBIGSFRhhhhll     C6      0       0      43        0.0%
BITBIGSFRhhhhll     AA      0       0      40        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     33      51       5       50.6%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     18      2B       1       45.3%
BITBIGSFRhhhhll     59      0       0      52        0.0%
BITBIGSFRhhhhll     33      0       0      62        0.0%
BITBIGSFRhhhhhh     2D      0       0      36        0.0%
BITBIGSFRhhhhll     29      0       0      60        0.0%
BITBIGSFRhhhhll     1C      0       0      42        0.0%
BITBIGSFRllh        1B      0       0      65        0.0%
BITBIGSFRlh         11      0       0      64        0.0%
BITBIGSFRllllh       E      0       0      66        0.0%
BITBIGSFRhhhhll      B      0       0      59        0.0%
BITBIGSFRhhhhhh      B      0       0      37        0.0%
BITBIGSFRhhhhll      A      0       0      39        0.0%
BITBIGSFRhhhhll      5      0       0      51        0.0%
BITBIGSFRhhhhll      5      0       0      58        0.0%
BITBIGSFRhhhhll      5      0       0      56        0.0%
BITBIGSFRhhhhll      5      0       0      54        0.0%
BITBIGSFRhhhhll      4      0       0      53        0.0%
BITBIGSFRhhhhll      4      0       0      55        0.0%
BITBIGSFRhhhhll      4      0       0      57        0.0%
BITBIGSFRhhhhhl      3      0       0      38        0.0%
BITBIGSFRhhhhll      2      0       0      47        0.0%
BITBIGSFRhhhhll      2      0       0      48        0.0%
BITBIGSFRhhhhll      1      0       0      45        0.0%
BITBIGSFRhhhhll      1      0       0      44        0.0%
BITBIGSFRhhhhll      1      0       0      41        0.0%
BITBIGSFRhhhhll      1      0       0      49        0.0%
BITBIGSFRhhhhll      1      0       0      61        0.0%
BITBIGSFRhl          1      0       0      63        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      7C      68        0.0%
DATA                 0      0      7C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Mar 15 12:46:48 2023

                                          l56 1A90                        __end_of_FVR_Initialize 1B9A  
                         ___wmul@multiplicand 0005                                           l737 1162  
                                         u910 1B46                                           u930 1B38  
                                         u850 1964                                           u860 1934  
                                         u870 1ABA                                           u890 1B54  
                                         u876 1ABC                                           u990 1764  
                       ?_iniciar_struct_usart 0003                               _TMR2_Initialize 1A3E  
                                         tosl 003FFD                                           wreg 003FE8  
                          enviar_Eusart@valor 000B                 TMR2_HasOverflowOccured@status 0003  
                          _UART1_Transmit_ISR 19CC                    recibir_periodo_Eusart@disp 0003  
                                        l2505 196E               ??_ADCC_DischargeSampleCapacitor 0003  
                                        l2517 193E                                          l2619 1492  
                                        l2651 1678                                          l2643 1644  
                                        l2715 1054                          _ADCC_StartConversion 1B10  
                                        l2647 1648                                          l2671 1274  
                                        l2663 11BE                                          l2719 1066  
                                        l2665 11D2                                          l2729 1088  
                                        l2675 12A4                                          l2667 1208  
                                        l2659 119C                                          l2763 1122  
                                        l2747 10C4                                          l2669 123E  
                                        l2677 12B8                                          l2769 1150  
                                        u1010 1666                                          u1105 110C  
                                        _LATA 003FBA                                          _LATB 003FBB  
                                        _LATC 003FBC                                          _LATD 003FBD  
                                        _LATE 003FBE                                          _T2PR 003FAB  
                                        _PMD0 0039C0                                          _PMD1 0039C1  
                                        _PMD2 0039C2                                          _PMD3 0039C3  
                                        _PMD4 0039C4                                          _PMD5 0039C5  
                                        _PMD6 0039C6                                          _PMD7 0039C7  
                                        _PLLR 01CEE0                                          _WPUA 003A41  
                                        _WPUB 003A51                                          _WPUC 003A61  
                                        _WPUD 003A71                                          _WPUE 003A81  
                         ?_UART1_Transmit_ISR 0001                                          _main 1008  
                                        fsr1h 003FE2                                          fsr2h 003FDA  
                                        indf2 003FDF                                          fsr1l 003FE1  
                                        fsr2l 003FD9                __end_of_recibir_periodo_Eusart 12F8  
                                        prodh 003FF4                                          prodl 003FF3  
                                        start 001A                                  ?_inicie_cola 0003  
               ??_UART1_SetTxInterruptHandler 0005                                  ___param_bank 000000  
                             ?_FVR_Initialize 0001                          ??_UART1_Transmit_ISR 0001  
               __end_of_OSCILLATOR_Initialize 1A96                                         _ADACT 003EFE  
                                       _ADCAP 003EF5                                         ?_main 0001  
                                       _ADCLK 003EFF                                         _ADCNT 003EEB  
                                       _ADPCH 003EF1                                         _ADREF 003EFD  
                                       _ADRPT 003EEC                                         _U1P1H 003DED  
                                       _U1P2H 003DEF                                         _U1P3H 003DF1  
                                       _U1P1L 003DEC                                         _U1P2L 003DEE  
                                       _T2CON 003FAC                                         _U1P3L 003DF0  
                                       _T2HLT 003FAD                                         _T2TMR 003FAA  
                                       _U1UIR 003DF8                                         _U1RXB 003DE8  
                                       _T2RST 003FAF                                         _U1TXB 003DEA  
                                       i2l590 19F0                                         i2l646 186E  
                                       _OSCEN 0039DD                                         _TRISA 003FC2  
                                       _TRISB 003FC3                                         _TRISC 003FC4  
                                       _TRISD 003FC5                                         _TRISE 003FC6  
                     ??_ADCC_IsConversionDone 0003                         ?_ADCC_StartConversion 0001  
                                       pclath 003FFA                                         pclatu 003FFB  
                                       plusw2 003FDB                                         status 003FD8  
         __end_of_UART1_SetRxInterruptHandler 1B6C                   _UART1_SetRxInterruptHandler 1B62  
                 __end_of_Tm_Inicie_periodico 18DE      __end_of_UART1_DefaultFramingErrorHandler 1BAE  
          ??_UART1_DefaultFramingErrorHandler 0001             ?_UART1_DefaultFramingErrorHandler 0001  
            _UART1_DefaultFramingErrorHandler 1BAC                               __initialization 1978  
                                __end_of_main 118E                        _dato_recibido_completo 1B20  
                 ??_UART1_DefaultErrorHandler 0001                             _Tm_Baje_periodico 1B00  
                     __end_of_TMR2_Initialize 1A5C                   ?_INTERRUPT_InterruptManager 0001  
                      ??_iniciar_struct_usart 0004                            ?_Tm_Baje_periodico 0003  
                                      ??_main 0016                                 __activetblptr 000003  
                               _enviar_Eusart 1B8A                              _UART1_Initialize 139E  
                         ??_Tm_Baje_periodico 0004                                        _ADACCH 003EE9  
                                      _ADACCL 003EE8                                        _ADACCU 003EEA  
                                      _ADACQH 003EF4                                        _ADACQL 003EF3  
                                      _ADCON0 003EF8                                        _ADCON1 003EF9  
                                      _ADCON2 003EFA                                        _ADCON3 003EFB  
                                      _ADERRH 003EE3                                        _ADERRL 003EE2  
                                      _ADLTHH 003EDF                                        _ADLTHL 003EDE  
                                      _ADRESH 003EF0                                        _ADRESL 003EEF  
                                      _ADPREH 003EF7                                        _ADPREL 003EF6  
                                      _ADSTAT 003EFC                                        _ADUTHH 003EE1  
                                      _ADUTHL 003EE0                                        _ANSELA 003A40  
                                      _ANSELB 003A50                                        _ANSELC 003A60  
                                      _ANSELD 003A70                                        _ANSELE 003A80  
                                      _RB1I2C 003A5A                                        _RB2I2C 003A5B  
                                      _RD0I2C 003A7A                                        _U1CON0 003DF2  
                                      _U1CON1 003DF3                                        _U1CON2 003DF4  
                                      _RD1I2C 003A7B                                        _RC3I2C 003A6A  
                                      _RC4I2C 003A6B                                        _U1BRGH 003DF6  
                                      _U1FIFO 003DF7                                        _U1BRGL 003DF5  
                                      _RC3PPS 003A13                                        _RC5PPS 003A15  
                                      _ODCONA 003A42                                        _ODCONB 003A52  
                                      _RC6PPS 003A16                                        _ODCONC 003A62  
                                      _ODCOND 003A72                                        _ODCONE 003A82  
                                      i2l2037 1A76                                        i2l2147 19EC  
                                      i2l2167 15F2                                        _INLVLA 003A44  
                                      _INLVLB 003A54                                        _INLVLC 003A64  
                                      _INLVLD 003A74                                        _INLVLE 003A84  
                                      _FVRCON 003EC1                                        _OSCFRQ 0039DF  
                           ??_actualize_valor 0006                         _UART1_SetErrorHandler 1B80  
       __end_of_ADCC_DischargeSampleCapacitor 1BA0                 _ADCC_DischargeSampleCapacitor 1B9A  
                  ??_ADCC_GetConversionResult 0005                              __end_of_cola_add 1778  
                            __end_of_cola_get 167C                     __end_of_Tm_Baje_periodico 1B10  
                          _bandera_ADC1_start 0024                            _bandera_ADC2_start 0023  
                                      ___wmul 19A2                             _Tm_Hubo_periodico 1AF0  
                                      clear_0 197E                                        clear_1 198A  
                          ?_Tm_Hubo_periodico 0003                                        isa$std 000001  
                    ?_TMR2_HasOverflowOccured 0001                               _ADCC_Initialize 17E8  
                              ?_enviar_Eusart 000B                                _PMD_Initialize 1A1A  
                                __mediumconst 0000                           ??_Tm_Hubo_periodico 0004  
                      ??_ADCC_StartConversion 0003   UART1_SetTxInterruptHandler@InterruptHandler 0003  
 UART1_SetRxInterruptHandler@InterruptHandler 0003          __end_of_UART1_SetOverrunErrorHandler 1B76  
                _UART1_SetOverrunErrorHandler 1B6C                     _UART1_DefaultErrorHandler 1BA0  
                           _SYSTEM_Initialize 19F4                                    __accesstop 0060  
                     __end_of__initialization 199C                            ?_SYSTEM_Initialize 0001  
                               ___rparam_used 000001                     __end_of_Tm_Hubo_periodico 1B00  
                              __pcstackCOMRAM 0001                           ??_SYSTEM_Initialize 0005  
                           ??_SPI1_Initialize 0003                              ?_TMR2_Initialize 0001  
                      __end_of_PMD_Initialize 1A3E                            _spi1_configuration 1001  
                   _UART1_FramingErrorHandler 00AF                   ADCC_StartConversion@channel 0003  
                   __end_of_SYSTEM_Initialize 1A1A                                    __pbssBANK0 0093  
               ?_UART1_SetOverrunErrorHandler 0003                        ?_UART1_SetErrorHandler 0003  
                                inicie_cola@c 0003                actualizar_recibido_Eusart@disp 0009  
                                     IVTBASEH 003FD6                                       IVTBASEL 003FD5  
                                     IVTBASEU 003FD7                              ??_FVR_Initialize 0003  
              ?_ADCC_DischargeSampleCapacitor 0001                                       ?___wmul 0003  
                     __end_of_ADCC_Initialize 1844               __end_of_TMR2_HasOverflowOccured 1AC8  
                                     _ADFLTRH 003EE7                                       _ADFLTRL 003EE6  
                                     _ADPREVH 003EEE                                       _ADPREVL 003EED  
                                     _ADSTPTH 003EE5                                       _ADSTPTL 003EE4  
                             ??_enviar_Eusart 000D                               ?_PMD_Initialize 0001  
                           _UART1_Receive_ISR 1570                                    _cola_llena 1916  
                                  _cola_vacia 1948                                       _U1ERRIE 003DFA  
                                     _U1ERRIR 003DF9                            ?_UART1_Receive_ISR 0001  
                                     _U1RXPPS 003AE5                                       _OSCCON1 0039D9  
                                     _OSCCON3 0039DB                                       _SPI1CLK 003D1C  
                                     _SPI1RXB 003D10                                       _SPI1TXB 003D11  
                                     i2u53_48 1592                                       i2u53_49 15A4  
                                     _OSCTUNE 0039DE                                       i2u55_48 15BA  
                                     i2u55_49 15CC                                       i2u72_48 1878  
                                     i2u72_49 188A                                       i2u57_48 15DE  
                                     i2u69_48 185C                                       _SLRCONA 003A43  
                                     _SLRCONB 003A53                                       _SLRCONC 003A63  
                                     _SLRCOND 003A73                                       _SLRCONE 003A83  
                                   ?_cola_add 0007                                     ?_cola_get 0007  
               __end_of_ADCC_IsConversionDone 1B58                             _Tm_Procese_tiempo 1440  
                         ??_UART1_Receive_ISR 0001                       actualize_valor@valorspi 0004  
                          ?_Tm_Procese_tiempo 0003                       ?_dato_recibido_completo 0003  
                                  _inicie_SPI 167C                                       __Hparam 0000  
                         ??_Tm_Procese_tiempo 0004                                       __Lparam 0000  
                         _bandera_ADC1_finish 0022                      __end_of_UART1_Initialize 1440  
                         _bandera_ADC2_finish 0021                     __end_of_UART1_Receive_ISR 15F8  
                                __psmallconst 1000                                       __pcinit 1978  
                                     __ramtop 1000                                       __ptext0 1008  
                                     __ptext1 118E                                       __ptext2 18DE  
                                     __ptext3 167C                                       __ptext4 1778  
                                     __ptext5 1B8A                                       __ptext6 1B20  
                                     __ptext7 15F8                                       __ptext8 1948  
                                     __ptext9 16FA                         _OSCILLATOR_Initialize 1A7A  
                             _actualize_valor 1AC8                      ??_PIN_MANAGER_Initialize 0003  
                   __end_of_Tm_Procese_tiempo 14DA                                    ??_cola_add 0009  
                                  ??_cola_get 0008                                       main@spi 0060  
                        end_of_initialization 199C           __end_of_UART1_SetTxInterruptHandler 1B62  
                 _UART1_SetTxInterruptHandler 1B58                __end_of_dato_recibido_completo 1B2E  
              ??_UART1_SetOverrunErrorHandler 0005                                     _SPI1TCNTL 003D12  
                                     postdec1 003FE5                                       postdec2 003FDD  
                                     postinc0 003FEE                                       postinc1 003FE6  
                                     postinc2 003FDE                              ?_ADCC_Initialize 0001  
                         _UART1_RxDataHandler 1A5C                            actualize_valor@spi 0003  
          __end_of_actualizar_recibido_Eusart 1570                    _actualizar_recibido_Eusart 14DA  
                                 ?_cola_llena 0003                                   ?_cola_vacia 0003  
                                   _TRISCbits 003FC4                      ??_recibir_periodo_Eusart 0004  
                        ?_UART1_RxDataHandler 0001                               _SPI1_Initialize 1A96  
                                 ?_inicie_SPI 0003                  __end_of_INTERRUPT_Initialize 1BAA  
                     __end_of_actualize_valor 1ADC                                __end_of___wmul 19CC  
                      ?_OSCILLATOR_Initialize 0001                          Tm_Procese_tiempo@ctp 0003  
                   ?_ADCC_GetConversionResult 0003                           start_initialization 1978  
                     ??_UART1_SetErrorHandler 0005                         ??_UART1_RxDataHandler 0001  
                                  ivt0x8_base 0008                                 _uart1RxBuffer 009B  
                               _uart1TxBuffer 00A3                                 inicie_SPI@spi 0003  
                               ??_inicie_cola 0004                        Tm_Inicie_periodico@ctp 0013  
                            ??_PMD_Initialize 0003                                      ??___wmul 0007  
                                 __pbssCOMRAM 0019                            _UART1_ErrorHandler 00AB  
                               __pcstackBANK0 0060                       __end_of_SPI1_Initialize 1AB0  
                    _UART1_RxInterruptHandler 001F                               _primerresultado 001B  
                ?_UART1_SetRxInterruptHandler 0003                        _PIN_MANAGER_Initialize 12F8  
                           ?_UART1_Initialize 0001          __end_of_UART1_SetFramingErrorHandler 1B80  
                _UART1_SetFramingErrorHandler 1B76                            ??_UART1_Initialize 0005  
                         __end_of_inicie_cola 1916                              ?_actualize_valor 0003  
                            _uart1RxLastError 0025                  ??_INTERRUPT_InterruptManager 0001  
                                 __smallconst 1000                         __end_of_enviar_Eusart 1B92  
    __end_of_UART1_DefaultOverrunErrorHandler 1BAC            ??_UART1_DefaultOverrunErrorHandler 0001  
           ?_UART1_DefaultOverrunErrorHandler 0001              _UART1_DefaultOverrunErrorHandler 1BAA  
                ??_actualizar_recibido_Eusart 000B                           _Tm_Inicie_periodico 1898  
                                    _T2CLKCON 003FAE                                   _U1ERRIRbits 003DF9  
                        _INTERRUPT_Initialize 1BA6                       _TMR2_HasOverflowOccured 1AB0  
                       _ADCC_IsConversionDone 1B4A                    dato_recibido_completo@disp 0003  
                              ___wmul@product 0007         UART1_SetErrorHandler@interruptHandler 0003  
                                    _LATDbits 003FBD                                      _PIE3bits 003993  
               ??_UART1_SetRxInterruptHandler 0005                              _segundoresultado 0019  
                                    _PIR2bits 0039A2                                      _SPI1BAUD 003D19  
                                    _PIR3bits 0039A3                                      _PIR4bits 0039A4  
                                    _SPI1CON0 003D14                                      _SPI1CON1 003D15  
                                    _SPI1CON2 003D16                          ?_Tm_Inicie_periodico 0013  
                                   cola_add@c 0007                    __end_of_UART1_Transmit_ISR 19F4  
                                   cola_get@c 0007                        _recibir_periodo_Eusart 118E  
               ?_UART1_SetFramingErrorHandler 0003                   ?_actualizar_recibido_Eusart 0009  
                                ??_cola_llena 0005                                    _ADCON0bits 003EF8  
                                ??_cola_vacia 0005                             ___wmul@multiplier 0003  
                                   main@timer 006C                              ?_SPI1_Initialize 0001  
                                 _INTCON0bits 003FD2                         ?_INTERRUPT_Initialize 0001  
                      _uart1TxBufferRemaining 0029                             ??_TMR2_Initialize 0003  
                __end_of_iniciar_struct_usart 17E8                                  _uart1RxCount 0026  
                                ??_inicie_SPI 0004                            __end_of_cola_llena 1948  
                                 _inicie_cola 18DE                            __end_of_cola_vacia 1978  
                                    __Hrparam 0000              __end_of_ADCC_GetConversionResult 1AF0  
                                    __Lrparam 0000                         ??_Tm_Inicie_periodico 0016  
                     ??_OSCILLATOR_Initialize 0003                    Tm_Inicie_periodico@periodo 0014  
                    iniciar_struct_usart@disp 0003                                      __pivt0x8 0008  
                   ??_TMR2_HasOverflowOccured 0003                            __end_of_inicie_SPI 16FA  
                                    __ptext10 1916                                      __ptext11 1AC8  
                                    __ptext20 1AB0                                      __ptext12 14DA  
                                    __ptext21 19F4                                      __ptext13 19A2  
                                    __ptext30 1A1A                                      __ptext22 139E  
                                    __ptext14 1B2E                                      __ptext31 12F8  
                                    __ptext23 1B58                                      __ptext15 1B3C  
                                    __ptext40 1844                                      __ptext32 1A7A  
                                    __ptext24 1B62                                      __ptext16 1440  
                                    _cola_add 16FA                                      __ptext41 19CC  
                                    __ptext33 1BA6                                      __ptext25 1B6C  
                                    __ptext17 1898                                      __ptext42 1570  
                                    __ptext34 1B92                                      __ptext26 1B76  
                                    __ptext18 1AF0                                      __ptext43 1BAA  
                                    __ptext35 17E8                                      __ptext27 1B80  
                                    __ptext19 1B00                                      __ptext44 1BAC  
                                    __ptext36 1B10                                      __ptext28 1A3E  
                                    __ptext45 1BA0                                      __ptext37 1B4A  
                                    __ptext29 1A96                                      __ptext46 1A5C  
                                    __ptext38 1ADC                                      __ptext47 0000  
                                    __ptext39 1B9A                                      _cola_get 15F8  
                      ?_ADCC_IsConversionDone 0001                 __end_of_UART1_SetErrorHandler 1B8A  
                        Tm_Baje_periodico@ctp 0003                     _UART1_OverrunErrorHandler 00AD  
UART1_SetOverrunErrorHandler@interruptHandler 0003                                      isa$xinst 000000  
                __end_of_ADCC_StartConversion 1B20                    ?_UART1_DefaultErrorHandler 0001  
          __end_of_INTERRUPT_InterruptManager 1898                    _INTERRUPT_InterruptManager 1844  
                                    main@cola 0073                                      main@disp 0088  
                           _UART1_is_rx_ready 1B3C                             _UART1_is_tx_ready 1B2E  
                          ?_UART1_is_rx_ready 0001                ??_UART1_SetFramingErrorHandler 0005  
                          ?_UART1_is_tx_ready 0001                   __end_of_UART1_RxDataHandler 1A7A  
                                 _uart1RxHead 0028                                   _uart1TxHead 002B  
                                 _uart1RxTail 0027                                   _uart1TxTail 002A  
                      ??_INTERRUPT_Initialize 0003                          Tm_Hubo_periodico@ctp 0003  
                         ??_UART1_is_rx_ready 0003                      ??_dato_recibido_completo 0004  
                         ??_UART1_is_tx_ready 0003                                      intlevel2 0000  
                     ?_PIN_MANAGER_Initialize 0001                                  cola_add@dato 0008  
                         _uart1RxStatusBuffer 0093                                    _SPI1SDIPPS 003ADF  
                                  _SPI1SCKPPS 003ADE                     __end_of_UART1_is_rx_ready 1B4A  
UART1_SetFramingErrorHandler@interruptHandler 0003                     __end_of_UART1_is_tx_ready 1B3C  
                    _ADCC_GetConversionResult 1ADC                                  cola_get@temp 000A  
           __end_of_UART1_DefaultErrorHandler 1BA6                                _FVR_Initialize 1B92  
                        _iniciar_struct_usart 1778                      _UART1_TxInterruptHandler 001D  
              __end_of_PIN_MANAGER_Initialize 139E                             ??_ADCC_Initialize 0003  
                                 cola_llena@c 0003                                   cola_vacia@c 0003  
                ?_UART1_SetTxInterruptHandler 0003                    __end_of_spi1_configuration 1006  
                     ?_recibir_periodo_Eusart 0003  
