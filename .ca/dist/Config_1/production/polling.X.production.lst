

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Mar 15 12:46:42 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F46K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1
    50                           	psect	text39,global,reloc=2,class=CODE,delta=1
    51                           	psect	text40,global,reloc=2,class=CODE,delta=1
    52                           	psect	text41,global,reloc=2,class=CODE,delta=1
    53                           	psect	text42,global,reloc=2,class=CODE,delta=1
    54                           	psect	text43,global,reloc=2,class=CODE,delta=1
    55                           	psect	text44,global,reloc=2,class=CODE,delta=1
    56                           	psect	text45,global,reloc=2,class=CODE,delta=1
    57                           	psect	text46,global,reloc=2,class=CODE,delta=1
    58                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
    59                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1
    61                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    62                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    63                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    64   000000                     
    65                           ; Generated 06/04/2022 GMT
    66                           ; 
    67                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    68                           ; All rights reserved.
    69                           ; 
    70                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    71                           ; 
    72                           ; Redistribution and use in source and binary forms, with or without modification, are
    73                           ; permitted provided that the following conditions are met:
    74                           ; 
    75                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    76                           ;        conditions and the following disclaimer.
    77                           ; 
    78                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    79                           ;        of conditions and the following disclaimer in the documentation and/or other
    80                           ;        materials provided with the distribution. Publication is not required when
    81                           ;        this file is used in an embedded application.
    82                           ; 
    83                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    84                           ;        software without specific prior written permission.
    85                           ; 
    86                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    87                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    88                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    89                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    90                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    91                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    92                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    93                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    94                           ; 
    95                           ; 
    96                           ; Code-generator required, PIC18F46K42 Definitions
    97                           ; 
    98                           ; SFR Addresses
    99   000000                     
   100                           	psect	smallconst
   101   001000                     __psmallconst:
   102                           	callstack 0
   103   001000  00                 	db	0
   104   001001                     _spi1_configuration:
   105                           	callstack 0
   106   001001  02                 	db	2
   107   001002  40                 	db	64
   108   001003  00                 	db	0
   109   001004  00                 	db	0
   110   001005  00                 	db	0
   111   001006                     __end_of_spi1_configuration:
   112                           	callstack 0
   113   000000                     _PIR3bits	set	14755
   114   000000                     _ADERRL	set	16098
   115   000000                     _ADERRH	set	16099
   116   000000                     _ADPREVL	set	16109
   117   000000                     _ADPREVH	set	16110
   118   000000                     _ADFLTRL	set	16102
   119   000000                     _ADFLTRH	set	16103
   120   000000                     _ADACCL	set	16104
   121   000000                     _ADACCH	set	16105
   122   000000                     _ADCNT	set	16107
   123   000000                     _ADRESL	set	16111
   124   000000                     _ADRESH	set	16112
   125   000000                     _ADCON0	set	16120
   126   000000                     _ADCON1	set	16121
   127   000000                     _ADPREH	set	16119
   128   000000                     _ADPREL	set	16118
   129   000000                     _ADCAP	set	16117
   130   000000                     _ADACQH	set	16116
   131   000000                     _ADPCH	set	16113
   132   000000                     _ADRPT	set	16108
   133   000000                     _ADACCU	set	16106
   134   000000                     _ADSTPTH	set	16101
   135   000000                     _ADSTPTL	set	16100
   136   000000                     _ADUTHH	set	16097
   137   000000                     _ADUTHL	set	16096
   138   000000                     _ADLTHH	set	16095
   139   000000                     _T2CON	set	16300
   140   000000                     _TRISD	set	16325
   141   000000                     _TRISC	set	16324
   142   000000                     _TRISB	set	16323
   143   000000                     _LATC	set	16316
   144   000000                     _LATB	set	16315
   145   000000                     _OSCTUNE	set	14814
   146   000000                     _OSCFRQ	set	14815
   147   000000                     _OSCEN	set	14813
   148   000000                     _PLLR	set	118496
   149   000000                     _U1ERRIRbits	set	15865
   150   000000                     _SPI1CON0bits	set	15636
   151   000000                     _FVRCONbits	set	16065
   152   000000                     _ADCON1bits	set	16121
   153   000000                     _ADSTATbits	set	16124
   154   000000                     _ADCON2bits	set	16122
   155   000000                     _ADCON3bits	set	16123
   156   000000                     _ADCON0bits	set	16120
   157   000000                     _LATDbits	set	16317
   158   000000                     _TRISCbits	set	16324
   159   000000                     _PR2	set	16299
   160   000000                     _TMR2	set	16298
   161   000000                     _T2CONbits	set	16300
   162   000000                     _T2RSTbits	set	16303
   163   000000                     _T2HLTbits	set	16301
   164   000000                     _PIE3bits	set	14739
   165   000000                     _PIR2bits	set	14754
   166   000000                     _PIR4bits	set	14756
   167   000000                     _PMD0	set	14784
   168   000000                     _OSCCON1	set	14809
   169   000000                     _OSCCON3	set	14811
   170   000000                     _RC3PPS	set	14867
   171   000000                     _ANSELA	set	14912
   172   000000                     _ANSELB	set	14928
   173   000000                     _ANSELC	set	14944
   174   000000                     _ANSELD	set	14960
   175   000000                     _LATA	set	16314
   176   000000                     _LATD	set	16317
   177   000000                     _LATE	set	16318
   178   000000                     _PMD7	set	14791
   179   000000                     _PMD6	set	14790
   180   000000                     _PMD5	set	14789
   181   000000                     _PMD4	set	14788
   182   000000                     _PMD3	set	14787
   183   000000                     _PMD2	set	14786
   184   000000                     _PMD1	set	14785
   185   000000                     _TRISA	set	16322
   186   000000                     _TRISE	set	16326
   187   000000                     _INTCON0bits	set	16338
   188   000000                     _INLVLD	set	14964
   189   000000                     _SLRCOND	set	14963
   190   000000                     _ODCOND	set	14962
   191   000000                     _RD0I2C	set	14970
   192   000000                     _WPUD	set	14961
   193   000000                     _ANSELE	set	14976
   194   000000                     _INLVLC	set	14948
   195   000000                     _SLRCONC	set	14947
   196   000000                     _ODCONC	set	14946
   197   000000                     _RC3I2C	set	14954
   198   000000                     _WPUC	set	14945
   199   000000                     _INLVLB	set	14932
   200   000000                     _SLRCONB	set	14931
   201   000000                     _ODCONB	set	14930
   202   000000                     _RB1I2C	set	14938
   203   000000                     _WPUB	set	14929
   204   000000                     _SPI1SCKPPS	set	15070
   205   000000                     _INLVLE	set	14980
   206   000000                     _SLRCONE	set	14979
   207   000000                     _ODCONE	set	14978
   208   000000                     _WPUE	set	14977
   209   000000                     _INLVLA	set	14916
   210   000000                     _SLRCONA	set	14915
   211   000000                     _ODCONA	set	14914
   212   000000                     _WPUA	set	14913
   213   000000                     _RB2I2C	set	14939
   214   000000                     _RC4I2C	set	14955
   215   000000                     _RD1I2C	set	14971
   216   000000                     _SPI1SDIPPS	set	15071
   217   000000                     _U1RXPPS	set	15077
   218   000000                     _RC5PPS	set	14869
   219   000000                     _RC6PPS	set	14870
   220   000000                     _SPI1RXB	set	15632
   221   000000                     _SPI1TXB	set	15633
   222   000000                     _SPI1TCNTL	set	15634
   223   000000                     _SPI1CON0	set	15636
   224   000000                     _T2TMR	set	16298
   225   000000                     _T2PR	set	16299
   226   000000                     _T2HLT	set	16301
   227   000000                     _T2CLKCON	set	16302
   228   000000                     _T2RST	set	16303
   229   000000                     _SPI1BAUD	set	15641
   230   000000                     _SPI1CLK	set	15644
   231   000000                     _SPI1CON2	set	15638
   232   000000                     _SPI1CON1	set	15637
   233   000000                     _U1RXB	set	15848
   234   000000                     _U1TXB	set	15850
   235   000000                     _U1P1L	set	15852
   236   000000                     _FVRCON	set	16065
   237   000000                     _ADLTHL	set	16094
   238   000000                     _ADACQL	set	16115
   239   000000                     _ADCLK	set	16127
   240   000000                     _ADACT	set	16126
   241   000000                     _ADREF	set	16125
   242   000000                     _ADSTAT	set	16124
   243   000000                     _ADCON3	set	16123
   244   000000                     _ADCON2	set	16122
   245   000000                     _U1ERRIE	set	15866
   246   000000                     _U1ERRIR	set	15865
   247   000000                     _U1UIR	set	15864
   248   000000                     _U1FIFO	set	15863
   249   000000                     _U1BRGH	set	15862
   250   000000                     _U1BRGL	set	15861
   251   000000                     _U1CON2	set	15860
   252   000000                     _U1CON1	set	15859
   253   000000                     _U1CON0	set	15858
   254   000000                     _U1P3H	set	15857
   255   000000                     _U1P3L	set	15856
   256   000000                     _U1P2H	set	15855
   257   000000                     _U1P2L	set	15854
   258   000000                     _U1P1H	set	15853
   259   001006  00                 	db	0	; dummy byte at the end
   260   000000                     
   261                           ; #config settings
   262                           
   263                           	psect	cinit
   264   001ACE                     __pcinit:
   265                           	callstack 0
   266   001ACE                     start_initialization:
   267                           	callstack 0
   268   001ACE                     __initialization:
   269                           	callstack 0
   270                           
   271                           ; Clear objects allocated to BANK0 (30 bytes)
   272   001ACE  EE00  F093         	lfsr	0,__pbssBANK0
   273   001AD2  0E1E               	movlw	30
   274   001AD4                     clear_0:
   275   001AD4  6AEE               	clrf	postinc0,c
   276   001AD6  06E8               	decf	wreg,f,c
   277   001AD8  E1FD               	bnz	clear_0
   278                           
   279                           ; Clear objects allocated to COMRAM (19 bytes)
   280   001ADA  EE00  F01A         	lfsr	0,__pbssCOMRAM
   281   001ADE  0E13               	movlw	19
   282   001AE0                     clear_1:
   283   001AE0  6AEE               	clrf	postinc0,c
   284   001AE2  06E8               	decf	wreg,f,c
   285   001AE4  E1FD               	bnz	clear_1
   286                           
   287                           ;
   288                           ; Setup IVTBASE
   289                           ;
   290   001AE6  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   291   001AE8  6ED5               	movwf	213,c
   292   001AEA  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   293   001AEC  6ED6               	movwf	214,c
   294   001AEE  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   295   001AF0  6ED7               	movwf	215,c
   296   001AF2                     end_of_initialization:
   297                           	callstack 0
   298   001AF2                     __end_of__initialization:
   299                           	callstack 0
   300   001AF2  0100               	movlb	0
   301   001AF4  EF04  F008         	goto	_main	;jump to C main() function
   302                           
   303                           	psect	bssCOMRAM
   304   00001A                     __pbssCOMRAM:
   305                           	callstack 0
   306   00001A                     _segundoresultado:
   307                           	callstack 0
   308   00001A                     	ds	2
   309   00001C                     _primerresultado:
   310                           	callstack 0
   311   00001C                     	ds	2
   312   00001E                     _UART1_TxInterruptHandler:
   313                           	callstack 0
   314   00001E                     	ds	2
   315   000020                     _UART1_RxInterruptHandler:
   316                           	callstack 0
   317   000020                     	ds	2
   318   000022                     _bandera_ADC2_finish:
   319                           	callstack 0
   320   000022                     	ds	1
   321   000023                     _bandera_ADC1_finish:
   322                           	callstack 0
   323   000023                     	ds	1
   324   000024                     _bandera_ADC2_start:
   325                           	callstack 0
   326   000024                     	ds	1
   327   000025                     _bandera_ADC1_start:
   328                           	callstack 0
   329   000025                     	ds	1
   330   000026                     _uart1RxLastError:
   331                           	callstack 0
   332   000026                     	ds	1
   333   000027                     _uart1RxCount:
   334                           	callstack 0
   335   000027                     	ds	1
   336   000028                     _uart1RxTail:
   337                           	callstack 0
   338   000028                     	ds	1
   339   000029                     _uart1RxHead:
   340                           	callstack 0
   341   000029                     	ds	1
   342   00002A                     _uart1TxBufferRemaining:
   343                           	callstack 0
   344   00002A                     	ds	1
   345   00002B                     _uart1TxTail:
   346                           	callstack 0
   347   00002B                     	ds	1
   348   00002C                     _uart1TxHead:
   349                           	callstack 0
   350   00002C                     	ds	1
   351                           
   352                           	psect	bssBANK0
   353   000093                     __pbssBANK0:
   354                           	callstack 0
   355   000093                     _uart1RxStatusBuffer:
   356                           	callstack 0
   357   000093                     	ds	8
   358   00009B                     _uart1RxBuffer:
   359                           	callstack 0
   360   00009B                     	ds	8
   361   0000A3                     _uart1TxBuffer:
   362                           	callstack 0
   363   0000A3                     	ds	8
   364   0000AB                     _UART1_ErrorHandler:
   365                           	callstack 0
   366   0000AB                     	ds	2
   367   0000AD                     _UART1_OverrunErrorHandler:
   368                           	callstack 0
   369   0000AD                     	ds	2
   370   0000AF                     _UART1_FramingErrorHandler:
   371                           	callstack 0
   372   0000AF                     	ds	2
   373                           
   374                           	psect	cstackBANK0
   375   000060                     __pcstackBANK0:
   376                           	callstack 0
   377   000060                     main@spi:
   378                           	callstack 0
   379                           
   380                           ; 12 bytes @ 0x0
   381   000060                     	ds	12
   382   00006C                     main@timer:
   383                           	callstack 0
   384                           
   385                           ; 7 bytes @ 0xC
   386   00006C                     	ds	7
   387   000073                     main@cola:
   388                           	callstack 0
   389                           
   390                           ; 21 bytes @ 0x13
   391   000073                     	ds	21
   392   000088                     main@disp:
   393                           	callstack 0
   394                           
   395                           ; 11 bytes @ 0x28
   396   000088                     	ds	11
   397                           
   398                           	psect	cstackCOMRAM
   399   000001                     __pcstackCOMRAM:
   400                           	callstack 0
   401   000001                     ??_INTERRUPT_InterruptManager:
   402   000001                     
   403                           ; 1 bytes @ 0x0
   404   000001                     	ds	2
   405   000003                     ?_cola_vacia:
   406                           	callstack 0
   407   000003                     ?_cola_llena:
   408                           	callstack 0
   409   000003                     ?_ADCC_GetConversionResult:
   410                           	callstack 0
   411   000003                     ?___wmul:
   412                           	callstack 0
   413   000003                     TMR2_HasOverflowOccured@status:
   414                           	callstack 0
   415   000003                     ADCC_StartConversion@channel:
   416                           	callstack 0
   417   000003                     UART1_SetFramingErrorHandler@interruptHandler:
   418                           	callstack 0
   419   000003                     UART1_SetOverrunErrorHandler@interruptHandler:
   420                           	callstack 0
   421   000003                     UART1_SetErrorHandler@interruptHandler:
   422                           	callstack 0
   423   000003                     UART1_SetRxInterruptHandler@InterruptHandler:
   424                           	callstack 0
   425   000003                     UART1_SetTxInterruptHandler@InterruptHandler:
   426                           	callstack 0
   427   000003                     Tm_Procese_tiempo@ctp:
   428                           	callstack 0
   429   000003                     Tm_Hubo_periodico@ctp:
   430                           	callstack 0
   431   000003                     Tm_Baje_periodico@ctp:
   432                           	callstack 0
   433   000003                     inicie_cola@c:
   434                           	callstack 0
   435   000003                     cola_llena@c:
   436                           	callstack 0
   437   000003                     cola_vacia@c:
   438                           	callstack 0
   439   000003                     inicie_SPI@spi:
   440                           	callstack 0
   441   000003                     actualize_valor@spi:
   442                           	callstack 0
   443   000003                     iniciar_struct_usart@disp:
   444                           	callstack 0
   445   000003                     recibir_periodo_Eusart@disp:
   446                           	callstack 0
   447   000003                     dato_recibido_completo@disp:
   448                           	callstack 0
   449   000003                     ___wmul@multiplier:
   450                           	callstack 0
   451                           
   452                           ; 2 bytes @ 0x2
   453   000003                     	ds	2
   454   000005                     ??_Tm_Procese_tiempo:
   455   000005                     ??_recibir_periodo_Eusart:
   456   000005                     ??_ADCC_GetConversionResult:
   457   000005                     actualize_valor@valorspi:
   458                           	callstack 0
   459   000005                     ___wmul@multiplicand:
   460                           	callstack 0
   461                           
   462                           ; 2 bytes @ 0x4
   463   000005                     	ds	2
   464   000007                     cola_add@c:
   465                           	callstack 0
   466   000007                     cola_get@c:
   467                           	callstack 0
   468   000007                     ___wmul@product:
   469                           	callstack 0
   470                           
   471                           ; 2 bytes @ 0x6
   472   000007                     	ds	2
   473   000009                     ??_cola_get:
   474   000009                     ?_actualizar_recibido_Eusart:
   475                           	callstack 0
   476   000009                     cola_add@dato:
   477                           	callstack 0
   478   000009                     actualizar_recibido_Eusart@disp:
   479                           	callstack 0
   480                           
   481                           ; 2 bytes @ 0x8
   482   000009                     	ds	1
   483   00000A                     ??_cola_add:
   484                           
   485                           ; 1 bytes @ 0x9
   486   00000A                     	ds	1
   487   00000B                     ??_actualizar_recibido_Eusart:
   488   00000B                     cola_get@temp:
   489                           	callstack 0
   490                           
   491                           ; 1 bytes @ 0xA
   492   00000B                     	ds	1
   493   00000C                     enviar_Eusart@valor:
   494                           	callstack 0
   495                           
   496                           ; 2 bytes @ 0xB
   497   00000C                     	ds	2
   498   00000E                     
   499                           ; 1 bytes @ 0xD
   500   00000E                     	ds	5
   501   000013                     Tm_Inicie_periodico@ctp:
   502                           	callstack 0
   503                           
   504                           ; 2 bytes @ 0x12
   505   000013                     	ds	2
   506   000015                     Tm_Inicie_periodico@periodo:
   507                           	callstack 0
   508                           
   509                           ; 2 bytes @ 0x14
   510   000015                     	ds	2
   511   000017                     ??_main:
   512                           
   513                           ; 1 bytes @ 0x16
   514   000017                     	ds	3
   515                           
   516 ;;
   517 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   518 ;;
   519 ;; *************** function _main *****************
   520 ;; Defined at:
   521 ;;		line 62 in file "main.c"
   522 ;; Parameters:    Size  Location     Type
   523 ;;		None
   524 ;; Auto vars:     Size  Location     Type
   525 ;;  cola           21   19[BANK0 ] struct eCola
   526 ;;  spi            12    0[BANK0 ] struct structspi
   527 ;;  disp           11   40[BANK0 ] struct usart
   528 ;;  timer           7   12[BANK0 ] struct Tm_Periodico
   529 ;;  estructuraSp    1    0        enum E16329
   530 ;; Return value:  Size  Location     Type
   531 ;;                  1    wreg      void 
   532 ;; Registers used:
   533 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   534 ;; Tracked objects:
   535 ;;		On entry : 0/0
   536 ;;		On exit  : 0/0
   537 ;;		Unchanged: 0/0
   538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   540 ;;      Locals:         0      51       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   541 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   542 ;;      Totals:         3      51       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   543 ;;Total ram usage:       54 bytes
   544 ;; Hardware stack levels required when called: 7
   545 ;; This function calls:
   546 ;;		_ADCC_DischargeSampleCapacitor
   547 ;;		_ADCC_GetConversionResult
   548 ;;		_ADCC_Initialize
   549 ;;		_ADCC_IsConversionDone
   550 ;;		_ADCC_StartConversion
   551 ;;		_SPI1_Initialize
   552 ;;		_SYSTEM_Initialize
   553 ;;		_TMR2_HasOverflowOccured
   554 ;;		_TMR2_Initialize
   555 ;;		_Tm_Baje_periodico
   556 ;;		_Tm_Hubo_periodico
   557 ;;		_Tm_Inicie_periodico
   558 ;;		_Tm_Procese_tiempo
   559 ;;		_UART1_Initialize
   560 ;;		_UART1_is_rx_ready
   561 ;;		_UART1_is_tx_ready
   562 ;;		_actualizar_recibido_Eusart
   563 ;;		_actualize_valor
   564 ;;		_cola_add
   565 ;;		_cola_get
   566 ;;		_cola_vacia
   567 ;;		_dato_recibido_completo
   568 ;;		_enviar_Eusart
   569 ;;		_iniciar_struct_usart
   570 ;;		_inicie_SPI
   571 ;;		_inicie_cola
   572 ;;		_recibir_periodo_Eusart
   573 ;; This function is called by:
   574 ;;		Startup code after reset
   575 ;; This function uses a non-reentrant model
   576 ;;
   577                           
   578                           	psect	text0
   579   001008                     __ptext0:
   580                           	callstack 0
   581   001008                     _main:
   582                           	callstack 24
   583                           
   584                           ;main.c: 65:     SYSTEM_Initialize();
   585                           
   586                           ;incstack = 0
   587   001008  EC91  F00D         	call	_SYSTEM_Initialize	;wreg free
   588                           
   589                           ;main.c: 77:     TMR2_Initialize();
   590   00100C  ECC7  F00D         	call	_TMR2_Initialize	;wreg free
   591                           
   592                           ;main.c: 78:     ADCC_Initialize();
   593   001010  EC7D  F00C         	call	_ADCC_Initialize	;wreg free
   594                           
   595                           ;main.c: 79:     SPI1_Initialize();
   596   001014  ECF1  F00D         	call	_SPI1_Initialize	;wreg free
   597                           
   598                           ;main.c: 80:     UART1_Initialize();
   599   001018  EC6B  F00A         	call	_UART1_Initialize	;wreg free
   600                           
   601                           ;main.c: 83:     Tm_Inicie_periodico(&timer,1000);
   602   00101C  0E6C               	movlw	low main@timer
   603   00101E  6E13               	movwf	Tm_Inicie_periodico@ctp^0,c
   604   001020  0E00               	movlw	high main@timer
   605   001022  6E14               	movwf	(Tm_Inicie_periodico@ctp+1)^0,c
   606   001024  0E03               	movlw	3
   607   001026  6E16               	movwf	(Tm_Inicie_periodico@periodo+1)^0,c
   608   001028  0EE8               	movlw	232
   609   00102A  6E15               	movwf	Tm_Inicie_periodico@periodo^0,c
   610   00102C  ECD5  F00C         	call	_Tm_Inicie_periodico	;wreg free
   611                           
   612                           ;main.c: 84:     eCola cola;;main.c: 85:     inicie_cola(&cola);
   613   001030  0E73               	movlw	low main@cola
   614   001032  6E03               	movwf	inicie_cola@c^0,c
   615   001034  0E00               	movlw	high main@cola
   616   001036  6E04               	movwf	(inicie_cola@c+1)^0,c
   617   001038  ECFE  F00C         	call	_inicie_cola	;wreg free
   618                           
   619                           ;main.c: 87:     structspi spi;;main.c: 88:     inicie_SPI(&spi);
   620   00103C  0E60               	movlw	low main@spi
   621   00103E  6E03               	movwf	inicie_SPI@spi^0,c
   622   001040  0E00               	movlw	high main@spi
   623   001042  6E04               	movwf	(inicie_SPI@spi+1)^0,c
   624   001044  ECF3  F00B         	call	_inicie_SPI	;wreg free
   625                           
   626                           ;main.c: 89:     actualize_valor(&spi,2048);
   627   001048  0E60               	movlw	low main@spi
   628   00104A  6E03               	movwf	actualize_valor@spi^0,c
   629   00104C  0E00               	movlw	high main@spi
   630   00104E  6E04               	movwf	(actualize_valor@spi+1)^0,c
   631   001050  0E08               	movlw	8
   632   001052  6E06               	movwf	(actualize_valor@valorspi+1)^0,c
   633   001054  0E00               	movlw	0
   634   001056  6E05               	movwf	actualize_valor@valorspi^0,c
   635   001058  ECE4  F00D         	call	_actualize_valor	;wreg free
   636                           
   637                           ;main.c: 90:     usart disp;;main.c: 91:     iniciar_struct_usart(&disp);
   638   00105C  0E88               	movlw	low main@disp
   639   00105E  6E03               	movwf	iniciar_struct_usart@disp^0,c
   640   001060  0E00               	movlw	high main@disp
   641   001062  6E04               	movwf	(iniciar_struct_usart@disp+1)^0,c
   642   001064  EC3C  F00C         	call	_iniciar_struct_usart	;wreg free
   643   001068                     l2993:
   644                           
   645                           ;main.c: 93:     {;main.c: 106:         if(TMR2_HasOverflowOccured()){
   646   001068  ECFE  F00D         	call	_TMR2_HasOverflowOccured	;wreg free
   647   00106C  0900               	iorlw	0
   648   00106E  B4D8               	btfsc	status,2,c
   649   001070  D006               	goto	l2997
   650                           
   651                           ;main.c: 107:             Tm_Procese_tiempo(&timer);
   652   001072  0E6C               	movlw	low main@timer
   653   001074  6E03               	movwf	Tm_Procese_tiempo@ctp^0,c
   654   001076  0E00               	movlw	high main@timer
   655   001078  6E04               	movwf	(Tm_Procese_tiempo@ctp+1)^0,c
   656   00107A  ECBC  F009         	call	_Tm_Procese_tiempo	;wreg free
   657   00107E                     l2997:
   658                           
   659                           ;main.c: 109:         if(Tm_Hubo_periodico(&timer)){
   660   00107E  0E6C               	movlw	low main@timer
   661   001080  6E03               	movwf	Tm_Hubo_periodico@ctp^0,c
   662   001082  0E00               	movlw	high main@timer
   663   001084  6E04               	movwf	(Tm_Hubo_periodico@ctp+1)^0,c
   664   001086  EC15  F00E         	call	_Tm_Hubo_periodico	;wreg free
   665   00108A  0900               	iorlw	0
   666   00108C  B4D8               	btfsc	status,2,c
   667   00108E  D00C               	goto	l3007
   668                           
   669                           ;main.c: 110:             Tm_Baje_periodico(&timer);
   670   001090  0E6C               	movlw	low main@timer
   671   001092  6E03               	movwf	Tm_Baje_periodico@ctp^0,c
   672   001094  0E00               	movlw	high main@timer
   673   001096  6E04               	movwf	(Tm_Baje_periodico@ctp+1)^0,c
   674   001098  EC1E  F00E         	call	_Tm_Baje_periodico	;wreg free
   675   00109C  88BD               	bsf	189,4,c	;volatile
   676                           
   677                           ;main.c: 115:             ADCC_StartConversion(primerADC);
   678   00109E  0E06               	movlw	6
   679   0010A0  EC2F  F00E         	call	_ADCC_StartConversion
   680                           
   681                           ;main.c: 116:             bandera_ADC1_finish = 1;
   682   0010A4  0E01               	movlw	1
   683   0010A6  6E23               	movwf	_bandera_ADC1_finish^0,c
   684   0010A8                     l3007:
   685                           
   686                           ;main.c: 119:         if(ADCC_IsConversionDone() && bandera_ADC1_finish){
   687   0010A8  EC45  F00E         	call	_ADCC_IsConversionDone	;wreg free
   688   0010AC  0900               	iorlw	0
   689   0010AE  B4D8               	btfsc	status,2,c
   690   0010B0  D01B               	goto	l3025
   691   0010B2  5023               	movf	_bandera_ADC1_finish^0,w,c
   692   0010B4  B4D8               	btfsc	status,2,c
   693   0010B6  D018               	goto	l3025
   694                           
   695                           ;main.c: 121:             primerresultado = ADCC_GetConversionResult();
   696   0010B8  EC0A  F00E         	call	_ADCC_GetConversionResult	;wreg free
   697   0010BC  C003  F01C         	movff	?_ADCC_GetConversionResult,_primerresultado
   698   0010C0  C004  F01D         	movff	?_ADCC_GetConversionResult+1,_primerresultado+1
   699                           
   700                           ;main.c: 123:             ADCC_DischargeSampleCapacitor();
   701   0010C4  EC6D  F00E         	call	_ADCC_DischargeSampleCapacitor	;wreg free
   702                           
   703                           ;main.c: 125:             ADCC_StartConversion(segundoADC);
   704   0010C8  0E05               	movlw	5
   705   0010CA  EC2F  F00E         	call	_ADCC_StartConversion
   706                           
   707                           ;main.c: 127:             cola_add(&cola,(char)(primerresultado));
   708   0010CE  0E73               	movlw	low main@cola
   709   0010D0  6E07               	movwf	cola_add@c^0,c
   710   0010D2  0E00               	movlw	high main@cola
   711   0010D4  6E08               	movwf	(cola_add@c+1)^0,c
   712   0010D6  C01C  F009         	movff	_primerresultado,cola_add@dato
   713   0010DA  EC5B  F00B         	call	_cola_add	;wreg free
   714   0010DE  98BD               	bcf	189,4,c	;volatile
   715                           
   716                           ;main.c: 132:             bandera_ADC1_finish = 0;
   717   0010E0  0E00               	movlw	0
   718   0010E2  6E23               	movwf	_bandera_ADC1_finish^0,c
   719                           
   720                           ;main.c: 133:             bandera_ADC2_finish = 1;
   721   0010E4  0E01               	movlw	1
   722   0010E6  6E22               	movwf	_bandera_ADC2_finish^0,c
   723   0010E8                     l3025:
   724                           
   725                           ;main.c: 137:         if(bandera_ADC2_finish && ADCC_IsConversionDone()){
   726   0010E8  5022               	movf	_bandera_ADC2_finish^0,w,c
   727   0010EA  B4D8               	btfsc	status,2,c
   728   0010EC  D030               	goto	l3041
   729   0010EE  EC45  F00E         	call	_ADCC_IsConversionDone	;wreg free
   730   0010F2  0900               	iorlw	0
   731   0010F4  B4D8               	btfsc	status,2,c
   732   0010F6  D02B               	goto	l3041
   733                           
   734                           ;main.c: 138:             bandera_ADC2_finish = 0;
   735   0010F8  0E00               	movlw	0
   736   0010FA  6E22               	movwf	_bandera_ADC2_finish^0,c
   737                           
   738                           ;main.c: 139:             segundoresultado = ADCC_GetConversionResult();
   739   0010FC  EC0A  F00E         	call	_ADCC_GetConversionResult	;wreg free
   740   001100  C003  F01A         	movff	?_ADCC_GetConversionResult,_segundoresultado
   741   001104  C004  F01B         	movff	?_ADCC_GetConversionResult+1,_segundoresultado+1
   742                           
   743                           ;main.c: 140:             segundoresultado = 3000;
   744   001108  0E0B               	movlw	11
   745   00110A  6E1B               	movwf	(_segundoresultado+1)^0,c
   746   00110C  0EB8               	movlw	184
   747   00110E  6E1A               	movwf	_segundoresultado^0,c
   748                           
   749                           ;main.c: 141:             ADCC_DischargeSampleCapacitor();
   750   001110  EC6D  F00E         	call	_ADCC_DischargeSampleCapacitor	;wreg free
   751                           
   752                           ;main.c: 142:             cola_add(&cola,segundoresultado & 0xFF);
   753   001114  0E73               	movlw	low main@cola
   754   001116  6E07               	movwf	cola_add@c^0,c
   755   001118  0E00               	movlw	high main@cola
   756   00111A  6E08               	movwf	(cola_add@c+1)^0,c
   757   00111C  0EB8               	movlw	184
   758   00111E  6E09               	movwf	cola_add@dato^0,c
   759   001120  EC5B  F00B         	call	_cola_add	;wreg free
   760                           
   761                           ;main.c: 143:             cola_add(&cola,((primerresultado & 0xF00) >> 4) | ((segundores
      +                          ultado & 0xF00) >> 8 ));
   762   001124  0E73               	movlw	low main@cola
   763   001126  6E07               	movwf	cola_add@c^0,c
   764   001128  0E00               	movlw	high main@cola
   765   00112A  6E08               	movwf	(cola_add@c+1)^0,c
   766   00112C  C01C  F017         	movff	_primerresultado,??_main
   767   001130  C01D  F018         	movff	_primerresultado+1,??_main+1
   768   001134  0E04               	movlw	4
   769   001136  6E19               	movwf	(??_main+2)^0,c
   770   001138                     u1295:
   771   001138  3418               	rlcf	(??_main+1)^0,w,c
   772   00113A  3218               	rrcf	(??_main+1)^0,f,c
   773   00113C  3217               	rrcf	??_main^0,f,c
   774   00113E  2E19               	decfsz	(??_main+2)^0,f,c
   775   001140  D7FB               	goto	u1295
   776   001142  5017               	movf	??_main^0,w,c
   777   001144  0BF0               	andlw	240
   778   001146  090B               	iorlw	11
   779   001148  6E09               	movwf	cola_add@dato^0,c
   780   00114A  EC5B  F00B         	call	_cola_add	;wreg free
   781   00114E                     l3041:
   782                           
   783                           ;main.c: 165:         if(!(cola_vacia(&cola)) && UART1_is_tx_ready()){
   784   00114E  0E73               	movlw	low main@cola
   785   001150  6E03               	movwf	cola_vacia@c^0,c
   786   001152  0E00               	movlw	high main@cola
   787   001154  6E04               	movwf	(cola_vacia@c+1)^0,c
   788   001156  EC37  F00D         	call	_cola_vacia	;wreg free
   789   00115A  5003               	movf	?_cola_vacia^0,w,c
   790   00115C  1004               	iorwf	(?_cola_vacia+1)^0,w,c
   791   00115E  A4D8               	btfss	status,2,c
   792   001160  D011               	goto	l3047
   793   001162  EC37  F00E         	call	_UART1_is_tx_ready	;wreg free
   794   001166  0900               	iorlw	0
   795   001168  B4D8               	btfsc	status,2,c
   796   00116A  D00C               	goto	l3047
   797                           
   798                           ;main.c: 166:            enviar_Eusart(cola_get(&cola));
   799   00116C  0E73               	movlw	low main@cola
   800   00116E  6E07               	movwf	cola_get@c^0,c
   801   001170  0E00               	movlw	high main@cola
   802   001172  6E08               	movwf	(cola_get@c+1)^0,c
   803   001174  ECBD  F00A         	call	_cola_get	;wreg free
   804   001178  6E17               	movwf	??_main^0,c
   805   00117A  5017               	movf	??_main^0,w,c
   806   00117C  6E0C               	movwf	enviar_Eusart@valor^0,c
   807   00117E  6A0D               	clrf	(enviar_Eusart@valor+1)^0,c
   808   001180  EC65  F00E         	call	_enviar_Eusart	;wreg free
   809   001184                     l3047:
   810                           
   811                           ;main.c: 168:         if(UART1_is_rx_ready()){
   812   001184  EC3E  F00E         	call	_UART1_is_rx_ready	;wreg free
   813   001188  0900               	iorlw	0
   814   00118A  B4D8               	btfsc	status,2,c
   815   00118C  D006               	goto	l737
   816                           
   817                           ;main.c: 170:             recibir_periodo_Eusart(&disp);
   818   00118E  0E88               	movlw	low main@disp
   819   001190  6E03               	movwf	recibir_periodo_Eusart@disp^0,c
   820   001192  0E00               	movlw	high main@disp
   821   001194  6E04               	movwf	(recibir_periodo_Eusart@disp+1)^0,c
   822   001196  ECE9  F008         	call	_recibir_periodo_Eusart	;wreg free
   823   00119A                     l737:
   824                           
   825                           ;main.c: 172:         if(dato_recibido_completo(&disp)){
   826   00119A  0E88               	movlw	low main@disp
   827   00119C  6E03               	movwf	dato_recibido_completo@disp^0,c
   828   00119E  0E00               	movlw	high main@disp
   829   0011A0  6E04               	movwf	(dato_recibido_completo@disp+1)^0,c
   830   0011A2  EC27  F00E         	call	_dato_recibido_completo	;wreg free
   831   0011A6  0900               	iorlw	0
   832   0011A8  B4D8               	btfsc	status,2,c
   833   0011AA  D75E               	goto	l2993
   834                           
   835                           ;main.c: 173:             Tm_Inicie_periodico(&timer,1 + actualizar_recibido_Eusart(&dis
      +                          p));
   836   0011AC  0E6C               	movlw	low main@timer
   837   0011AE  6E13               	movwf	Tm_Inicie_periodico@ctp^0,c
   838   0011B0  0E00               	movlw	high main@timer
   839   0011B2  6E14               	movwf	(Tm_Inicie_periodico@ctp+1)^0,c
   840   0011B4  0E88               	movlw	low main@disp
   841   0011B6  6E09               	movwf	actualizar_recibido_Eusart@disp^0,c
   842   0011B8  0E00               	movlw	high main@disp
   843   0011BA  6E0A               	movwf	(actualizar_recibido_Eusart@disp+1)^0,c
   844   0011BC  EC0C  F00B         	call	_actualizar_recibido_Eusart	;wreg free
   845   0011C0  0E01               	movlw	1
   846   0011C2  2409               	addwf	?_actualizar_recibido_Eusart^0,w,c
   847   0011C4  6E15               	movwf	Tm_Inicie_periodico@periodo^0,c
   848   0011C6  0E00               	movlw	0
   849   0011C8  200A               	addwfc	(?_actualizar_recibido_Eusart+1)^0,w,c
   850   0011CA  6E16               	movwf	(Tm_Inicie_periodico@periodo+1)^0,c
   851   0011CC  ECD5  F00C         	call	_Tm_Inicie_periodico	;wreg free
   852   0011D0  D74B               	goto	l2993
   853   0011D2                     __end_of_main:
   854                           	callstack 0
   855                           
   856 ;; *************** function _recibir_periodo_Eusart *****************
   857 ;; Defined at:
   858 ;;		line 17 in file "proceseusart.c"
   859 ;; Parameters:    Size  Location     Type
   860 ;;  disp            2    2[COMRAM] PTR struct usart
   861 ;;		 -> main@disp(11), 
   862 ;; Auto vars:     Size  Location     Type
   863 ;;		None
   864 ;; Return value:  Size  Location     Type
   865 ;;                  1    wreg      void 
   866 ;; Registers used:
   867 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   868 ;; Tracked objects:
   869 ;;		On entry : 0/0
   870 ;;		On exit  : 0/0
   871 ;;		Unchanged: 0/0
   872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   873 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   875 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   876 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   877 ;;Total ram usage:        4 bytes
   878 ;; Hardware stack levels used: 1
   879 ;; Hardware stack levels required when called: 4
   880 ;; This function calls:
   881 ;;		Nothing
   882 ;; This function is called by:
   883 ;;		_main
   884 ;; This function uses a non-reentrant model
   885 ;;
   886                           
   887                           	psect	text1
   888   0011D2                     __ptext1:
   889                           	callstack 0
   890   0011D2                     _recibir_periodo_Eusart:
   891                           	callstack 26
   892                           
   893                           ;proceseusart.c: 18:     disp -> valor = U1RXB;
   894                           
   895                           ;incstack = 0
   896   0011D2  0060  F00F  FFD9   	movff	recibir_periodo_Eusart@disp,fsr2l
   897   0011D8  0060  F013  FFDA   	movff	recibir_periodo_Eusart@disp+1,fsr2h
   898   0011DE  006F F7A3 FFDF     	movff	15848,indf2	;volatile
   899                           
   900                           ;proceseusart.c: 19:     switch(disp -> caso)
   901   0011E4  D0A8               	goto	l2955
   902   0011E6                     l2937:
   903                           
   904                           ;proceseusart.c: 22:             if(disp -> valor == 60){
   905   0011E6  0060  F00F  FFD9   	movff	recibir_periodo_Eusart@disp,fsr2l
   906   0011EC  0060  F013  FFDA   	movff	recibir_periodo_Eusart@disp+1,fsr2h
   907   0011F2  0E3C               	movlw	60
   908   0011F4  18DE               	xorwf	postinc2,w,c
   909   0011F6  A4D8               	btfss	status,2,c
   910   0011F8  D00B               	goto	l2941
   911                           
   912                           ;proceseusart.c: 23:                 disp -> caso = 1;
   913   0011FA  EE20 F007          	lfsr	2,7
   914   0011FE  5003               	movf	recibir_periodo_Eusart@disp^0,w,c
   915   001200  26D9               	addwf	fsr2l,f,c
   916   001202  5004               	movf	(recibir_periodo_Eusart@disp+1)^0,w,c
   917   001204  22DA               	addwfc	fsr2h,f,c
   918   001206  0E01               	movlw	1
   919   001208  6EDE               	movwf	postinc2,c
   920   00120A  0E00               	movlw	0
   921   00120C  6EDD               	movwf	postdec2,c
   922                           
   923                           ;proceseusart.c: 24:             }
   924   00120E  0012               	return	
   925   001210                     l2941:
   926                           
   927                           ;proceseusart.c: 26:             {;proceseusart.c: 27:                 disp -> caso = 0;
   928   001210  EE20 F007          	lfsr	2,7
   929   001214  5003               	movf	recibir_periodo_Eusart@disp^0,w,c
   930   001216  26D9               	addwf	fsr2l,f,c
   931   001218  5004               	movf	(recibir_periodo_Eusart@disp+1)^0,w,c
   932   00121A  22DA               	addwfc	fsr2h,f,c
   933   00121C  0E00               	movlw	0
   934   00121E  6EDE               	movwf	postinc2,c
   935   001220  0E00               	movlw	0
   936   001222  6EDD               	movwf	postdec2,c
   937   001224  0012               	return	
   938   001226                     l2943:
   939                           
   940                           ;proceseusart.c: 31:             disp -> caso = 2;
   941   001226  EE20 F007          	lfsr	2,7
   942   00122A  5003               	movf	recibir_periodo_Eusart@disp^0,w,c
   943   00122C  26D9               	addwf	fsr2l,f,c
   944   00122E  5004               	movf	(recibir_periodo_Eusart@disp+1)^0,w,c
   945   001230  22DA               	addwfc	fsr2h,f,c
   946   001232  0E02               	movlw	2
   947   001234  6EDE               	movwf	postinc2,c
   948   001236  0E00               	movlw	0
   949   001238  6EDD               	movwf	postdec2,c
   950                           
   951                           ;proceseusart.c: 32:             disp -> numero1 = disp -> valor;
   952   00123A  0060  F00F  FFD9   	movff	recibir_periodo_Eusart@disp,fsr2l
   953   001240  0060  F013  FFDA   	movff	recibir_periodo_Eusart@disp+1,fsr2h
   954   001246  50DF               	movf	indf2,w,c
   955   001248  6E05               	movwf	??_recibir_periodo_Eusart^0,c
   956   00124A  6A06               	clrf	(??_recibir_periodo_Eusart+1)^0,c
   957   00124C  EE20 F001          	lfsr	2,1
   958   001250  5003               	movf	recibir_periodo_Eusart@disp^0,w,c
   959   001252  26D9               	addwf	fsr2l,f,c
   960   001254  5004               	movf	(recibir_periodo_Eusart@disp+1)^0,w,c
   961   001256  22DA               	addwfc	fsr2h,f,c
   962   001258  0060  F017  FFDE   	movff	??_recibir_periodo_Eusart,postinc2
   963   00125E  0060  F01B  FFDD   	movff	??_recibir_periodo_Eusart+1,postdec2
   964                           
   965                           ;proceseusart.c: 33:             break;
   966   001264  0012               	return	
   967   001266                     l2945:
   968                           
   969                           ;proceseusart.c: 35:             disp -> caso = 3;
   970   001266  EE20 F007          	lfsr	2,7
   971   00126A  5003               	movf	recibir_periodo_Eusart@disp^0,w,c
   972   00126C  26D9               	addwf	fsr2l,f,c
   973   00126E  5004               	movf	(recibir_periodo_Eusart@disp+1)^0,w,c
   974   001270  22DA               	addwfc	fsr2h,f,c
   975   001272  0E03               	movlw	3
   976   001274  6EDE               	movwf	postinc2,c
   977   001276  0E00               	movlw	0
   978   001278  6EDD               	movwf	postdec2,c
   979                           
   980                           ;proceseusart.c: 36:             disp -> numero2 = disp -> valor;
   981   00127A  0060  F00F  FFD9   	movff	recibir_periodo_Eusart@disp,fsr2l
   982   001280  0060  F013  FFDA   	movff	recibir_periodo_Eusart@disp+1,fsr2h
   983   001286  50DF               	movf	indf2,w,c
   984   001288  6E05               	movwf	??_recibir_periodo_Eusart^0,c
   985   00128A  6A06               	clrf	(??_recibir_periodo_Eusart+1)^0,c
   986   00128C  EE20 F003          	lfsr	2,3
   987   001290  5003               	movf	recibir_periodo_Eusart@disp^0,w,c
   988   001292  26D9               	addwf	fsr2l,f,c
   989   001294  5004               	movf	(recibir_periodo_Eusart@disp+1)^0,w,c
   990   001296  22DA               	addwfc	fsr2h,f,c
   991   001298  0060  F017  FFDE   	movff	??_recibir_periodo_Eusart,postinc2
   992   00129E  0060  F01B  FFDD   	movff	??_recibir_periodo_Eusart+1,postdec2
   993                           
   994                           ;proceseusart.c: 37:             break;
   995   0012A4  0012               	return	
   996   0012A6                     l2947:
   997                           
   998                           ;proceseusart.c: 39:             disp -> caso = 4;
   999   0012A6  EE20 F007          	lfsr	2,7
  1000   0012AA  5003               	movf	recibir_periodo_Eusart@disp^0,w,c
  1001   0012AC  26D9               	addwf	fsr2l,f,c
  1002   0012AE  5004               	movf	(recibir_periodo_Eusart@disp+1)^0,w,c
  1003   0012B0  22DA               	addwfc	fsr2h,f,c
  1004   0012B2  0E04               	movlw	4
  1005   0012B4  6EDE               	movwf	postinc2,c
  1006   0012B6  0E00               	movlw	0
  1007   0012B8  6EDD               	movwf	postdec2,c
  1008                           
  1009                           ;proceseusart.c: 40:             disp -> numero3 = disp -> valor;
  1010   0012BA  0060  F00F  FFD9   	movff	recibir_periodo_Eusart@disp,fsr2l
  1011   0012C0  0060  F013  FFDA   	movff	recibir_periodo_Eusart@disp+1,fsr2h
  1012   0012C6  50DF               	movf	indf2,w,c
  1013   0012C8  6E05               	movwf	??_recibir_periodo_Eusart^0,c
  1014   0012CA  6A06               	clrf	(??_recibir_periodo_Eusart+1)^0,c
  1015   0012CC  EE20 F005          	lfsr	2,5
  1016   0012D0  5003               	movf	recibir_periodo_Eusart@disp^0,w,c
  1017   0012D2  26D9               	addwf	fsr2l,f,c
  1018   0012D4  5004               	movf	(recibir_periodo_Eusart@disp+1)^0,w,c
  1019   0012D6  22DA               	addwfc	fsr2h,f,c
  1020   0012D8  0060  F017  FFDE   	movff	??_recibir_periodo_Eusart,postinc2
  1021   0012DE  0060  F01B  FFDD   	movff	??_recibir_periodo_Eusart+1,postdec2
  1022                           
  1023                           ;proceseusart.c: 41:             break;
  1024   0012E4  0012               	return	
  1025   0012E6                     l2949:
  1026                           
  1027                           ;proceseusart.c: 43:             if(disp -> valor == 62){
  1028   0012E6  0060  F00F  FFD9   	movff	recibir_periodo_Eusart@disp,fsr2l
  1029   0012EC  0060  F013  FFDA   	movff	recibir_periodo_Eusart@disp+1,fsr2h
  1030   0012F2  0E3E               	movlw	62
  1031   0012F4  18DE               	xorwf	postinc2,w,c
  1032   0012F6  A4D8               	btfss	status,2,c
  1033   0012F8  D013               	goto	l2953
  1034                           
  1035                           ;proceseusart.c: 44:                 disp -> recibir_dato_completo = 1;
  1036   0012FA  EE20 F009          	lfsr	2,9
  1037   0012FE  5003               	movf	recibir_periodo_Eusart@disp^0,w,c
  1038   001300  26D9               	addwf	fsr2l,f,c
  1039   001302  5004               	movf	(recibir_periodo_Eusart@disp+1)^0,w,c
  1040   001304  22DA               	addwfc	fsr2h,f,c
  1041   001306  0E01               	movlw	1
  1042   001308  6EDF               	movwf	indf2,c
  1043                           
  1044                           ;proceseusart.c: 45:                 disp -> caso = 0;
  1045   00130A  EE20 F007          	lfsr	2,7
  1046   00130E  5003               	movf	recibir_periodo_Eusart@disp^0,w,c
  1047   001310  26D9               	addwf	fsr2l,f,c
  1048   001312  5004               	movf	(recibir_periodo_Eusart@disp+1)^0,w,c
  1049   001314  22DA               	addwfc	fsr2h,f,c
  1050   001316  0E00               	movlw	0
  1051   001318  6EDE               	movwf	postinc2,c
  1052   00131A  0E00               	movlw	0
  1053   00131C  6EDD               	movwf	postdec2,c
  1054                           
  1055                           ;proceseusart.c: 46:             }
  1056   00131E  0012               	return	
  1057   001320                     l2953:
  1058                           
  1059                           ;proceseusart.c: 48:                 disp -> caso = 0;
  1060   001320  EE20 F007          	lfsr	2,7
  1061   001324  5003               	movf	recibir_periodo_Eusart@disp^0,w,c
  1062   001326  26D9               	addwf	fsr2l,f,c
  1063   001328  5004               	movf	(recibir_periodo_Eusart@disp+1)^0,w,c
  1064   00132A  22DA               	addwfc	fsr2h,f,c
  1065   00132C  0E00               	movlw	0
  1066   00132E  6EDE               	movwf	postinc2,c
  1067   001330  0E00               	movlw	0
  1068   001332  6EDD               	movwf	postdec2,c
  1069   001334  0012               	return	
  1070   001336                     l2955:
  1071   001336  EE20 F007          	lfsr	2,7
  1072   00133A  5003               	movf	recibir_periodo_Eusart@disp^0,w,c
  1073   00133C  26D9               	addwf	fsr2l,f,c
  1074   00133E  5004               	movf	(recibir_periodo_Eusart@disp+1)^0,w,c
  1075   001340  22DA               	addwfc	fsr2h,f,c
  1076   001342  006F FF78  F005    	movff	postinc2,??_recibir_periodo_Eusart
  1077   001348  006F FF74  F006    	movff	postdec2,??_recibir_periodo_Eusart+1
  1078                           
  1079                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1080                           ; Switch size 1, requested type "simple"
  1081                           ; Number of cases is 1, Range of values is 0 to 0
  1082                           ; switch strategies available:
  1083                           ; Name         Instructions Cycles
  1084                           ; simple_byte            4     3 (average)
  1085                           ;	Chosen strategy is simple_byte
  1086   00134E  5006               	movf	(??_recibir_periodo_Eusart+1)^0,w,c
  1087   001350  0A00               	xorlw	0	; case 0
  1088   001352  A4D8               	btfss	status,2,c
  1089   001354  0012               	return	
  1090                           
  1091                           ; Switch size 1, requested type "simple"
  1092                           ; Number of cases is 5, Range of values is 0 to 4
  1093                           ; switch strategies available:
  1094                           ; Name         Instructions Cycles
  1095                           ; simple_byte           16     9 (average)
  1096                           ;	Chosen strategy is simple_byte
  1097   001356  5005               	movf	??_recibir_periodo_Eusart^0,w,c
  1098   001358  0A00               	xorlw	0	; case 0
  1099   00135A  B4D8               	btfsc	status,2,c
  1100   00135C  D744               	goto	l2937
  1101   00135E  0A01               	xorlw	1	; case 1
  1102   001360  B4D8               	btfsc	status,2,c
  1103   001362  D761               	goto	l2943
  1104   001364  0A03               	xorlw	3	; case 2
  1105   001366  B4D8               	btfsc	status,2,c
  1106   001368  D77E               	goto	l2945
  1107   00136A  0A01               	xorlw	1	; case 3
  1108   00136C  B4D8               	btfsc	status,2,c
  1109   00136E  D79B               	goto	l2947
  1110   001370  0A07               	xorlw	7	; case 4
  1111   001372  A4D8               	btfss	status,2,c
  1112   001374  0012               	return	
  1113   001376  D7B7               	goto	l2949
  1114   001378                     __end_of_recibir_periodo_Eusart:
  1115                           	callstack 0
  1116                           
  1117 ;; *************** function _inicie_cola *****************
  1118 ;; Defined at:
  1119 ;;		line 3 in file "cola.c"
  1120 ;; Parameters:    Size  Location     Type
  1121 ;;  c               2    2[COMRAM] PTR struct eCola
  1122 ;;		 -> main@cola(21), 
  1123 ;; Auto vars:     Size  Location     Type
  1124 ;;		None
  1125 ;; Return value:  Size  Location     Type
  1126 ;;                  1    wreg      void 
  1127 ;; Registers used:
  1128 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1129 ;; Tracked objects:
  1130 ;;		On entry : 0/0
  1131 ;;		On exit  : 0/0
  1132 ;;		Unchanged: 0/0
  1133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1134 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1137 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1138 ;;Total ram usage:        2 bytes
  1139 ;; Hardware stack levels used: 1
  1140 ;; Hardware stack levels required when called: 4
  1141 ;; This function calls:
  1142 ;;		Nothing
  1143 ;; This function is called by:
  1144 ;;		_main
  1145 ;; This function uses a non-reentrant model
  1146 ;;
  1147                           
  1148                           	psect	text2
  1149   0019FC                     __ptext2:
  1150                           	callstack 0
  1151   0019FC                     _inicie_cola:
  1152                           	callstack 26
  1153                           
  1154                           ;cola.c: 3: void inicie_cola(eCola* c);cola.c: 4: {;cola.c: 5:     c->entrada=0;
  1155                           
  1156                           ;incstack = 0
  1157   0019FC  EE20 F00F          	lfsr	2,15
  1158   001A00  5003               	movf	inicie_cola@c^0,w,c
  1159   001A02  26D9               	addwf	fsr2l,f,c
  1160   001A04  5004               	movf	(inicie_cola@c+1)^0,w,c
  1161   001A06  22DA               	addwfc	fsr2h,f,c
  1162   001A08  0E00               	movlw	0
  1163   001A0A  6EDE               	movwf	postinc2,c
  1164   001A0C  0E00               	movlw	0
  1165   001A0E  6EDD               	movwf	postdec2,c
  1166                           
  1167                           ;cola.c: 6:     c->salida=0;
  1168   001A10  EE20 F011          	lfsr	2,17
  1169   001A14  5003               	movf	inicie_cola@c^0,w,c
  1170   001A16  26D9               	addwf	fsr2l,f,c
  1171   001A18  5004               	movf	(inicie_cola@c+1)^0,w,c
  1172   001A1A  22DA               	addwfc	fsr2h,f,c
  1173   001A1C  0E00               	movlw	0
  1174   001A1E  6EDE               	movwf	postinc2,c
  1175   001A20  0E00               	movlw	0
  1176   001A22  6EDD               	movwf	postdec2,c
  1177                           
  1178                           ;cola.c: 7:     c->peso=0;
  1179   001A24  EE20 F013          	lfsr	2,19
  1180   001A28  5003               	movf	inicie_cola@c^0,w,c
  1181   001A2A  26D9               	addwf	fsr2l,f,c
  1182   001A2C  5004               	movf	(inicie_cola@c+1)^0,w,c
  1183   001A2E  22DA               	addwfc	fsr2h,f,c
  1184   001A30  0E00               	movlw	0
  1185   001A32  6EDE               	movwf	postinc2,c
  1186   001A34  0E00               	movlw	0
  1187   001A36  6EDD               	movwf	postdec2,c
  1188   001A38  0012               	return		;funcret
  1189   001A3A                     __end_of_inicie_cola:
  1190                           	callstack 0
  1191                           
  1192 ;; *************** function _inicie_SPI *****************
  1193 ;; Defined at:
  1194 ;;		line 8 in file "processpi.c"
  1195 ;; Parameters:    Size  Location     Type
  1196 ;;  spi             2    2[COMRAM] PTR struct structspi
  1197 ;;		 -> main@spi(12), 
  1198 ;; Auto vars:     Size  Location     Type
  1199 ;;		None
  1200 ;; Return value:  Size  Location     Type
  1201 ;;                  1    wreg      void 
  1202 ;; Registers used:
  1203 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1204 ;; Tracked objects:
  1205 ;;		On entry : 0/0
  1206 ;;		On exit  : 0/0
  1207 ;;		Unchanged: 0/0
  1208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1209 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1212 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1213 ;;Total ram usage:        2 bytes
  1214 ;; Hardware stack levels used: 1
  1215 ;; Hardware stack levels required when called: 4
  1216 ;; This function calls:
  1217 ;;		Nothing
  1218 ;; This function is called by:
  1219 ;;		_main
  1220 ;; This function uses a non-reentrant model
  1221 ;;
  1222                           
  1223                           	psect	text3
  1224   0017E6                     __ptext3:
  1225                           	callstack 0
  1226   0017E6                     _inicie_SPI:
  1227                           	callstack 26
  1228                           
  1229                           ;processpi.c: 9:     spi -> valor = 0;
  1230                           
  1231                           ;incstack = 0
  1232   0017E6  0060  F00F  FFD9   	movff	inicie_SPI@spi,fsr2l
  1233   0017EC  0060  F013  FFDA   	movff	inicie_SPI@spi+1,fsr2h
  1234   0017F2  0E00               	movlw	0
  1235   0017F4  6EDE               	movwf	postinc2,c
  1236   0017F6  0E00               	movlw	0
  1237   0017F8  6EDD               	movwf	postdec2,c
  1238                           
  1239                           ;processpi.c: 10:     spi -> ganancia = 0;
  1240   0017FA  EE20 F004          	lfsr	2,4
  1241   0017FE  5003               	movf	inicie_SPI@spi^0,w,c
  1242   001800  26D9               	addwf	fsr2l,f,c
  1243   001802  5004               	movf	(inicie_SPI@spi+1)^0,w,c
  1244   001804  22DA               	addwfc	fsr2h,f,c
  1245   001806  0E00               	movlw	0
  1246   001808  6EDF               	movwf	indf2,c
  1247                           
  1248                           ;processpi.c: 11:     spi -> canal = 0;
  1249   00180A  EE20 F003          	lfsr	2,3
  1250   00180E  5003               	movf	inicie_SPI@spi^0,w,c
  1251   001810  26D9               	addwf	fsr2l,f,c
  1252   001812  5004               	movf	(inicie_SPI@spi+1)^0,w,c
  1253   001814  22DA               	addwfc	fsr2h,f,c
  1254   001816  0E00               	movlw	0
  1255   001818  6EDF               	movwf	indf2,c
  1256                           
  1257                           ;processpi.c: 12:     spi -> impedancia = 0;
  1258   00181A  EE20 F005          	lfsr	2,5
  1259   00181E  5003               	movf	inicie_SPI@spi^0,w,c
  1260   001820  26D9               	addwf	fsr2l,f,c
  1261   001822  5004               	movf	(inicie_SPI@spi+1)^0,w,c
  1262   001824  22DA               	addwfc	fsr2h,f,c
  1263   001826  0E00               	movlw	0
  1264   001828  6EDF               	movwf	indf2,c
  1265                           
  1266                           ;processpi.c: 13:     spi -> valor_enviando = 0;
  1267   00182A  EE20 F002          	lfsr	2,2
  1268   00182E  5003               	movf	inicie_SPI@spi^0,w,c
  1269   001830  26D9               	addwf	fsr2l,f,c
  1270   001832  5004               	movf	(inicie_SPI@spi+1)^0,w,c
  1271   001834  22DA               	addwfc	fsr2h,f,c
  1272   001836  0E00               	movlw	0
  1273   001838  6EDF               	movwf	indf2,c
  1274                           
  1275                           ;processpi.c: 14:     spi -> estado_registro = 16;
  1276   00183A  EE20 F006          	lfsr	2,6
  1277   00183E  5003               	movf	inicie_SPI@spi^0,w,c
  1278   001840  26D9               	addwf	fsr2l,f,c
  1279   001842  5004               	movf	(inicie_SPI@spi+1)^0,w,c
  1280   001844  22DA               	addwfc	fsr2h,f,c
  1281   001846  0E10               	movlw	16
  1282   001848  6EDE               	movwf	postinc2,c
  1283   00184A  0E00               	movlw	0
  1284   00184C  6EDD               	movwf	postdec2,c
  1285                           
  1286                           ;processpi.c: 15:     spi -> caso = 0;
  1287   00184E  EE20 F008          	lfsr	2,8
  1288   001852  5003               	movf	inicie_SPI@spi^0,w,c
  1289   001854  26D9               	addwf	fsr2l,f,c
  1290   001856  5004               	movf	(inicie_SPI@spi+1)^0,w,c
  1291   001858  22DA               	addwfc	fsr2h,f,c
  1292   00185A  0E00               	movlw	0
  1293   00185C  6EDE               	movwf	postinc2,c
  1294   00185E  0E00               	movlw	0
  1295   001860  6EDD               	movwf	postdec2,c
  1296                           
  1297                           ;processpi.c: 16:     spi -> tamano_registro = 16;
  1298   001862  EE20 F00A          	lfsr	2,10
  1299   001866  5003               	movf	inicie_SPI@spi^0,w,c
  1300   001868  26D9               	addwf	fsr2l,f,c
  1301   00186A  5004               	movf	(inicie_SPI@spi+1)^0,w,c
  1302   00186C  22DA               	addwfc	fsr2h,f,c
  1303   00186E  0E10               	movlw	16
  1304   001870  6EDE               	movwf	postinc2,c
  1305   001872  0E00               	movlw	0
  1306   001874  6EDD               	movwf	postdec2,c
  1307   001876  0012               	return		;funcret
  1308   001878                     __end_of_inicie_SPI:
  1309                           	callstack 0
  1310                           
  1311 ;; *************** function _iniciar_struct_usart *****************
  1312 ;; Defined at:
  1313 ;;		line 7 in file "proceseusart.c"
  1314 ;; Parameters:    Size  Location     Type
  1315 ;;  disp            2    2[COMRAM] PTR struct usart
  1316 ;;		 -> main@disp(11), 
  1317 ;; Auto vars:     Size  Location     Type
  1318 ;;		None
  1319 ;; Return value:  Size  Location     Type
  1320 ;;                  1    wreg      void 
  1321 ;; Registers used:
  1322 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1323 ;; Tracked objects:
  1324 ;;		On entry : 0/0
  1325 ;;		On exit  : 0/0
  1326 ;;		Unchanged: 0/0
  1327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1328 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1331 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1332 ;;Total ram usage:        2 bytes
  1333 ;; Hardware stack levels used: 1
  1334 ;; Hardware stack levels required when called: 4
  1335 ;; This function calls:
  1336 ;;		Nothing
  1337 ;; This function is called by:
  1338 ;;		_main
  1339 ;; This function uses a non-reentrant model
  1340 ;;
  1341                           
  1342                           	psect	text4
  1343   001878                     __ptext4:
  1344                           	callstack 0
  1345   001878                     _iniciar_struct_usart:
  1346                           	callstack 26
  1347                           
  1348                           ;proceseusart.c: 8:     disp -> numero1 = 0;
  1349                           
  1350                           ;incstack = 0
  1351   001878  EE20 F001          	lfsr	2,1
  1352   00187C  5003               	movf	iniciar_struct_usart@disp^0,w,c
  1353   00187E  26D9               	addwf	fsr2l,f,c
  1354   001880  5004               	movf	(iniciar_struct_usart@disp+1)^0,w,c
  1355   001882  22DA               	addwfc	fsr2h,f,c
  1356   001884  0E00               	movlw	0
  1357   001886  6EDE               	movwf	postinc2,c
  1358   001888  0E00               	movlw	0
  1359   00188A  6EDD               	movwf	postdec2,c
  1360                           
  1361                           ;proceseusart.c: 9:     disp -> numero2 = 0;
  1362   00188C  EE20 F003          	lfsr	2,3
  1363   001890  5003               	movf	iniciar_struct_usart@disp^0,w,c
  1364   001892  26D9               	addwf	fsr2l,f,c
  1365   001894  5004               	movf	(iniciar_struct_usart@disp+1)^0,w,c
  1366   001896  22DA               	addwfc	fsr2h,f,c
  1367   001898  0E00               	movlw	0
  1368   00189A  6EDE               	movwf	postinc2,c
  1369   00189C  0E00               	movlw	0
  1370   00189E  6EDD               	movwf	postdec2,c
  1371                           
  1372                           ;proceseusart.c: 10:     disp -> numero3 = 0;
  1373   0018A0  EE20 F005          	lfsr	2,5
  1374   0018A4  5003               	movf	iniciar_struct_usart@disp^0,w,c
  1375   0018A6  26D9               	addwf	fsr2l,f,c
  1376   0018A8  5004               	movf	(iniciar_struct_usart@disp+1)^0,w,c
  1377   0018AA  22DA               	addwfc	fsr2h,f,c
  1378   0018AC  0E00               	movlw	0
  1379   0018AE  6EDE               	movwf	postinc2,c
  1380   0018B0  0E00               	movlw	0
  1381   0018B2  6EDD               	movwf	postdec2,c
  1382                           
  1383                           ;proceseusart.c: 11:     disp -> valor = 0;
  1384   0018B4  0060  F00F  FFD9   	movff	iniciar_struct_usart@disp,fsr2l
  1385   0018BA  0060  F013  FFDA   	movff	iniciar_struct_usart@disp+1,fsr2h
  1386   0018C0  0E00               	movlw	0
  1387   0018C2  6EDF               	movwf	indf2,c
  1388                           
  1389                           ;proceseusart.c: 12:     disp -> recibir_dato_completo = 0;
  1390   0018C4  EE20 F009          	lfsr	2,9
  1391   0018C8  5003               	movf	iniciar_struct_usart@disp^0,w,c
  1392   0018CA  26D9               	addwf	fsr2l,f,c
  1393   0018CC  5004               	movf	(iniciar_struct_usart@disp+1)^0,w,c
  1394   0018CE  22DA               	addwfc	fsr2h,f,c
  1395   0018D0  0E00               	movlw	0
  1396   0018D2  6EDF               	movwf	indf2,c
  1397                           
  1398                           ;proceseusart.c: 13:     disp -> esperar_datos_eusart = 0;
  1399   0018D4  EE20 F00A          	lfsr	2,10
  1400   0018D8  5003               	movf	iniciar_struct_usart@disp^0,w,c
  1401   0018DA  26D9               	addwf	fsr2l,f,c
  1402   0018DC  5004               	movf	(iniciar_struct_usart@disp+1)^0,w,c
  1403   0018DE  22DA               	addwfc	fsr2h,f,c
  1404   0018E0  0E00               	movlw	0
  1405   0018E2  6EDF               	movwf	indf2,c
  1406                           
  1407                           ;proceseusart.c: 14:     disp -> caso = 0;
  1408   0018E4  EE20 F007          	lfsr	2,7
  1409   0018E8  5003               	movf	iniciar_struct_usart@disp^0,w,c
  1410   0018EA  26D9               	addwf	fsr2l,f,c
  1411   0018EC  5004               	movf	(iniciar_struct_usart@disp+1)^0,w,c
  1412   0018EE  22DA               	addwfc	fsr2h,f,c
  1413   0018F0  0E00               	movlw	0
  1414   0018F2  6EDE               	movwf	postinc2,c
  1415   0018F4  0E00               	movlw	0
  1416   0018F6  6EDD               	movwf	postdec2,c
  1417   0018F8  0012               	return		;funcret
  1418   0018FA                     __end_of_iniciar_struct_usart:
  1419                           	callstack 0
  1420                           
  1421 ;; *************** function _enviar_Eusart *****************
  1422 ;; Defined at:
  1423 ;;		line 61 in file "proceseusart.c"
  1424 ;; Parameters:    Size  Location     Type
  1425 ;;  valor           2   11[COMRAM] int 
  1426 ;; Auto vars:     Size  Location     Type
  1427 ;;		None
  1428 ;; Return value:  Size  Location     Type
  1429 ;;                  1    wreg      void 
  1430 ;; Registers used:
  1431 ;;		None
  1432 ;; Tracked objects:
  1433 ;;		On entry : 0/0
  1434 ;;		On exit  : 0/0
  1435 ;;		Unchanged: 0/0
  1436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1437 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1440 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1441 ;;Total ram usage:        2 bytes
  1442 ;; Hardware stack levels used: 1
  1443 ;; Hardware stack levels required when called: 4
  1444 ;; This function calls:
  1445 ;;		Nothing
  1446 ;; This function is called by:
  1447 ;;		_main
  1448 ;; This function uses a non-reentrant model
  1449 ;;
  1450                           
  1451                           	psect	text5
  1452   001CCA                     __ptext5:
  1453                           	callstack 0
  1454   001CCA                     _enviar_Eusart:
  1455                           	callstack 26
  1456                           
  1457                           ;proceseusart.c: 62:     U1TXB = valor;
  1458                           
  1459                           ;incstack = 0
  1460   001CCA  0060  F033  FDEA   	movff	enviar_Eusart@valor,15850	;volatile
  1461   001CD0  0012               	return		;funcret
  1462   001CD2                     __end_of_enviar_Eusart:
  1463                           	callstack 0
  1464                           
  1465 ;; *************** function _dato_recibido_completo *****************
  1466 ;; Defined at:
  1467 ;;		line 72 in file "proceseusart.c"
  1468 ;; Parameters:    Size  Location     Type
  1469 ;;  disp            2    2[COMRAM] PTR struct usart
  1470 ;;		 -> main@disp(11), 
  1471 ;; Auto vars:     Size  Location     Type
  1472 ;;		None
  1473 ;; Return value:  Size  Location     Type
  1474 ;;                  1    wreg      _Bool 
  1475 ;; Registers used:
  1476 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1477 ;; Tracked objects:
  1478 ;;		On entry : 0/0
  1479 ;;		On exit  : 0/0
  1480 ;;		Unchanged: 0/0
  1481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1482 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1483 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1485 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1486 ;;Total ram usage:        2 bytes
  1487 ;; Hardware stack levels used: 1
  1488 ;; Hardware stack levels required when called: 4
  1489 ;; This function calls:
  1490 ;;		Nothing
  1491 ;; This function is called by:
  1492 ;;		_main
  1493 ;; This function uses a non-reentrant model
  1494 ;;
  1495                           
  1496                           	psect	text6
  1497   001C4E                     __ptext6:
  1498                           	callstack 0
  1499   001C4E                     _dato_recibido_completo:
  1500                           	callstack 26
  1501                           
  1502                           ;proceseusart.c: 74:     return disp -> recibir_dato_completo;
  1503                           
  1504                           ;incstack = 0
  1505   001C4E  EE20 F009          	lfsr	2,9
  1506   001C52  5003               	movf	dato_recibido_completo@disp^0,w,c
  1507   001C54  26D9               	addwf	fsr2l,f,c
  1508   001C56  5004               	movf	(dato_recibido_completo@disp+1)^0,w,c
  1509   001C58  22DA               	addwfc	fsr2h,f,c
  1510   001C5A  50DF               	movf	indf2,w,c
  1511   001C5C  0012               	return		;funcret
  1512   001C5E                     __end_of_dato_recibido_completo:
  1513                           	callstack 0
  1514                           
  1515 ;; *************** function _cola_get *****************
  1516 ;; Defined at:
  1517 ;;		line 43 in file "cola.c"
  1518 ;; Parameters:    Size  Location     Type
  1519 ;;  c               2    6[COMRAM] PTR struct eCola
  1520 ;;		 -> main@cola(21), 
  1521 ;; Auto vars:     Size  Location     Type
  1522 ;;  temp            1   10[COMRAM] unsigned char 
  1523 ;; Return value:  Size  Location     Type
  1524 ;;                  1    wreg      unsigned char 
  1525 ;; Registers used:
  1526 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1527 ;; Tracked objects:
  1528 ;;		On entry : 0/0
  1529 ;;		On exit  : 0/0
  1530 ;;		Unchanged: 0/0
  1531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1532 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1533 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1534 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1535 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1536 ;;Total ram usage:        5 bytes
  1537 ;; Hardware stack levels used: 1
  1538 ;; Hardware stack levels required when called: 5
  1539 ;; This function calls:
  1540 ;;		_cola_vacia
  1541 ;; This function is called by:
  1542 ;;		_main
  1543 ;; This function uses a non-reentrant model
  1544 ;;
  1545                           
  1546                           	psect	text7
  1547   00157A                     __ptext7:
  1548                           	callstack 0
  1549   00157A                     _cola_get:
  1550                           	callstack 25
  1551                           
  1552                           ;cola.c: 43: DATOCOLA cola_get(eCola* c);cola.c: 44: {;cola.c: 48:     DATOCOLA temp;;co
      +                          la.c: 49:     if(!cola_vacia(c)){
  1553                           
  1554                           ;incstack = 0
  1555   00157A  C007  F003         	movff	cola_get@c,cola_vacia@c
  1556   00157E  C008  F004         	movff	cola_get@c+1,cola_vacia@c+1
  1557   001582  EC37  F00D         	call	_cola_vacia	;wreg free
  1558   001586  5003               	movf	?_cola_vacia^0,w,c
  1559   001588  1004               	iorwf	(?_cola_vacia+1)^0,w,c
  1560   00158A  A4D8               	btfss	status,2,c
  1561   00158C  D027               	goto	l2921
  1562                           
  1563                           ;cola.c: 50:         temp=c->data[c->salida];
  1564   00158E  EE20 F011          	lfsr	2,17
  1565   001592  5007               	movf	cola_get@c^0,w,c
  1566   001594  26D9               	addwf	fsr2l,f,c
  1567   001596  5008               	movf	(cola_get@c+1)^0,w,c
  1568   001598  22DA               	addwfc	fsr2h,f,c
  1569   00159A  006F FF78  F009    	movff	postinc2,??_cola_get
  1570   0015A0  006F FF74  F00A    	movff	postdec2,??_cola_get+1
  1571   0015A6  5009               	movf	??_cola_get^0,w,c
  1572   0015A8  2407               	addwf	cola_get@c^0,w,c
  1573   0015AA  6ED9               	movwf	fsr2l,c
  1574   0015AC  500A               	movf	(??_cola_get+1)^0,w,c
  1575   0015AE  2008               	addwfc	(cola_get@c+1)^0,w,c
  1576   0015B0  6EDA               	movwf	fsr2h,c
  1577   0015B2  50DF               	movf	indf2,w,c
  1578   0015B4  6E0B               	movwf	cola_get@temp^0,c
  1579                           
  1580                           ;cola.c: 51:         c->salida++;
  1581   0015B6  EE20 F011          	lfsr	2,17
  1582   0015BA  5007               	movf	cola_get@c^0,w,c
  1583   0015BC  26D9               	addwf	fsr2l,f,c
  1584   0015BE  5008               	movf	(cola_get@c+1)^0,w,c
  1585   0015C0  22DA               	addwfc	fsr2h,f,c
  1586   0015C2  2ADE               	incf	postinc2,f,c
  1587   0015C4  0E00               	movlw	0
  1588   0015C6  22DD               	addwfc	postdec2,f,c
  1589                           
  1590                           ;cola.c: 52:         c->peso--;
  1591   0015C8  EE20 F013          	lfsr	2,19
  1592   0015CC  5007               	movf	cola_get@c^0,w,c
  1593   0015CE  26D9               	addwf	fsr2l,f,c
  1594   0015D0  5008               	movf	(cola_get@c+1)^0,w,c
  1595   0015D2  22DA               	addwfc	fsr2h,f,c
  1596   0015D4  06DE               	decf	postinc2,f,c
  1597   0015D6  0E00               	movlw	0
  1598   0015D8  5ADD               	subwfb	postdec2,f,c
  1599                           
  1600                           ;cola.c: 53:     }
  1601   0015DA  D002               	goto	l2925
  1602   0015DC                     l2921:
  1603                           
  1604                           ;cola.c: 55:     {;cola.c: 56:         return 1;
  1605   0015DC  0E01               	movlw	1
  1606   0015DE  0012               	return	
  1607   0015E0                     l2925:
  1608                           
  1609                           ;cola.c: 60:     if (c->salida >=15)
  1610   0015E0  EE20 F011          	lfsr	2,17
  1611   0015E4  5007               	movf	cola_get@c^0,w,c
  1612   0015E6  26D9               	addwf	fsr2l,f,c
  1613   0015E8  5008               	movf	(cola_get@c+1)^0,w,c
  1614   0015EA  22DA               	addwfc	fsr2h,f,c
  1615   0015EC  0E01               	movlw	1
  1616   0015EE  BEDB               	btfsc	plusw2,7,c
  1617   0015F0  D011               	goto	l2929
  1618   0015F2  0E01               	movlw	1
  1619   0015F4  50DB               	movf	plusw2,w,c
  1620   0015F6  E104               	bnz	u1200
  1621   0015F8  0E0F               	movlw	15
  1622   0015FA  5CDE               	subwf	postinc2,w,c
  1623   0015FC  A0D8               	btfss	status,0,c
  1624   0015FE  D00A               	goto	l2929
  1625   001600                     u1200:
  1626                           
  1627                           ;cola.c: 61:         c->salida=0;
  1628   001600  EE20 F011          	lfsr	2,17
  1629   001604  5007               	movf	cola_get@c^0,w,c
  1630   001606  26D9               	addwf	fsr2l,f,c
  1631   001608  5008               	movf	(cola_get@c+1)^0,w,c
  1632   00160A  22DA               	addwfc	fsr2h,f,c
  1633   00160C  0E00               	movlw	0
  1634   00160E  6EDE               	movwf	postinc2,c
  1635   001610  0E00               	movlw	0
  1636   001612  6EDD               	movwf	postdec2,c
  1637   001614                     l2929:
  1638                           
  1639                           ;cola.c: 62:     return temp;
  1640   001614  500B               	movf	cola_get@temp^0,w,c
  1641   001616  0012               	return		;funcret
  1642   001618                     __end_of_cola_get:
  1643                           	callstack 0
  1644                           
  1645 ;; *************** function _cola_vacia *****************
  1646 ;; Defined at:
  1647 ;;		line 85 in file "cola.c"
  1648 ;; Parameters:    Size  Location     Type
  1649 ;;  c               2    2[COMRAM] PTR struct eCola
  1650 ;;		 -> main@cola(21), 
  1651 ;; Auto vars:     Size  Location     Type
  1652 ;;		None
  1653 ;; Return value:  Size  Location     Type
  1654 ;;                  2    2[COMRAM] int 
  1655 ;; Registers used:
  1656 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1657 ;; Tracked objects:
  1658 ;;		On entry : 0/0
  1659 ;;		On exit  : 0/0
  1660 ;;		Unchanged: 0/0
  1661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1662 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1664 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1665 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1666 ;;Total ram usage:        4 bytes
  1667 ;; Hardware stack levels used: 1
  1668 ;; Hardware stack levels required when called: 4
  1669 ;; This function calls:
  1670 ;;		Nothing
  1671 ;; This function is called by:
  1672 ;;		_main
  1673 ;;		_cola_get
  1674 ;; This function uses a non-reentrant model
  1675 ;;
  1676                           
  1677                           	psect	text8
  1678   001A6E                     __ptext8:
  1679                           	callstack 0
  1680   001A6E                     _cola_vacia:
  1681                           	callstack 26
  1682                           
  1683                           ;cola.c: 85: int cola_vacia(eCola* c);cola.c: 86: {;cola.c: 87:     if (c->peso<=0){
  1684                           
  1685                           ;incstack = 0
  1686   001A6E  EE20 F013          	lfsr	2,19
  1687   001A72  5003               	movf	cola_vacia@c^0,w,c
  1688   001A74  26D9               	addwf	fsr2l,f,c
  1689   001A76  5004               	movf	(cola_vacia@c+1)^0,w,c
  1690   001A78  22DA               	addwfc	fsr2h,f,c
  1691   001A7A  0E01               	movlw	1
  1692   001A7C  BEDB               	btfsc	plusw2,7,c
  1693   001A7E  D006               	goto	u1040
  1694   001A80  0E01               	movlw	1
  1695   001A82  50DB               	movf	plusw2,w,c
  1696   001A84  E108               	bnz	l2783
  1697   001A86  04DE               	decf	postinc2,w,c
  1698   001A88  B0D8               	btfsc	status,0,c
  1699   001A8A  D005               	goto	l2783
  1700   001A8C                     u1040:
  1701                           
  1702                           ;cola.c: 88:         return 1;
  1703   001A8C  0E00               	movlw	0
  1704   001A8E  6E04               	movwf	(?_cola_vacia+1)^0,c
  1705   001A90  0E01               	movlw	1
  1706   001A92  6E03               	movwf	?_cola_vacia^0,c
  1707   001A94  0012               	return	
  1708   001A96                     l2783:
  1709                           
  1710                           ;cola.c: 91:         return 0;
  1711   001A96  0E00               	movlw	0
  1712   001A98  6E04               	movwf	(?_cola_vacia+1)^0,c
  1713   001A9A  0E00               	movlw	0
  1714   001A9C  6E03               	movwf	?_cola_vacia^0,c
  1715   001A9E  0012               	return		;funcret
  1716   001AA0                     __end_of_cola_vacia:
  1717                           	callstack 0
  1718                           
  1719 ;; *************** function _cola_add *****************
  1720 ;; Defined at:
  1721 ;;		line 18 in file "cola.c"
  1722 ;; Parameters:    Size  Location     Type
  1723 ;;  c               2    6[COMRAM] PTR struct eCola
  1724 ;;		 -> main@cola(21), 
  1725 ;;  dato            1    8[COMRAM] unsigned char 
  1726 ;; Auto vars:     Size  Location     Type
  1727 ;;		None
  1728 ;; Return value:  Size  Location     Type
  1729 ;;                  1    wreg      unsigned char 
  1730 ;; Registers used:
  1731 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1732 ;; Tracked objects:
  1733 ;;		On entry : 0/0
  1734 ;;		On exit  : 0/0
  1735 ;;		Unchanged: 0/0
  1736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1737 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1739 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1740 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1741 ;;Total ram usage:        5 bytes
  1742 ;; Hardware stack levels used: 1
  1743 ;; Hardware stack levels required when called: 5
  1744 ;; This function calls:
  1745 ;;		_cola_llena
  1746 ;; This function is called by:
  1747 ;;		_main
  1748 ;; This function uses a non-reentrant model
  1749 ;;
  1750                           
  1751                           	psect	text9
  1752   0016B6                     __ptext9:
  1753                           	callstack 0
  1754   0016B6                     _cola_add:
  1755                           	callstack 25
  1756                           
  1757                           ;cola.c: 18: char cola_add(eCola* c,DATOCOLA dato);cola.c: 19: {;cola.c: 24:     if(!col
      +                          a_llena(c)){
  1758                           
  1759                           ;incstack = 0
  1760   0016B6  C007  F003         	movff	cola_add@c,cola_llena@c
  1761   0016BA  C008  F004         	movff	cola_add@c+1,cola_llena@c+1
  1762   0016BE  EC1D  F00D         	call	_cola_llena	;wreg free
  1763   0016C2  5003               	movf	?_cola_llena^0,w,c
  1764   0016C4  1004               	iorwf	(?_cola_llena+1)^0,w,c
  1765   0016C6  A4D8               	btfss	status,2,c
  1766   0016C8  0012               	return	
  1767                           
  1768                           ;cola.c: 25:         c->data[c->entrada]=dato;
  1769   0016CA  EE20 F00F          	lfsr	2,15
  1770   0016CE  5007               	movf	cola_add@c^0,w,c
  1771   0016D0  26D9               	addwf	fsr2l,f,c
  1772   0016D2  5008               	movf	(cola_add@c+1)^0,w,c
  1773   0016D4  22DA               	addwfc	fsr2h,f,c
  1774   0016D6  006F FF78  F00A    	movff	postinc2,??_cola_add
  1775   0016DC  006F FF74  F00B    	movff	postdec2,??_cola_add+1
  1776   0016E2  500A               	movf	??_cola_add^0,w,c
  1777   0016E4  2407               	addwf	cola_add@c^0,w,c
  1778   0016E6  6ED9               	movwf	fsr2l,c
  1779   0016E8  500B               	movf	(??_cola_add+1)^0,w,c
  1780   0016EA  2008               	addwfc	(cola_add@c+1)^0,w,c
  1781   0016EC  6EDA               	movwf	fsr2h,c
  1782   0016EE  0060  F027  FFDF   	movff	cola_add@dato,indf2
  1783                           
  1784                           ;cola.c: 26:         c->entrada++;
  1785   0016F4  EE20 F00F          	lfsr	2,15
  1786   0016F8  5007               	movf	cola_add@c^0,w,c
  1787   0016FA  26D9               	addwf	fsr2l,f,c
  1788   0016FC  5008               	movf	(cola_add@c+1)^0,w,c
  1789   0016FE  22DA               	addwfc	fsr2h,f,c
  1790   001700  2ADE               	incf	postinc2,f,c
  1791   001702  0E00               	movlw	0
  1792   001704  22DD               	addwfc	postdec2,f,c
  1793                           
  1794                           ;cola.c: 27:         c->peso++;
  1795   001706  EE20 F013          	lfsr	2,19
  1796   00170A  5007               	movf	cola_add@c^0,w,c
  1797   00170C  26D9               	addwf	fsr2l,f,c
  1798   00170E  5008               	movf	(cola_add@c+1)^0,w,c
  1799   001710  22DA               	addwfc	fsr2h,f,c
  1800   001712  2ADE               	incf	postinc2,f,c
  1801   001714  0E00               	movlw	0
  1802   001716  22DD               	addwfc	postdec2,f,c
  1803                           
  1804                           ;cola.c: 35:     if (c->entrada >=15)
  1805                           
  1806                           ;cola.c: 28:     }
  1807   001718  EE20 F00F          	lfsr	2,15
  1808   00171C  5007               	movf	cola_add@c^0,w,c
  1809   00171E  26D9               	addwf	fsr2l,f,c
  1810   001720  5008               	movf	(cola_add@c+1)^0,w,c
  1811   001722  22DA               	addwfc	fsr2h,f,c
  1812   001724  0E01               	movlw	1
  1813   001726  BEDB               	btfsc	plusw2,7,c
  1814   001728  0012               	return	
  1815   00172A  0E01               	movlw	1
  1816   00172C  50DB               	movf	plusw2,w,c
  1817   00172E  E104               	bnz	u1180
  1818   001730  0E0F               	movlw	15
  1819   001732  5CDE               	subwf	postinc2,w,c
  1820   001734  A0D8               	btfss	status,0,c
  1821   001736  0012               	return	
  1822   001738                     u1180:
  1823                           
  1824                           ;cola.c: 36:         c->entrada=0;
  1825   001738  EE20 F00F          	lfsr	2,15
  1826   00173C  5007               	movf	cola_add@c^0,w,c
  1827   00173E  26D9               	addwf	fsr2l,f,c
  1828   001740  5008               	movf	(cola_add@c+1)^0,w,c
  1829   001742  22DA               	addwfc	fsr2h,f,c
  1830   001744  0E00               	movlw	0
  1831   001746  6EDE               	movwf	postinc2,c
  1832   001748  0E00               	movlw	0
  1833   00174A  6EDD               	movwf	postdec2,c
  1834   00174C  0012               	return		;funcret
  1835   00174E                     __end_of_cola_add:
  1836                           	callstack 0
  1837                           
  1838 ;; *************** function _cola_llena *****************
  1839 ;; Defined at:
  1840 ;;		line 75 in file "cola.c"
  1841 ;; Parameters:    Size  Location     Type
  1842 ;;  c               2    2[COMRAM] PTR struct eCola
  1843 ;;		 -> main@cola(21), 
  1844 ;; Auto vars:     Size  Location     Type
  1845 ;;		None
  1846 ;; Return value:  Size  Location     Type
  1847 ;;                  2    2[COMRAM] int 
  1848 ;; Registers used:
  1849 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1850 ;; Tracked objects:
  1851 ;;		On entry : 0/0
  1852 ;;		On exit  : 0/0
  1853 ;;		Unchanged: 0/0
  1854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1855 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1857 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1858 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1859 ;;Total ram usage:        4 bytes
  1860 ;; Hardware stack levels used: 1
  1861 ;; Hardware stack levels required when called: 4
  1862 ;; This function calls:
  1863 ;;		Nothing
  1864 ;; This function is called by:
  1865 ;;		_cola_add
  1866 ;; This function uses a non-reentrant model
  1867 ;;
  1868                           
  1869                           	psect	text10
  1870   001A3A                     __ptext10:
  1871                           	callstack 0
  1872   001A3A                     _cola_llena:
  1873                           	callstack 25
  1874                           
  1875                           ;cola.c: 76:     if (c->peso>=15){
  1876                           
  1877                           ;incstack = 0
  1878   001A3A  EE20 F013          	lfsr	2,19
  1879   001A3E  5003               	movf	cola_llena@c^0,w,c
  1880   001A40  26D9               	addwf	fsr2l,f,c
  1881   001A42  5004               	movf	(cola_llena@c+1)^0,w,c
  1882   001A44  22DA               	addwfc	fsr2h,f,c
  1883   001A46  0E01               	movlw	1
  1884   001A48  BEDB               	btfsc	plusw2,7,c
  1885   001A4A  D00C               	goto	l2795
  1886   001A4C  0E01               	movlw	1
  1887   001A4E  50DB               	movf	plusw2,w,c
  1888   001A50  E104               	bnz	u1050
  1889   001A52  0E0F               	movlw	15
  1890   001A54  5CDE               	subwf	postinc2,w,c
  1891   001A56  A0D8               	btfss	status,0,c
  1892   001A58  D005               	goto	l2795
  1893   001A5A                     u1050:
  1894                           
  1895                           ;cola.c: 77:         return 1;
  1896   001A5A  0E00               	movlw	0
  1897   001A5C  6E04               	movwf	(?_cola_llena+1)^0,c
  1898   001A5E  0E01               	movlw	1
  1899   001A60  6E03               	movwf	?_cola_llena^0,c
  1900   001A62  0012               	return	
  1901   001A64                     l2795:
  1902                           
  1903                           ;cola.c: 80:         return 0;
  1904   001A64  0E00               	movlw	0
  1905   001A66  6E04               	movwf	(?_cola_llena+1)^0,c
  1906   001A68  0E00               	movlw	0
  1907   001A6A  6E03               	movwf	?_cola_llena^0,c
  1908   001A6C  0012               	return		;funcret
  1909   001A6E                     __end_of_cola_llena:
  1910                           	callstack 0
  1911                           
  1912 ;; *************** function _actualize_valor *****************
  1913 ;; Defined at:
  1914 ;;		line 29 in file "processpi.c"
  1915 ;; Parameters:    Size  Location     Type
  1916 ;;  spi             2    2[COMRAM] PTR struct structspi
  1917 ;;		 -> main@spi(12), 
  1918 ;;  valorspi        2    4[COMRAM] unsigned int 
  1919 ;; Auto vars:     Size  Location     Type
  1920 ;;		None
  1921 ;; Return value:  Size  Location     Type
  1922 ;;                  1    wreg      void 
  1923 ;; Registers used:
  1924 ;;		fsr2l, fsr2h
  1925 ;; Tracked objects:
  1926 ;;		On entry : 0/0
  1927 ;;		On exit  : 0/0
  1928 ;;		Unchanged: 0/0
  1929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1930 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1933 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1934 ;;Total ram usage:        4 bytes
  1935 ;; Hardware stack levels used: 1
  1936 ;; Hardware stack levels required when called: 4
  1937 ;; This function calls:
  1938 ;;		Nothing
  1939 ;; This function is called by:
  1940 ;;		_main
  1941 ;; This function uses a non-reentrant model
  1942 ;;
  1943                           
  1944                           	psect	text11
  1945   001BC8                     __ptext11:
  1946                           	callstack 0
  1947   001BC8                     _actualize_valor:
  1948                           	callstack 26
  1949                           
  1950                           ;processpi.c: 30:     spi -> valor = valorspi;
  1951                           
  1952                           ;incstack = 0
  1953   001BC8  0060  F00F  FFD9   	movff	actualize_valor@spi,fsr2l
  1954   001BCE  0060  F013  FFDA   	movff	actualize_valor@spi+1,fsr2h
  1955   001BD4  0060  F017  FFDE   	movff	actualize_valor@valorspi,postinc2
  1956   001BDA  0060  F01B  FFDD   	movff	actualize_valor@valorspi+1,postdec2
  1957   001BE0  0012               	return		;funcret
  1958   001BE2                     __end_of_actualize_valor:
  1959                           	callstack 0
  1960                           
  1961 ;; *************** function _actualizar_recibido_Eusart *****************
  1962 ;; Defined at:
  1963 ;;		line 79 in file "proceseusart.c"
  1964 ;; Parameters:    Size  Location     Type
  1965 ;;  disp            2    8[COMRAM] PTR struct usart
  1966 ;;		 -> main@disp(11), 
  1967 ;; Auto vars:     Size  Location     Type
  1968 ;;		None
  1969 ;; Return value:  Size  Location     Type
  1970 ;;                  2    8[COMRAM] int 
  1971 ;; Registers used:
  1972 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1973 ;; Tracked objects:
  1974 ;;		On entry : 0/0
  1975 ;;		On exit  : 0/0
  1976 ;;		Unchanged: 0/0
  1977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1978 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1980 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1981 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1982 ;;Total ram usage:       10 bytes
  1983 ;; Hardware stack levels used: 1
  1984 ;; Hardware stack levels required when called: 5
  1985 ;; This function calls:
  1986 ;;		___wmul
  1987 ;; This function is called by:
  1988 ;;		_main
  1989 ;; This function uses a non-reentrant model
  1990 ;;
  1991                           
  1992                           	psect	text12
  1993   001618                     __ptext12:
  1994                           	callstack 0
  1995   001618                     _actualizar_recibido_Eusart:
  1996                           	callstack 25
  1997                           
  1998                           ;proceseusart.c: 80:     disp -> recibir_dato_completo = 0;
  1999                           
  2000                           ;incstack = 0
  2001   001618  EE20 F009          	lfsr	2,9
  2002   00161C  5009               	movf	actualizar_recibido_Eusart@disp^0,w,c
  2003   00161E  26D9               	addwf	fsr2l,f,c
  2004   001620  500A               	movf	(actualizar_recibido_Eusart@disp+1)^0,w,c
  2005   001622  22DA               	addwfc	fsr2h,f,c
  2006   001624  0E00               	movlw	0
  2007   001626  6EDF               	movwf	indf2,c
  2008                           
  2009                           ;proceseusart.c: 81:     return ((disp -> numero1 - 48)*100 + (disp -> numero2 - 48)*10 
      +                          + (disp -> numero3 - 48));
  2010   001628  EE20 F005          	lfsr	2,5
  2011   00162C  5009               	movf	actualizar_recibido_Eusart@disp^0,w,c
  2012   00162E  26D9               	addwf	fsr2l,f,c
  2013   001630  500A               	movf	(actualizar_recibido_Eusart@disp+1)^0,w,c
  2014   001632  22DA               	addwfc	fsr2h,f,c
  2015   001634  006F FF78  F00B    	movff	postinc2,??_actualizar_recibido_Eusart
  2016   00163A  006F FF74  F00C    	movff	postdec2,??_actualizar_recibido_Eusart+1
  2017   001640  EE20 F001          	lfsr	2,1
  2018   001644  5009               	movf	actualizar_recibido_Eusart@disp^0,w,c
  2019   001646  26D9               	addwf	fsr2l,f,c
  2020   001648  500A               	movf	(actualizar_recibido_Eusart@disp+1)^0,w,c
  2021   00164A  22DA               	addwfc	fsr2h,f,c
  2022   00164C  006F FF78  F003    	movff	postinc2,___wmul@multiplier
  2023   001652  006F FF74  F004    	movff	postdec2,___wmul@multiplier+1
  2024   001658  0E00               	movlw	0
  2025   00165A  6E06               	movwf	(___wmul@multiplicand+1)^0,c
  2026   00165C  0E64               	movlw	100
  2027   00165E  6E05               	movwf	___wmul@multiplicand^0,c
  2028   001660  EC7C  F00D         	call	___wmul	;wreg free
  2029   001664  C003  F00D         	movff	?___wmul,??_actualizar_recibido_Eusart+2
  2030   001668  C004  F00E         	movff	?___wmul+1,??_actualizar_recibido_Eusart+3
  2031   00166C  EE20 F003          	lfsr	2,3
  2032   001670  5009               	movf	actualizar_recibido_Eusart@disp^0,w,c
  2033   001672  26D9               	addwf	fsr2l,f,c
  2034   001674  500A               	movf	(actualizar_recibido_Eusart@disp+1)^0,w,c
  2035   001676  22DA               	addwfc	fsr2h,f,c
  2036   001678  006F FF78  F003    	movff	postinc2,___wmul@multiplier
  2037   00167E  006F FF74  F004    	movff	postdec2,___wmul@multiplier+1
  2038   001684  0E00               	movlw	0
  2039   001686  6E06               	movwf	(___wmul@multiplicand+1)^0,c
  2040   001688  0E0A               	movlw	10
  2041   00168A  6E05               	movwf	___wmul@multiplicand^0,c
  2042   00168C  EC7C  F00D         	call	___wmul	;wreg free
  2043   001690  5003               	movf	?___wmul^0,w,c
  2044   001692  240D               	addwf	(??_actualizar_recibido_Eusart+2)^0,w,c
  2045   001694  6E0F               	movwf	(??_actualizar_recibido_Eusart+4)^0,c
  2046   001696  5004               	movf	(?___wmul+1)^0,w,c
  2047   001698  200E               	addwfc	(??_actualizar_recibido_Eusart+3)^0,w,c
  2048   00169A  6E10               	movwf	(??_actualizar_recibido_Eusart+5)^0,c
  2049   00169C  500B               	movf	??_actualizar_recibido_Eusart^0,w,c
  2050   00169E  240F               	addwf	(??_actualizar_recibido_Eusart+4)^0,w,c
  2051   0016A0  6E11               	movwf	(??_actualizar_recibido_Eusart+6)^0,c
  2052   0016A2  500C               	movf	(??_actualizar_recibido_Eusart+1)^0,w,c
  2053   0016A4  2010               	addwfc	(??_actualizar_recibido_Eusart+5)^0,w,c
  2054   0016A6  6E12               	movwf	(??_actualizar_recibido_Eusart+7)^0,c
  2055   0016A8  0E30               	movlw	48
  2056   0016AA  2411               	addwf	(??_actualizar_recibido_Eusart+6)^0,w,c
  2057   0016AC  6E09               	movwf	?_actualizar_recibido_Eusart^0,c
  2058   0016AE  0EEB               	movlw	235
  2059   0016B0  2012               	addwfc	(??_actualizar_recibido_Eusart+7)^0,w,c
  2060   0016B2  6E0A               	movwf	(?_actualizar_recibido_Eusart+1)^0,c
  2061   0016B4  0012               	return		;funcret
  2062   0016B6                     __end_of_actualizar_recibido_Eusart:
  2063                           	callstack 0
  2064                           
  2065 ;; *************** function ___wmul *****************
  2066 ;; Defined at:
  2067 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  2068 ;; Parameters:    Size  Location     Type
  2069 ;;  multiplier      2    2[COMRAM] unsigned int 
  2070 ;;  multiplicand    2    4[COMRAM] unsigned int 
  2071 ;; Auto vars:     Size  Location     Type
  2072 ;;  product         2    6[COMRAM] unsigned int 
  2073 ;; Return value:  Size  Location     Type
  2074 ;;                  2    2[COMRAM] unsigned int 
  2075 ;; Registers used:
  2076 ;;		wreg, status,2, status,0, prodl, prodh
  2077 ;; Tracked objects:
  2078 ;;		On entry : 0/0
  2079 ;;		On exit  : 0/0
  2080 ;;		Unchanged: 0/0
  2081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2082 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2083 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2085 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2086 ;;Total ram usage:        6 bytes
  2087 ;; Hardware stack levels used: 1
  2088 ;; Hardware stack levels required when called: 4
  2089 ;; This function calls:
  2090 ;;		Nothing
  2091 ;; This function is called by:
  2092 ;;		_actualizar_recibido_Eusart
  2093 ;; This function uses a non-reentrant model
  2094 ;;
  2095                           
  2096                           	psect	text13
  2097   001AF8                     __ptext13:
  2098                           	callstack 0
  2099   001AF8                     ___wmul:
  2100                           	callstack 25
  2101                           
  2102                           ;incstack = 0
  2103   001AF8  5003               	movf	___wmul@multiplier^0,w,c
  2104   001AFA  0205               	mulwf	___wmul@multiplicand^0,c
  2105   001AFC  006F FFCC  F007    	movff	prodl,___wmul@product
  2106   001B02  006F FFD0  F008    	movff	prodh,___wmul@product+1
  2107   001B08  5003               	movf	___wmul@multiplier^0,w,c
  2108   001B0A  0206               	mulwf	(___wmul@multiplicand+1)^0,c
  2109   001B0C  50F3               	movf	243,w,c
  2110   001B0E  2608               	addwf	(___wmul@product+1)^0,f,c
  2111   001B10  5004               	movf	(___wmul@multiplier+1)^0,w,c
  2112   001B12  0205               	mulwf	___wmul@multiplicand^0,c
  2113   001B14  50F3               	movf	243,w,c
  2114   001B16  2608               	addwf	(___wmul@product+1)^0,f,c
  2115   001B18  C007  F003         	movff	___wmul@product,?___wmul
  2116   001B1C  C008  F004         	movff	___wmul@product+1,?___wmul+1
  2117   001B20  0012               	return		;funcret
  2118   001B22                     __end_of___wmul:
  2119                           	callstack 0
  2120                           
  2121 ;; *************** function _UART1_is_tx_ready *****************
  2122 ;; Defined at:
  2123 ;;		line 165 in file "mcc_generated_files/uart1.c"
  2124 ;; Parameters:    Size  Location     Type
  2125 ;;		None
  2126 ;; Auto vars:     Size  Location     Type
  2127 ;;		None
  2128 ;; Return value:  Size  Location     Type
  2129 ;;                  1    wreg      _Bool 
  2130 ;; Registers used:
  2131 ;;		wreg, status,2
  2132 ;; Tracked objects:
  2133 ;;		On entry : 0/0
  2134 ;;		On exit  : 0/0
  2135 ;;		Unchanged: 0/0
  2136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2140 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2141 ;;Total ram usage:        0 bytes
  2142 ;; Hardware stack levels used: 1
  2143 ;; Hardware stack levels required when called: 4
  2144 ;; This function calls:
  2145 ;;		Nothing
  2146 ;; This function is called by:
  2147 ;;		_main
  2148 ;; This function uses a non-reentrant model
  2149 ;;
  2150                           
  2151                           	psect	text14
  2152   001C6E                     __ptext14:
  2153                           	callstack 0
  2154   001C6E                     _UART1_is_tx_ready:
  2155                           	callstack 26
  2156                           
  2157                           ;mcc_generated_files/uart1.c: 167:     return (uart1TxBufferRemaining ? 1 : 0);
  2158                           
  2159                           ;incstack = 0
  2160   001C6E  502A               	movf	_uart1TxBufferRemaining^0,w,c	;volatile
  2161   001C70  B4D8               	btfsc	status,2,c
  2162   001C72  D002               	goto	u1120
  2163   001C74  0E01               	movlw	1
  2164   001C76  0012               	return	
  2165   001C78                     u1120:
  2166   001C78  0E00               	movlw	0
  2167   001C7A  0012               	return		;funcret
  2168   001C7C                     __end_of_UART1_is_tx_ready:
  2169                           	callstack 0
  2170                           
  2171 ;; *************** function _UART1_is_rx_ready *****************
  2172 ;; Defined at:
  2173 ;;		line 160 in file "mcc_generated_files/uart1.c"
  2174 ;; Parameters:    Size  Location     Type
  2175 ;;		None
  2176 ;; Auto vars:     Size  Location     Type
  2177 ;;		None
  2178 ;; Return value:  Size  Location     Type
  2179 ;;                  1    wreg      _Bool 
  2180 ;; Registers used:
  2181 ;;		wreg, status,2
  2182 ;; Tracked objects:
  2183 ;;		On entry : 0/0
  2184 ;;		On exit  : 0/0
  2185 ;;		Unchanged: 0/0
  2186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2190 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2191 ;;Total ram usage:        0 bytes
  2192 ;; Hardware stack levels used: 1
  2193 ;; Hardware stack levels required when called: 4
  2194 ;; This function calls:
  2195 ;;		Nothing
  2196 ;; This function is called by:
  2197 ;;		_main
  2198 ;; This function uses a non-reentrant model
  2199 ;;
  2200                           
  2201                           	psect	text15
  2202   001C7C                     __ptext15:
  2203                           	callstack 0
  2204   001C7C                     _UART1_is_rx_ready:
  2205                           	callstack 26
  2206                           
  2207                           ;mcc_generated_files/uart1.c: 162:     return (uart1RxCount ? 1 : 0);
  2208                           
  2209                           ;incstack = 0
  2210   001C7C  5027               	movf	_uart1RxCount^0,w,c	;volatile
  2211   001C7E  B4D8               	btfsc	status,2,c
  2212   001C80  D002               	goto	u1100
  2213   001C82  0E01               	movlw	1
  2214   001C84  0012               	return	
  2215   001C86                     u1100:
  2216   001C86  0E00               	movlw	0
  2217   001C88  0012               	return		;funcret
  2218   001C8A                     __end_of_UART1_is_rx_ready:
  2219                           	callstack 0
  2220                           
  2221 ;; *************** function _Tm_Procese_tiempo *****************
  2222 ;; Defined at:
  2223 ;;		line 33 in file "nuestrostimers.c"
  2224 ;; Parameters:    Size  Location     Type
  2225 ;;  ctp             2    2[COMRAM] PTR struct Tm_Periodico
  2226 ;;		 -> main@timer(7), 
  2227 ;; Auto vars:     Size  Location     Type
  2228 ;;		None
  2229 ;; Return value:  Size  Location     Type
  2230 ;;                  1    wreg      void 
  2231 ;; Registers used:
  2232 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2233 ;; Tracked objects:
  2234 ;;		On entry : 0/0
  2235 ;;		On exit  : 0/0
  2236 ;;		Unchanged: 0/0
  2237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2238 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2240 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2241 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2242 ;;Total ram usage:        6 bytes
  2243 ;; Hardware stack levels used: 1
  2244 ;; Hardware stack levels required when called: 4
  2245 ;; This function calls:
  2246 ;;		Nothing
  2247 ;; This function is called by:
  2248 ;;		_main
  2249 ;; This function uses a non-reentrant model
  2250 ;;
  2251                           
  2252                           	psect	text16
  2253   001378                     __ptext16:
  2254                           	callstack 0
  2255   001378                     _Tm_Procese_tiempo:
  2256                           	callstack 26
  2257                           
  2258                           ;nuestrostimers.c: 33: void Tm_Procese_tiempo (Tm_Periodico *ctp);nuestrostimers.c: 35: 
      +                          {;nuestrostimers.c: 41:  if (ctp->banderas & 0x01U)
  2259                           
  2260                           ;incstack = 0
  2261   001378  EE20 F006          	lfsr	2,6
  2262   00137C  5003               	movf	Tm_Procese_tiempo@ctp^0,w,c
  2263   00137E  26D9               	addwf	fsr2l,f,c
  2264   001380  5004               	movf	(Tm_Procese_tiempo@ctp+1)^0,w,c
  2265   001382  22DA               	addwfc	fsr2h,f,c
  2266   001384  A0DF               	btfss	indf2,0,c
  2267   001386  D02D               	goto	l2897
  2268                           
  2269                           ;nuestrostimers.c: 43:  {;nuestrostimers.c: 45:   --(ctp->contador);
  2270   001388  0060  F00F  FFD9   	movff	Tm_Procese_tiempo@ctp,fsr2l
  2271   00138E  0060  F013  FFDA   	movff	Tm_Procese_tiempo@ctp+1,fsr2h
  2272   001394  06DE               	decf	postinc2,f,c
  2273   001396  0E00               	movlw	0
  2274   001398  5ADD               	subwfb	postdec2,f,c
  2275                           
  2276                           ;nuestrostimers.c: 47:   if ( !(ctp->contador) )
  2277   00139A  0060  F00F  FFD9   	movff	Tm_Procese_tiempo@ctp,fsr2l
  2278   0013A0  0060  F013  FFDA   	movff	Tm_Procese_tiempo@ctp+1,fsr2h
  2279   0013A6  50DE               	movf	postinc2,w,c
  2280   0013A8  10DE               	iorwf	postinc2,w,c
  2281   0013AA  A4D8               	btfss	status,2,c
  2282   0013AC  D01A               	goto	l2897
  2283                           
  2284                           ;nuestrostimers.c: 49:   {;nuestrostimers.c: 51:    ctp->banderas |= 0x02U;
  2285   0013AE  EE20 F006          	lfsr	2,6
  2286   0013B2  5003               	movf	Tm_Procese_tiempo@ctp^0,w,c
  2287   0013B4  26D9               	addwf	fsr2l,f,c
  2288   0013B6  5004               	movf	(Tm_Procese_tiempo@ctp+1)^0,w,c
  2289   0013B8  22DA               	addwfc	fsr2h,f,c
  2290   0013BA  0E00               	movlw	0
  2291   0013BC  82DB               	bsf	plusw2,1,c
  2292                           
  2293                           ;nuestrostimers.c: 53:    ctp->contador = ctp->periodo;
  2294   0013BE  EE20 F002          	lfsr	2,2
  2295   0013C2  5003               	movf	Tm_Procese_tiempo@ctp^0,w,c
  2296   0013C4  26D9               	addwf	fsr2l,f,c
  2297   0013C6  5004               	movf	(Tm_Procese_tiempo@ctp+1)^0,w,c
  2298   0013C8  22DA               	addwfc	fsr2h,f,c
  2299   0013CA  0060  F00F  FFE1   	movff	Tm_Procese_tiempo@ctp,fsr1l
  2300   0013D0  0060  F013  FFE2   	movff	Tm_Procese_tiempo@ctp+1,fsr1h
  2301   0013D6  006F FF7B FFE6     	movff	postinc2,postinc1
  2302   0013DC  006F FF77 FFE5     	movff	postdec2,postdec1
  2303   0013E2                     l2897:
  2304                           
  2305                           ;nuestrostimers.c: 59:  if (ctp->banderas & 0x04U)
  2306   0013E2  EE20 F006          	lfsr	2,6
  2307   0013E6  5003               	movf	Tm_Procese_tiempo@ctp^0,w,c
  2308   0013E8  26D9               	addwf	fsr2l,f,c
  2309   0013EA  5004               	movf	(Tm_Procese_tiempo@ctp+1)^0,w,c
  2310   0013EC  22DA               	addwfc	fsr2h,f,c
  2311   0013EE  A4DF               	btfss	indf2,2,c
  2312   0013F0  0012               	return	
  2313                           
  2314                           ;nuestrostimers.c: 61:  ctp->timeout=ctp->timeout-1;
  2315   0013F2  EE20 F004          	lfsr	2,4
  2316   0013F6  5003               	movf	Tm_Procese_tiempo@ctp^0,w,c
  2317   0013F8  26D9               	addwf	fsr2l,f,c
  2318   0013FA  5004               	movf	(Tm_Procese_tiempo@ctp+1)^0,w,c
  2319   0013FC  22DA               	addwfc	fsr2h,f,c
  2320   0013FE  006F FF78  F005    	movff	postinc2,??_Tm_Procese_tiempo
  2321   001404  006F FF74  F006    	movff	postdec2,??_Tm_Procese_tiempo+1
  2322   00140A  0EFF               	movlw	255
  2323   00140C  2405               	addwf	??_Tm_Procese_tiempo^0,w,c
  2324   00140E  6E07               	movwf	(??_Tm_Procese_tiempo+2)^0,c
  2325   001410  0EFF               	movlw	255
  2326   001412  2006               	addwfc	(??_Tm_Procese_tiempo+1)^0,w,c
  2327   001414  6E08               	movwf	(??_Tm_Procese_tiempo+3)^0,c
  2328   001416  EE20 F004          	lfsr	2,4
  2329   00141A  5003               	movf	Tm_Procese_tiempo@ctp^0,w,c
  2330   00141C  26D9               	addwf	fsr2l,f,c
  2331   00141E  5004               	movf	(Tm_Procese_tiempo@ctp+1)^0,w,c
  2332   001420  22DA               	addwfc	fsr2h,f,c
  2333   001422  0060  F01F  FFDE   	movff	??_Tm_Procese_tiempo+2,postinc2
  2334   001428  0060  F023  FFDD   	movff	??_Tm_Procese_tiempo+3,postdec2
  2335   00142E  0012               	return		;funcret
  2336   001430                     __end_of_Tm_Procese_tiempo:
  2337                           	callstack 0
  2338                           
  2339 ;; *************** function _Tm_Inicie_periodico *****************
  2340 ;; Defined at:
  2341 ;;		line 21 in file "nuestrostimers.c"
  2342 ;; Parameters:    Size  Location     Type
  2343 ;;  ctp             2   18[COMRAM] PTR struct Tm_Periodico
  2344 ;;		 -> main@timer(7), 
  2345 ;;  periodo         2   20[COMRAM] unsigned int 
  2346 ;; Auto vars:     Size  Location     Type
  2347 ;;		None
  2348 ;; Return value:  Size  Location     Type
  2349 ;;                  1    wreg      void 
  2350 ;; Registers used:
  2351 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2352 ;; Tracked objects:
  2353 ;;		On entry : 0/0
  2354 ;;		On exit  : 0/0
  2355 ;;		Unchanged: 0/0
  2356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2357 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2360 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2361 ;;Total ram usage:        4 bytes
  2362 ;; Hardware stack levels used: 1
  2363 ;; Hardware stack levels required when called: 4
  2364 ;; This function calls:
  2365 ;;		Nothing
  2366 ;; This function is called by:
  2367 ;;		_main
  2368 ;; This function uses a non-reentrant model
  2369 ;;
  2370                           
  2371                           	psect	text17
  2372   0019AA                     __ptext17:
  2373                           	callstack 0
  2374   0019AA                     _Tm_Inicie_periodico:
  2375                           	callstack 26
  2376                           
  2377                           ;nuestrostimers.c: 21: void Tm_Inicie_periodico (Tm_Periodico *ctp,unsigned int periodo)
      +                          ;nuestrostimers.c: 23: {;nuestrostimers.c: 25:  ctp->banderas |= 0x01U;
  2378                           
  2379                           ;incstack = 0
  2380   0019AA  EE20 F006          	lfsr	2,6
  2381   0019AE  5013               	movf	Tm_Inicie_periodico@ctp^0,w,c
  2382   0019B0  26D9               	addwf	fsr2l,f,c
  2383   0019B2  5014               	movf	(Tm_Inicie_periodico@ctp+1)^0,w,c
  2384   0019B4  22DA               	addwfc	fsr2h,f,c
  2385   0019B6  0E00               	movlw	0
  2386   0019B8  80DB               	bsf	plusw2,0,c
  2387                           
  2388                           ;nuestrostimers.c: 27:  ctp->banderas &= ~0x02U;
  2389   0019BA  EE20 F006          	lfsr	2,6
  2390   0019BE  5013               	movf	Tm_Inicie_periodico@ctp^0,w,c
  2391   0019C0  26D9               	addwf	fsr2l,f,c
  2392   0019C2  5014               	movf	(Tm_Inicie_periodico@ctp+1)^0,w,c
  2393   0019C4  22DA               	addwfc	fsr2h,f,c
  2394   0019C6  0EFD               	movlw	253
  2395   0019C8  16DF               	andwf	indf2,f,c
  2396                           
  2397                           ;nuestrostimers.c: 29:  ctp->contador = ctp->periodo = periodo;
  2398   0019CA  EE20 F002          	lfsr	2,2
  2399   0019CE  5013               	movf	Tm_Inicie_periodico@ctp^0,w,c
  2400   0019D0  26D9               	addwf	fsr2l,f,c
  2401   0019D2  5014               	movf	(Tm_Inicie_periodico@ctp+1)^0,w,c
  2402   0019D4  22DA               	addwfc	fsr2h,f,c
  2403   0019D6  0060  F057  FFDE   	movff	Tm_Inicie_periodico@periodo,postinc2
  2404   0019DC  0060  F05B  FFDD   	movff	Tm_Inicie_periodico@periodo+1,postdec2
  2405   0019E2  0060  F04F  FFE1   	movff	Tm_Inicie_periodico@ctp,fsr1l
  2406   0019E8  0060  F053  FFE2   	movff	Tm_Inicie_periodico@ctp+1,fsr1h
  2407   0019EE  006F FF7B FFE6     	movff	postinc2,postinc1
  2408   0019F4  006F FF77 FFE5     	movff	postdec2,postdec1
  2409   0019FA  0012               	return		;funcret
  2410   0019FC                     __end_of_Tm_Inicie_periodico:
  2411                           	callstack 0
  2412                           
  2413 ;; *************** function _Tm_Hubo_periodico *****************
  2414 ;; Defined at:
  2415 ;;		line 65 in file "nuestrostimers.c"
  2416 ;; Parameters:    Size  Location     Type
  2417 ;;  ctp             2    2[COMRAM] PTR struct Tm_Periodico
  2418 ;;		 -> main@timer(7), 
  2419 ;; Auto vars:     Size  Location     Type
  2420 ;;		None
  2421 ;; Return value:  Size  Location     Type
  2422 ;;                  1    wreg      unsigned char 
  2423 ;; Registers used:
  2424 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2425 ;; Tracked objects:
  2426 ;;		On entry : 0/0
  2427 ;;		On exit  : 0/0
  2428 ;;		Unchanged: 0/0
  2429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2430 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2433 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2434 ;;Total ram usage:        2 bytes
  2435 ;; Hardware stack levels used: 1
  2436 ;; Hardware stack levels required when called: 4
  2437 ;; This function calls:
  2438 ;;		Nothing
  2439 ;; This function is called by:
  2440 ;;		_main
  2441 ;; This function uses a non-reentrant model
  2442 ;;
  2443                           
  2444                           	psect	text18
  2445   001C2A                     __ptext18:
  2446                           	callstack 0
  2447   001C2A                     _Tm_Hubo_periodico:
  2448                           	callstack 26
  2449                           
  2450                           ;nuestrostimers.c: 65: char Tm_Hubo_periodico (Tm_Periodico *ctp);nuestrostimers.c: 67: 
      +                          {;nuestrostimers.c: 69:  return (ctp->banderas & 0x02U);
  2451                           
  2452                           ;incstack = 0
  2453   001C2A  EE20 F006          	lfsr	2,6
  2454   001C2E  5003               	movf	Tm_Hubo_periodico@ctp^0,w,c
  2455   001C30  26D9               	addwf	fsr2l,f,c
  2456   001C32  5004               	movf	(Tm_Hubo_periodico@ctp+1)^0,w,c
  2457   001C34  22DA               	addwfc	fsr2h,f,c
  2458   001C36  50DF               	movf	indf2,w,c
  2459   001C38  0B02               	andlw	2
  2460   001C3A  0012               	return		;funcret
  2461   001C3C                     __end_of_Tm_Hubo_periodico:
  2462                           	callstack 0
  2463                           
  2464 ;; *************** function _Tm_Baje_periodico *****************
  2465 ;; Defined at:
  2466 ;;		line 73 in file "nuestrostimers.c"
  2467 ;; Parameters:    Size  Location     Type
  2468 ;;  ctp             2    2[COMRAM] PTR struct Tm_Periodico
  2469 ;;		 -> main@timer(7), 
  2470 ;; Auto vars:     Size  Location     Type
  2471 ;;		None
  2472 ;; Return value:  Size  Location     Type
  2473 ;;                  1    wreg      void 
  2474 ;; Registers used:
  2475 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2476 ;; Tracked objects:
  2477 ;;		On entry : 0/0
  2478 ;;		On exit  : 0/0
  2479 ;;		Unchanged: 0/0
  2480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2481 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2484 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2485 ;;Total ram usage:        2 bytes
  2486 ;; Hardware stack levels used: 1
  2487 ;; Hardware stack levels required when called: 4
  2488 ;; This function calls:
  2489 ;;		Nothing
  2490 ;; This function is called by:
  2491 ;;		_main
  2492 ;; This function uses a non-reentrant model
  2493 ;;
  2494                           
  2495                           	psect	text19
  2496   001C3C                     __ptext19:
  2497                           	callstack 0
  2498   001C3C                     _Tm_Baje_periodico:
  2499                           	callstack 26
  2500                           
  2501                           ;nuestrostimers.c: 73: void Tm_Baje_periodico (Tm_Periodico *ctp);nuestrostimers.c: 75: 
      +                          {;nuestrostimers.c: 77:  ctp->banderas &= ~0x02U;
  2502                           
  2503                           ;incstack = 0
  2504   001C3C  EE20 F006          	lfsr	2,6
  2505   001C40  5003               	movf	Tm_Baje_periodico@ctp^0,w,c
  2506   001C42  26D9               	addwf	fsr2l,f,c
  2507   001C44  5004               	movf	(Tm_Baje_periodico@ctp+1)^0,w,c
  2508   001C46  22DA               	addwfc	fsr2h,f,c
  2509   001C48  0EFD               	movlw	253
  2510   001C4A  16DF               	andwf	indf2,f,c
  2511   001C4C  0012               	return		;funcret
  2512   001C4E                     __end_of_Tm_Baje_periodico:
  2513                           	callstack 0
  2514                           
  2515 ;; *************** function _TMR2_HasOverflowOccured *****************
  2516 ;; Defined at:
  2517 ;;		line 157 in file "mcc_generated_files/tmr2.c"
  2518 ;; Parameters:    Size  Location     Type
  2519 ;;		None
  2520 ;; Auto vars:     Size  Location     Type
  2521 ;;  status          1    2[COMRAM] _Bool 
  2522 ;; Return value:  Size  Location     Type
  2523 ;;                  1    wreg      _Bool 
  2524 ;; Registers used:
  2525 ;;		wreg, status,2
  2526 ;; Tracked objects:
  2527 ;;		On entry : 0/0
  2528 ;;		On exit  : 0/0
  2529 ;;		Unchanged: 0/0
  2530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2532 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2534 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2535 ;;Total ram usage:        1 bytes
  2536 ;; Hardware stack levels used: 1
  2537 ;; Hardware stack levels required when called: 4
  2538 ;; This function calls:
  2539 ;;		Nothing
  2540 ;; This function is called by:
  2541 ;;		_main
  2542 ;; This function uses a non-reentrant model
  2543 ;;
  2544                           
  2545                           	psect	text20
  2546   001BFC                     __ptext20:
  2547                           	callstack 0
  2548   001BFC                     _TMR2_HasOverflowOccured:
  2549                           	callstack 26
  2550                           
  2551                           ;mcc_generated_files/tmr2.c: 160:     _Bool status = PIR4bits.TMR2IF;
  2552                           
  2553                           ;incstack = 0
  2554   001BFC  0139               	movlb	57	; () banked
  2555   001BFE  A5A4               	btfss	164,2,b	;volatile
  2556   001C00  D002               	goto	u1060
  2557   001C02  0E01               	movlw	1
  2558   001C04  D001               	goto	u1066
  2559   001C06                     u1060:
  2560   001C06  0E00               	movlw	0
  2561   001C08                     u1066:
  2562   001C08  6E03               	movwf	TMR2_HasOverflowOccured@status^0,c
  2563                           
  2564                           ;mcc_generated_files/tmr2.c: 161:     if(status)
  2565   001C0A  5003               	movf	TMR2_HasOverflowOccured@status^0,w,c
  2566   001C0C  A4D8               	btfss	status,2,c
  2567                           
  2568                           ; BSR set to: 57
  2569                           ;mcc_generated_files/tmr2.c: 162:     {;mcc_generated_files/tmr2.c: 164:         PIR4bit
      +                          s.TMR2IF = 0;
  2570   001C0E  95A4               	bcf	164,2,b	;volatile
  2571                           
  2572                           ; BSR set to: 57
  2573                           ;mcc_generated_files/tmr2.c: 166:     return status;
  2574   001C10  5003               	movf	TMR2_HasOverflowOccured@status^0,w,c
  2575                           
  2576                           ; BSR set to: 57
  2577   001C12  0012               	return		;funcret
  2578   001C14                     __end_of_TMR2_HasOverflowOccured:
  2579                           	callstack 0
  2580                           
  2581 ;; *************** function _SYSTEM_Initialize *****************
  2582 ;; Defined at:
  2583 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2584 ;; Parameters:    Size  Location     Type
  2585 ;;		None
  2586 ;; Auto vars:     Size  Location     Type
  2587 ;;		None
  2588 ;; Return value:  Size  Location     Type
  2589 ;;                  1    wreg      void 
  2590 ;; Registers used:
  2591 ;;		wreg, status,2, status,0, cstack
  2592 ;; Tracked objects:
  2593 ;;		On entry : 0/0
  2594 ;;		On exit  : 0/0
  2595 ;;		Unchanged: 0/0
  2596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2600 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2601 ;;Total ram usage:        0 bytes
  2602 ;; Hardware stack levels used: 1
  2603 ;; Hardware stack levels required when called: 6
  2604 ;; This function calls:
  2605 ;;		_ADCC_Initialize
  2606 ;;		_FVR_Initialize
  2607 ;;		_INTERRUPT_Initialize
  2608 ;;		_OSCILLATOR_Initialize
  2609 ;;		_PIN_MANAGER_Initialize
  2610 ;;		_PMD_Initialize
  2611 ;;		_SPI1_Initialize
  2612 ;;		_TMR2_Initialize
  2613 ;;		_UART1_Initialize
  2614 ;; This function is called by:
  2615 ;;		_main
  2616 ;; This function uses a non-reentrant model
  2617 ;;
  2618                           
  2619                           	psect	text21
  2620   001B22                     __ptext21:
  2621                           	callstack 0
  2622   001B22                     _SYSTEM_Initialize:
  2623                           	callstack 24
  2624                           
  2625                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
  2626                           
  2627                           ; BSR set to: 57
  2628                           ;incstack = 0
  2629   001B22  EC74  F00E         	call	_INTERRUPT_Initialize	;wreg free
  2630                           
  2631                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  2632   001B26  ECA4  F00D         	call	_PMD_Initialize	;wreg free
  2633                           
  2634                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  2635   001B2A  EC18  F00A         	call	_PIN_MANAGER_Initialize	;wreg free
  2636                           
  2637                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  2638   001B2E  ECD6  F00D         	call	_OSCILLATOR_Initialize	;wreg free
  2639                           
  2640                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
  2641   001B32  EC69  F00E         	call	_FVR_Initialize	;wreg free
  2642                           
  2643                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
  2644   001B36  EC7D  F00C         	call	_ADCC_Initialize	;wreg free
  2645                           
  2646                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
  2647   001B3A  ECC7  F00D         	call	_TMR2_Initialize	;wreg free
  2648                           
  2649                           ;mcc_generated_files/mcc.c: 59:     UART1_Initialize();
  2650   001B3E  EC6B  F00A         	call	_UART1_Initialize	;wreg free
  2651                           
  2652                           ;mcc_generated_files/mcc.c: 60:     SPI1_Initialize();
  2653   001B42  ECF1  F00D         	call	_SPI1_Initialize	;wreg free
  2654   001B46  0012               	return		;funcret
  2655   001B48                     __end_of_SYSTEM_Initialize:
  2656                           	callstack 0
  2657                           
  2658 ;; *************** function _UART1_Initialize *****************
  2659 ;; Defined at:
  2660 ;;		line 86 in file "mcc_generated_files/uart1.c"
  2661 ;; Parameters:    Size  Location     Type
  2662 ;;		None
  2663 ;; Auto vars:     Size  Location     Type
  2664 ;;		None
  2665 ;; Return value:  Size  Location     Type
  2666 ;;                  1    wreg      void 
  2667 ;; Registers used:
  2668 ;;		wreg, status,2, status,0, cstack
  2669 ;; Tracked objects:
  2670 ;;		On entry : 0/0
  2671 ;;		On exit  : 0/0
  2672 ;;		Unchanged: 0/0
  2673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2677 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2678 ;;Total ram usage:        0 bytes
  2679 ;; Hardware stack levels used: 1
  2680 ;; Hardware stack levels required when called: 5
  2681 ;; This function calls:
  2682 ;;		_UART1_SetErrorHandler
  2683 ;;		_UART1_SetFramingErrorHandler
  2684 ;;		_UART1_SetOverrunErrorHandler
  2685 ;;		_UART1_SetRxInterruptHandler
  2686 ;;		_UART1_SetTxInterruptHandler
  2687 ;; This function is called by:
  2688 ;;		_SYSTEM_Initialize
  2689 ;;		_main
  2690 ;; This function uses a non-reentrant model
  2691 ;;
  2692                           
  2693                           	psect	text22
  2694   0014D6                     __ptext22:
  2695                           	callstack 0
  2696   0014D6                     _UART1_Initialize:
  2697                           	callstack 25
  2698                           
  2699                           ;mcc_generated_files/uart1.c: 89:     PIE3bits.U1RXIE = 0;
  2700                           
  2701                           ;incstack = 0
  2702   0014D6  0139               	movlb	57	; () banked
  2703   0014D8  9793               	bcf	147,3,b	;volatile
  2704                           
  2705                           ; BSR set to: 57
  2706                           ;mcc_generated_files/uart1.c: 90:     UART1_SetRxInterruptHandler(UART1_Receive_ISR);
  2707   0014DA  0E4E               	movlw	low _UART1_Receive_ISR
  2708   0014DC  6E03               	movwf	UART1_SetRxInterruptHandler@InterruptHandler^0,c
  2709   0014DE  0E17               	movlw	high _UART1_Receive_ISR
  2710   0014E0  6E04               	movwf	(UART1_SetRxInterruptHandler@InterruptHandler+1)^0,c
  2711   0014E2  EC51  F00E         	call	_UART1_SetRxInterruptHandler	;wreg free
  2712                           
  2713                           ;mcc_generated_files/uart1.c: 91:     PIE3bits.U1TXIE = 0;
  2714   0014E6  0139               	movlb	57	; () banked
  2715   0014E8  9993               	bcf	147,4,b	;volatile
  2716                           
  2717                           ;mcc_generated_files/uart1.c: 92:     UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
  2718   0014EA  0EA0               	movlw	low _UART1_Transmit_ISR
  2719   0014EC  6E03               	movwf	UART1_SetTxInterruptHandler@InterruptHandler^0,c
  2720   0014EE  0E1A               	movlw	high _UART1_Transmit_ISR
  2721   0014F0  6E04               	movwf	(UART1_SetTxInterruptHandler@InterruptHandler+1)^0,c
  2722   0014F2  EC4C  F00E         	call	_UART1_SetTxInterruptHandler	;wreg free
  2723                           
  2724                           ;mcc_generated_files/uart1.c: 97:     U1P1L = 0x00;
  2725   0014F6  0E00               	movlw	0
  2726   0014F8  013D               	movlb	61	; () banked
  2727   0014FA  6FEC               	movwf	236,b	;volatile
  2728                           
  2729                           ; BSR set to: 61
  2730                           ;mcc_generated_files/uart1.c: 100:     U1P1H = 0x00;
  2731   0014FC  0E00               	movlw	0
  2732   0014FE  6FED               	movwf	237,b	;volatile
  2733                           
  2734                           ; BSR set to: 61
  2735                           ;mcc_generated_files/uart1.c: 103:     U1P2L = 0x00;
  2736   001500  0E00               	movlw	0
  2737   001502  6FEE               	movwf	238,b	;volatile
  2738                           
  2739                           ; BSR set to: 61
  2740                           ;mcc_generated_files/uart1.c: 106:     U1P2H = 0x00;
  2741   001504  0E00               	movlw	0
  2742   001506  6FEF               	movwf	239,b	;volatile
  2743                           
  2744                           ; BSR set to: 61
  2745                           ;mcc_generated_files/uart1.c: 109:     U1P3L = 0x00;
  2746   001508  0E00               	movlw	0
  2747   00150A  6FF0               	movwf	240,b	;volatile
  2748                           
  2749                           ; BSR set to: 61
  2750                           ;mcc_generated_files/uart1.c: 112:     U1P3H = 0x00;
  2751   00150C  0E00               	movlw	0
  2752   00150E  6FF1               	movwf	241,b	;volatile
  2753                           
  2754                           ; BSR set to: 61
  2755                           ;mcc_generated_files/uart1.c: 115:     U1CON0 = 0xB0;
  2756   001510  0EB0               	movlw	176
  2757   001512  6FF2               	movwf	242,b	;volatile
  2758                           
  2759                           ; BSR set to: 61
  2760                           ;mcc_generated_files/uart1.c: 118:     U1CON1 = 0x80;
  2761   001514  0E80               	movlw	128
  2762   001516  6FF3               	movwf	243,b	;volatile
  2763                           
  2764                           ; BSR set to: 61
  2765                           ;mcc_generated_files/uart1.c: 121:     U1CON2 = 0x00;
  2766   001518  0E00               	movlw	0
  2767   00151A  6FF4               	movwf	244,b	;volatile
  2768                           
  2769                           ; BSR set to: 61
  2770                           ;mcc_generated_files/uart1.c: 124:     U1BRGL = 0x07;
  2771   00151C  0E07               	movlw	7
  2772   00151E  6FF5               	movwf	245,b	;volatile
  2773                           
  2774                           ; BSR set to: 61
  2775                           ;mcc_generated_files/uart1.c: 127:     U1BRGH = 0x00;
  2776   001520  0E00               	movlw	0
  2777   001522  6FF6               	movwf	246,b	;volatile
  2778                           
  2779                           ; BSR set to: 61
  2780                           ;mcc_generated_files/uart1.c: 130:     U1FIFO = 0x00;
  2781   001524  0E00               	movlw	0
  2782   001526  6FF7               	movwf	247,b	;volatile
  2783                           
  2784                           ; BSR set to: 61
  2785                           ;mcc_generated_files/uart1.c: 133:     U1UIR = 0x00;
  2786   001528  0E00               	movlw	0
  2787   00152A  6FF8               	movwf	248,b	;volatile
  2788                           
  2789                           ; BSR set to: 61
  2790                           ;mcc_generated_files/uart1.c: 136:     U1ERRIR = 0x00;
  2791   00152C  0E00               	movlw	0
  2792   00152E  6FF9               	movwf	249,b	;volatile
  2793                           
  2794                           ; BSR set to: 61
  2795                           ;mcc_generated_files/uart1.c: 139:     U1ERRIE = 0x00;
  2796   001530  0E00               	movlw	0
  2797   001532  6FFA               	movwf	250,b	;volatile
  2798                           
  2799                           ; BSR set to: 61
  2800                           ;mcc_generated_files/uart1.c: 142:     UART1_SetFramingErrorHandler(UART1_DefaultFraming
      +                          ErrorHandler);
  2801   001534  0EEE               	movlw	low _UART1_DefaultFramingErrorHandler
  2802   001536  6E03               	movwf	UART1_SetFramingErrorHandler@interruptHandler^0,c
  2803   001538  0E1C               	movlw	high _UART1_DefaultFramingErrorHandler
  2804   00153A  6E04               	movwf	(UART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  2805   00153C  EC5B  F00E         	call	_UART1_SetFramingErrorHandler	;wreg free
  2806                           
  2807                           ;mcc_generated_files/uart1.c: 143:     UART1_SetOverrunErrorHandler(UART1_DefaultOverrun
      +                          ErrorHandler);
  2808   001540  0EEC               	movlw	low _UART1_DefaultOverrunErrorHandler
  2809   001542  6E03               	movwf	UART1_SetOverrunErrorHandler@interruptHandler^0,c
  2810   001544  0E1C               	movlw	high _UART1_DefaultOverrunErrorHandler
  2811   001546  6E04               	movwf	(UART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  2812   001548  EC56  F00E         	call	_UART1_SetOverrunErrorHandler	;wreg free
  2813                           
  2814                           ;mcc_generated_files/uart1.c: 144:     UART1_SetErrorHandler(UART1_DefaultErrorHandler);
  2815   00154C  0EE2               	movlw	low _UART1_DefaultErrorHandler
  2816   00154E  6E03               	movwf	UART1_SetErrorHandler@interruptHandler^0,c
  2817   001550  0E1C               	movlw	high _UART1_DefaultErrorHandler
  2818   001552  6E04               	movwf	(UART1_SetErrorHandler@interruptHandler+1)^0,c
  2819   001554  EC60  F00E         	call	_UART1_SetErrorHandler	;wreg free
  2820                           
  2821                           ;mcc_generated_files/uart1.c: 146:     uart1RxLastError.status = 0;
  2822   001558  0E00               	movlw	0
  2823   00155A  6E26               	movwf	_uart1RxLastError^0,c	;volatile
  2824                           
  2825                           ;mcc_generated_files/uart1.c: 149:     uart1TxHead = 0;
  2826   00155C  0E00               	movlw	0
  2827   00155E  6E2C               	movwf	_uart1TxHead^0,c	;volatile
  2828                           
  2829                           ;mcc_generated_files/uart1.c: 150:     uart1TxTail = 0;
  2830   001560  0E00               	movlw	0
  2831   001562  6E2B               	movwf	_uart1TxTail^0,c	;volatile
  2832                           
  2833                           ;mcc_generated_files/uart1.c: 151:     uart1TxBufferRemaining = sizeof(uart1TxBuffer);
  2834   001564  0E08               	movlw	8
  2835   001566  6E2A               	movwf	_uart1TxBufferRemaining^0,c	;volatile
  2836                           
  2837                           ;mcc_generated_files/uart1.c: 152:     uart1RxHead = 0;
  2838   001568  0E00               	movlw	0
  2839   00156A  6E29               	movwf	_uart1RxHead^0,c	;volatile
  2840                           
  2841                           ;mcc_generated_files/uart1.c: 153:     uart1RxTail = 0;
  2842   00156C  0E00               	movlw	0
  2843   00156E  6E28               	movwf	_uart1RxTail^0,c	;volatile
  2844                           
  2845                           ;mcc_generated_files/uart1.c: 154:     uart1RxCount = 0;
  2846   001570  0E00               	movlw	0
  2847   001572  6E27               	movwf	_uart1RxCount^0,c	;volatile
  2848                           
  2849                           ;mcc_generated_files/uart1.c: 157:     PIE3bits.U1RXIE = 1;
  2850   001574  0139               	movlb	57	; () banked
  2851   001576  8793               	bsf	147,3,b	;volatile
  2852                           
  2853                           ; BSR set to: 57
  2854   001578  0012               	return		;funcret
  2855   00157A                     __end_of_UART1_Initialize:
  2856                           	callstack 0
  2857                           
  2858 ;; *************** function _UART1_SetTxInterruptHandler *****************
  2859 ;; Defined at:
  2860 ;;		line 308 in file "mcc_generated_files/uart1.c"
  2861 ;; Parameters:    Size  Location     Type
  2862 ;;  InterruptHan    2    2[COMRAM] PTR FTN()void 
  2863 ;;		 -> UART1_Transmit_ISR(1), 
  2864 ;; Auto vars:     Size  Location     Type
  2865 ;;		None
  2866 ;; Return value:  Size  Location     Type
  2867 ;;                  1    wreg      void 
  2868 ;; Registers used:
  2869 ;;		wreg, status,2, status,0
  2870 ;; Tracked objects:
  2871 ;;		On entry : 0/0
  2872 ;;		On exit  : 0/0
  2873 ;;		Unchanged: 0/0
  2874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2875 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2878 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2879 ;;Total ram usage:        2 bytes
  2880 ;; Hardware stack levels used: 1
  2881 ;; Hardware stack levels required when called: 4
  2882 ;; This function calls:
  2883 ;;		Nothing
  2884 ;; This function is called by:
  2885 ;;		_UART1_Initialize
  2886 ;; This function uses a non-reentrant model
  2887 ;;
  2888                           
  2889                           	psect	text23
  2890   001C98                     __ptext23:
  2891                           	callstack 0
  2892   001C98                     _UART1_SetTxInterruptHandler:
  2893                           	callstack 25
  2894                           
  2895                           ;mcc_generated_files/uart1.c: 309:     UART1_TxInterruptHandler = InterruptHandler;
  2896                           
  2897                           ; BSR set to: 57
  2898                           ;incstack = 0
  2899   001C98  C003  F01E         	movff	UART1_SetTxInterruptHandler@InterruptHandler,_UART1_TxInterruptHandler
  2900   001C9C  C004  F01F         	movff	UART1_SetTxInterruptHandler@InterruptHandler+1,_UART1_TxInterruptHandler+1
  2901   001CA0  0012               	return		;funcret
  2902   001CA2                     __end_of_UART1_SetTxInterruptHandler:
  2903                           	callstack 0
  2904                           
  2905 ;; *************** function _UART1_SetRxInterruptHandler *****************
  2906 ;; Defined at:
  2907 ;;		line 304 in file "mcc_generated_files/uart1.c"
  2908 ;; Parameters:    Size  Location     Type
  2909 ;;  InterruptHan    2    2[COMRAM] PTR FTN()void 
  2910 ;;		 -> UART1_Receive_ISR(1), 
  2911 ;; Auto vars:     Size  Location     Type
  2912 ;;		None
  2913 ;; Return value:  Size  Location     Type
  2914 ;;                  1    wreg      void 
  2915 ;; Registers used:
  2916 ;;		wreg, status,2, status,0
  2917 ;; Tracked objects:
  2918 ;;		On entry : 0/0
  2919 ;;		On exit  : 0/0
  2920 ;;		Unchanged: 0/0
  2921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2922 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2925 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2926 ;;Total ram usage:        2 bytes
  2927 ;; Hardware stack levels used: 1
  2928 ;; Hardware stack levels required when called: 4
  2929 ;; This function calls:
  2930 ;;		Nothing
  2931 ;; This function is called by:
  2932 ;;		_UART1_Initialize
  2933 ;; This function uses a non-reentrant model
  2934 ;;
  2935                           
  2936                           	psect	text24
  2937   001CA2                     __ptext24:
  2938                           	callstack 0
  2939   001CA2                     _UART1_SetRxInterruptHandler:
  2940                           	callstack 25
  2941                           
  2942                           ;mcc_generated_files/uart1.c: 305:     UART1_RxInterruptHandler = InterruptHandler;
  2943                           
  2944                           ;incstack = 0
  2945   001CA2  C003  F020         	movff	UART1_SetRxInterruptHandler@InterruptHandler,_UART1_RxInterruptHandler
  2946   001CA6  C004  F021         	movff	UART1_SetRxInterruptHandler@InterruptHandler+1,_UART1_RxInterruptHandler+1
  2947   001CAA  0012               	return		;funcret
  2948   001CAC                     __end_of_UART1_SetRxInterruptHandler:
  2949                           	callstack 0
  2950                           
  2951 ;; *************** function _UART1_SetOverrunErrorHandler *****************
  2952 ;; Defined at:
  2953 ;;		line 294 in file "mcc_generated_files/uart1.c"
  2954 ;; Parameters:    Size  Location     Type
  2955 ;;  interruptHan    2    2[COMRAM] PTR FTN()void 
  2956 ;;		 -> UART1_DefaultOverrunErrorHandler(1), 
  2957 ;; Auto vars:     Size  Location     Type
  2958 ;;		None
  2959 ;; Return value:  Size  Location     Type
  2960 ;;                  1    wreg      void 
  2961 ;; Registers used:
  2962 ;;		wreg, status,2, status,0
  2963 ;; Tracked objects:
  2964 ;;		On entry : 0/0
  2965 ;;		On exit  : 0/0
  2966 ;;		Unchanged: 0/0
  2967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2968 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2971 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2972 ;;Total ram usage:        2 bytes
  2973 ;; Hardware stack levels used: 1
  2974 ;; Hardware stack levels required when called: 4
  2975 ;; This function calls:
  2976 ;;		Nothing
  2977 ;; This function is called by:
  2978 ;;		_UART1_Initialize
  2979 ;; This function uses a non-reentrant model
  2980 ;;
  2981                           
  2982                           	psect	text25
  2983   001CAC                     __ptext25:
  2984                           	callstack 0
  2985   001CAC                     _UART1_SetOverrunErrorHandler:
  2986                           	callstack 25
  2987                           
  2988                           ;mcc_generated_files/uart1.c: 295:     UART1_OverrunErrorHandler = interruptHandler;
  2989                           
  2990                           ;incstack = 0
  2991   001CAC  C003  F0AD         	movff	UART1_SetOverrunErrorHandler@interruptHandler,_UART1_OverrunErrorHandler
  2992   001CB0  C004  F0AE         	movff	UART1_SetOverrunErrorHandler@interruptHandler+1,_UART1_OverrunErrorHandler+1
  2993   001CB4  0012               	return		;funcret
  2994   001CB6                     __end_of_UART1_SetOverrunErrorHandler:
  2995                           	callstack 0
  2996                           
  2997 ;; *************** function _UART1_SetFramingErrorHandler *****************
  2998 ;; Defined at:
  2999 ;;		line 290 in file "mcc_generated_files/uart1.c"
  3000 ;; Parameters:    Size  Location     Type
  3001 ;;  interruptHan    2    2[COMRAM] PTR FTN()void 
  3002 ;;		 -> UART1_DefaultFramingErrorHandler(1), 
  3003 ;; Auto vars:     Size  Location     Type
  3004 ;;		None
  3005 ;; Return value:  Size  Location     Type
  3006 ;;                  1    wreg      void 
  3007 ;; Registers used:
  3008 ;;		wreg, status,2, status,0
  3009 ;; Tracked objects:
  3010 ;;		On entry : 0/0
  3011 ;;		On exit  : 0/0
  3012 ;;		Unchanged: 0/0
  3013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3014 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3017 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3018 ;;Total ram usage:        2 bytes
  3019 ;; Hardware stack levels used: 1
  3020 ;; Hardware stack levels required when called: 4
  3021 ;; This function calls:
  3022 ;;		Nothing
  3023 ;; This function is called by:
  3024 ;;		_UART1_Initialize
  3025 ;; This function uses a non-reentrant model
  3026 ;;
  3027                           
  3028                           	psect	text26
  3029   001CB6                     __ptext26:
  3030                           	callstack 0
  3031   001CB6                     _UART1_SetFramingErrorHandler:
  3032                           	callstack 25
  3033                           
  3034                           ;mcc_generated_files/uart1.c: 291:     UART1_FramingErrorHandler = interruptHandler;
  3035                           
  3036                           ;incstack = 0
  3037   001CB6  C003  F0AF         	movff	UART1_SetFramingErrorHandler@interruptHandler,_UART1_FramingErrorHandler
  3038   001CBA  C004  F0B0         	movff	UART1_SetFramingErrorHandler@interruptHandler+1,_UART1_FramingErrorHandler+1
  3039   001CBE  0012               	return		;funcret
  3040   001CC0                     __end_of_UART1_SetFramingErrorHandler:
  3041                           	callstack 0
  3042                           
  3043 ;; *************** function _UART1_SetErrorHandler *****************
  3044 ;; Defined at:
  3045 ;;		line 298 in file "mcc_generated_files/uart1.c"
  3046 ;; Parameters:    Size  Location     Type
  3047 ;;  interruptHan    2    2[COMRAM] PTR FTN()void 
  3048 ;;		 -> UART1_DefaultErrorHandler(1), 
  3049 ;; Auto vars:     Size  Location     Type
  3050 ;;		None
  3051 ;; Return value:  Size  Location     Type
  3052 ;;                  1    wreg      void 
  3053 ;; Registers used:
  3054 ;;		wreg, status,2, status,0
  3055 ;; Tracked objects:
  3056 ;;		On entry : 0/0
  3057 ;;		On exit  : 0/0
  3058 ;;		Unchanged: 0/0
  3059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3060 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3063 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3064 ;;Total ram usage:        2 bytes
  3065 ;; Hardware stack levels used: 1
  3066 ;; Hardware stack levels required when called: 4
  3067 ;; This function calls:
  3068 ;;		Nothing
  3069 ;; This function is called by:
  3070 ;;		_UART1_Initialize
  3071 ;; This function uses a non-reentrant model
  3072 ;;
  3073                           
  3074                           	psect	text27
  3075   001CC0                     __ptext27:
  3076                           	callstack 0
  3077   001CC0                     _UART1_SetErrorHandler:
  3078                           	callstack 25
  3079                           
  3080                           ;mcc_generated_files/uart1.c: 299:     UART1_ErrorHandler = interruptHandler;
  3081                           
  3082                           ;incstack = 0
  3083   001CC0  C003  F0AB         	movff	UART1_SetErrorHandler@interruptHandler,_UART1_ErrorHandler
  3084   001CC4  C004  F0AC         	movff	UART1_SetErrorHandler@interruptHandler+1,_UART1_ErrorHandler+1
  3085   001CC8  0012               	return		;funcret
  3086   001CCA                     __end_of_UART1_SetErrorHandler:
  3087                           	callstack 0
  3088                           
  3089 ;; *************** function _TMR2_Initialize *****************
  3090 ;; Defined at:
  3091 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  3092 ;; Parameters:    Size  Location     Type
  3093 ;;		None
  3094 ;; Auto vars:     Size  Location     Type
  3095 ;;		None
  3096 ;; Return value:  Size  Location     Type
  3097 ;;                  1    wreg      void 
  3098 ;; Registers used:
  3099 ;;		wreg, status,2
  3100 ;; Tracked objects:
  3101 ;;		On entry : 0/0
  3102 ;;		On exit  : 0/0
  3103 ;;		Unchanged: 0/0
  3104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3108 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3109 ;;Total ram usage:        0 bytes
  3110 ;; Hardware stack levels used: 1
  3111 ;; Hardware stack levels required when called: 4
  3112 ;; This function calls:
  3113 ;;		Nothing
  3114 ;; This function is called by:
  3115 ;;		_SYSTEM_Initialize
  3116 ;;		_main
  3117 ;; This function uses a non-reentrant model
  3118 ;;
  3119                           
  3120                           	psect	text28
  3121   001B8E                     __ptext28:
  3122                           	callstack 0
  3123   001B8E                     _TMR2_Initialize:
  3124                           	callstack 26
  3125                           
  3126                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x03;
  3127                           
  3128                           ;incstack = 0
  3129   001B8E  0E03               	movlw	3
  3130   001B90  6EAE               	movwf	174,c	;volatile
  3131                           
  3132                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
  3133   001B92  0E00               	movlw	0
  3134   001B94  6EAD               	movwf	173,c	;volatile
  3135                           
  3136                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
  3137   001B96  0E00               	movlw	0
  3138   001B98  6EAF               	movwf	175,c	;volatile
  3139                           
  3140                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0xC7;
  3141   001B9A  0EC7               	movlw	199
  3142   001B9C  6EAB               	movwf	171,c	;volatile
  3143                           
  3144                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
  3145   001B9E  0E00               	movlw	0
  3146   001BA0  6EAA               	movwf	170,c	;volatile
  3147                           
  3148                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
  3149   001BA2  0139               	movlb	57	; () banked
  3150   001BA4  95A4               	bcf	164,2,b	;volatile
  3151                           
  3152                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xD0;
  3153   001BA6  0ED0               	movlw	208
  3154   001BA8  6EAC               	movwf	172,c	;volatile
  3155                           
  3156                           ; BSR set to: 57
  3157   001BAA  0012               	return		;funcret
  3158   001BAC                     __end_of_TMR2_Initialize:
  3159                           	callstack 0
  3160                           
  3161 ;; *************** function _SPI1_Initialize *****************
  3162 ;; Defined at:
  3163 ;;		line 64 in file "mcc_generated_files/spi1.c"
  3164 ;; Parameters:    Size  Location     Type
  3165 ;;		None
  3166 ;; Auto vars:     Size  Location     Type
  3167 ;;		None
  3168 ;; Return value:  Size  Location     Type
  3169 ;;                  1    wreg      void 
  3170 ;; Registers used:
  3171 ;;		wreg, status,2
  3172 ;; Tracked objects:
  3173 ;;		On entry : 0/0
  3174 ;;		On exit  : 0/0
  3175 ;;		Unchanged: 0/0
  3176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3180 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3181 ;;Total ram usage:        0 bytes
  3182 ;; Hardware stack levels used: 1
  3183 ;; Hardware stack levels required when called: 4
  3184 ;; This function calls:
  3185 ;;		Nothing
  3186 ;; This function is called by:
  3187 ;;		_SYSTEM_Initialize
  3188 ;;		_main
  3189 ;; This function uses a non-reentrant model
  3190 ;;
  3191                           
  3192                           	psect	text29
  3193   001BE2                     __ptext29:
  3194                           	callstack 0
  3195   001BE2                     _SPI1_Initialize:
  3196                           	callstack 25
  3197                           
  3198                           ;mcc_generated_files/spi1.c: 67:     SPI1CON0 = 0x02;
  3199                           
  3200                           ; BSR set to: 57
  3201                           ;incstack = 0
  3202   001BE2  0E02               	movlw	2
  3203   001BE4  013D               	movlb	61	; () banked
  3204   001BE6  6F14               	movwf	20,b	;volatile
  3205                           
  3206                           ;mcc_generated_files/spi1.c: 69:     SPI1CON1 = 0x40;
  3207   001BE8  0E40               	movlw	64
  3208   001BEA  6F15               	movwf	21,b	;volatile
  3209                           
  3210                           ;mcc_generated_files/spi1.c: 71:     SPI1CON2 = 0x00;
  3211   001BEC  0E00               	movlw	0
  3212   001BEE  6F16               	movwf	22,b	;volatile
  3213                           
  3214                           ;mcc_generated_files/spi1.c: 73:     SPI1CLK = 0x00;
  3215   001BF0  0E00               	movlw	0
  3216   001BF2  6F1C               	movwf	28,b	;volatile
  3217                           
  3218                           ;mcc_generated_files/spi1.c: 75:     SPI1BAUD = 0x00;
  3219   001BF4  0E00               	movlw	0
  3220   001BF6  6F19               	movwf	25,b	;volatile
  3221                           
  3222                           ; BSR set to: 61
  3223                           ;mcc_generated_files/spi1.c: 76:     TRISCbits.TRISC3 = 0;
  3224   001BF8  96C4               	bcf	196,3,c	;volatile
  3225                           
  3226                           ; BSR set to: 61
  3227   001BFA  0012               	return		;funcret
  3228   001BFC                     __end_of_SPI1_Initialize:
  3229                           	callstack 0
  3230                           
  3231 ;; *************** function _PMD_Initialize *****************
  3232 ;; Defined at:
  3233 ;;		line 81 in file "mcc_generated_files/mcc.c"
  3234 ;; Parameters:    Size  Location     Type
  3235 ;;		None
  3236 ;; Auto vars:     Size  Location     Type
  3237 ;;		None
  3238 ;; Return value:  Size  Location     Type
  3239 ;;                  1    wreg      void 
  3240 ;; Registers used:
  3241 ;;		wreg, status,2
  3242 ;; Tracked objects:
  3243 ;;		On entry : 0/0
  3244 ;;		On exit  : 0/0
  3245 ;;		Unchanged: 0/0
  3246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3250 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3251 ;;Total ram usage:        0 bytes
  3252 ;; Hardware stack levels used: 1
  3253 ;; Hardware stack levels required when called: 4
  3254 ;; This function calls:
  3255 ;;		Nothing
  3256 ;; This function is called by:
  3257 ;;		_SYSTEM_Initialize
  3258 ;; This function uses a non-reentrant model
  3259 ;;
  3260                           
  3261                           	psect	text30
  3262   001B48                     __ptext30:
  3263                           	callstack 0
  3264   001B48                     _PMD_Initialize:
  3265                           	callstack 25
  3266                           
  3267                           ;mcc_generated_files/mcc.c: 84:     PMD0 = 0x00;
  3268                           
  3269                           ; BSR set to: 61
  3270                           ;incstack = 0
  3271   001B48  0E00               	movlw	0
  3272   001B4A  0139               	movlb	57	; () banked
  3273   001B4C  6FC0               	movwf	192,b	;volatile
  3274                           
  3275                           ;mcc_generated_files/mcc.c: 86:     PMD1 = 0x00;
  3276   001B4E  0E00               	movlw	0
  3277   001B50  6FC1               	movwf	193,b	;volatile
  3278                           
  3279                           ;mcc_generated_files/mcc.c: 88:     PMD2 = 0x00;
  3280   001B52  0E00               	movlw	0
  3281   001B54  6FC2               	movwf	194,b	;volatile
  3282                           
  3283                           ;mcc_generated_files/mcc.c: 90:     PMD3 = 0x00;
  3284   001B56  0E00               	movlw	0
  3285   001B58  6FC3               	movwf	195,b	;volatile
  3286                           
  3287                           ;mcc_generated_files/mcc.c: 92:     PMD4 = 0x00;
  3288   001B5A  0E00               	movlw	0
  3289   001B5C  6FC4               	movwf	196,b	;volatile
  3290                           
  3291                           ;mcc_generated_files/mcc.c: 94:     PMD5 = 0x00;
  3292   001B5E  0E00               	movlw	0
  3293   001B60  6FC5               	movwf	197,b	;volatile
  3294                           
  3295                           ;mcc_generated_files/mcc.c: 96:     PMD6 = 0x00;
  3296   001B62  0E00               	movlw	0
  3297   001B64  6FC6               	movwf	198,b	;volatile
  3298                           
  3299                           ;mcc_generated_files/mcc.c: 98:     PMD7 = 0x00;
  3300   001B66  0E00               	movlw	0
  3301   001B68  6FC7               	movwf	199,b	;volatile
  3302                           
  3303                           ; BSR set to: 57
  3304   001B6A  0012               	return		;funcret
  3305   001B6C                     __end_of_PMD_Initialize:
  3306                           	callstack 0
  3307                           
  3308 ;; *************** function _PIN_MANAGER_Initialize *****************
  3309 ;; Defined at:
  3310 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  3311 ;; Parameters:    Size  Location     Type
  3312 ;;		None
  3313 ;; Auto vars:     Size  Location     Type
  3314 ;;		None
  3315 ;; Return value:  Size  Location     Type
  3316 ;;                  1    wreg      void 
  3317 ;; Registers used:
  3318 ;;		wreg, status,2
  3319 ;; Tracked objects:
  3320 ;;		On entry : 0/0
  3321 ;;		On exit  : 0/0
  3322 ;;		Unchanged: 0/0
  3323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3327 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3328 ;;Total ram usage:        0 bytes
  3329 ;; Hardware stack levels used: 1
  3330 ;; Hardware stack levels required when called: 4
  3331 ;; This function calls:
  3332 ;;		Nothing
  3333 ;; This function is called by:
  3334 ;;		_SYSTEM_Initialize
  3335 ;; This function uses a non-reentrant model
  3336 ;;
  3337                           
  3338                           	psect	text31
  3339   001430                     __ptext31:
  3340                           	callstack 0
  3341   001430                     _PIN_MANAGER_Initialize:
  3342                           	callstack 25
  3343                           
  3344                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  3345                           
  3346                           ; BSR set to: 57
  3347                           ;incstack = 0
  3348   001430  0E00               	movlw	0
  3349   001432  6EBE               	movwf	190,c	;volatile
  3350                           
  3351                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  3352   001434  0E00               	movlw	0
  3353   001436  6EBD               	movwf	189,c	;volatile
  3354                           
  3355                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  3356   001438  0E00               	movlw	0
  3357   00143A  6EBA               	movwf	186,c	;volatile
  3358                           
  3359                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  3360   00143C  0E00               	movlw	0
  3361   00143E  6EBB               	movwf	187,c	;volatile
  3362                           
  3363                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  3364   001440  0E00               	movlw	0
  3365   001442  6EBC               	movwf	188,c	;volatile
  3366                           
  3367                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  3368   001444  0E07               	movlw	7
  3369   001446  6EC6               	movwf	198,c	;volatile
  3370                           
  3371                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xFF;
  3372   001448  68C2               	setf	194,c	;volatile
  3373                           
  3374                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
  3375   00144A  68C3               	setf	195,c	;volatile
  3376                           
  3377                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0x97;
  3378   00144C  0E97               	movlw	151
  3379   00144E  6EC4               	movwf	196,c	;volatile
  3380                           
  3381                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xEF;
  3382   001450  0EEF               	movlw	239
  3383   001452  6EC5               	movwf	197,c	;volatile
  3384                           
  3385                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
  3386   001454  013A               	movlb	58	; () banked
  3387   001456  6970               	setf	112,b	;volatile
  3388                           
  3389                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0x67;
  3390   001458  0E67               	movlw	103
  3391   00145A  6F60               	movwf	96,b	;volatile
  3392                           
  3393                           ; BSR set to: 58
  3394                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0xFF;
  3395   00145C  6950               	setf	80,b	;volatile
  3396                           
  3397                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
  3398   00145E  0E07               	movlw	7
  3399   001460  6F80               	movwf	128,b	;volatile
  3400                           
  3401                           ; BSR set to: 58
  3402                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0xFF;
  3403   001462  6940               	setf	64,b	;volatile
  3404                           
  3405                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
  3406   001464  0E00               	movlw	0
  3407   001466  6F71               	movwf	113,b	;volatile
  3408                           
  3409                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
  3410   001468  0E00               	movlw	0
  3411   00146A  6F81               	movwf	129,b	;volatile
  3412                           
  3413                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
  3414   00146C  0E00               	movlw	0
  3415   00146E  6F51               	movwf	81,b	;volatile
  3416                           
  3417                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
  3418   001470  0E00               	movlw	0
  3419   001472  6F41               	movwf	65,b	;volatile
  3420                           
  3421                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
  3422   001474  0E00               	movlw	0
  3423   001476  6F61               	movwf	97,b	;volatile
  3424                           
  3425                           ;mcc_generated_files/pin_manager.c: 96:     RB1I2C = 0x00;
  3426   001478  0E00               	movlw	0
  3427   00147A  6F5A               	movwf	90,b	;volatile
  3428                           
  3429                           ;mcc_generated_files/pin_manager.c: 97:     RB2I2C = 0x00;
  3430   00147C  0E00               	movlw	0
  3431   00147E  6F5B               	movwf	91,b	;volatile
  3432                           
  3433                           ;mcc_generated_files/pin_manager.c: 98:     RC3I2C = 0x00;
  3434   001480  0E00               	movlw	0
  3435   001482  6F6A               	movwf	106,b	;volatile
  3436                           
  3437                           ;mcc_generated_files/pin_manager.c: 99:     RC4I2C = 0x00;
  3438   001484  0E00               	movlw	0
  3439   001486  6F6B               	movwf	107,b	;volatile
  3440                           
  3441                           ;mcc_generated_files/pin_manager.c: 100:     RD0I2C = 0x00;
  3442   001488  0E00               	movlw	0
  3443   00148A  6F7A               	movwf	122,b	;volatile
  3444                           
  3445                           ;mcc_generated_files/pin_manager.c: 101:     RD1I2C = 0x00;
  3446   00148C  0E00               	movlw	0
  3447   00148E  6F7B               	movwf	123,b	;volatile
  3448                           
  3449                           ;mcc_generated_files/pin_manager.c: 106:     ODCONE = 0x00;
  3450   001490  0E00               	movlw	0
  3451   001492  6F82               	movwf	130,b	;volatile
  3452                           
  3453                           ;mcc_generated_files/pin_manager.c: 107:     ODCONA = 0x00;
  3454   001494  0E00               	movlw	0
  3455   001496  6F42               	movwf	66,b	;volatile
  3456                           
  3457                           ;mcc_generated_files/pin_manager.c: 108:     ODCONB = 0x00;
  3458   001498  0E00               	movlw	0
  3459   00149A  6F52               	movwf	82,b	;volatile
  3460                           
  3461                           ;mcc_generated_files/pin_manager.c: 109:     ODCONC = 0x00;
  3462   00149C  0E00               	movlw	0
  3463   00149E  6F62               	movwf	98,b	;volatile
  3464                           
  3465                           ;mcc_generated_files/pin_manager.c: 110:     ODCOND = 0x00;
  3466   0014A0  0E00               	movlw	0
  3467   0014A2  6F72               	movwf	114,b	;volatile
  3468                           
  3469                           ; BSR set to: 58
  3470                           ;mcc_generated_files/pin_manager.c: 115:     SLRCONA = 0xFF;
  3471   0014A4  6943               	setf	67,b	;volatile
  3472                           
  3473                           ; BSR set to: 58
  3474                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONB = 0xFF;
  3475   0014A6  6953               	setf	83,b	;volatile
  3476                           
  3477                           ; BSR set to: 58
  3478                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONC = 0xFF;
  3479   0014A8  6963               	setf	99,b	;volatile
  3480                           
  3481                           ; BSR set to: 58
  3482                           ;mcc_generated_files/pin_manager.c: 118:     SLRCOND = 0xFF;
  3483   0014AA  6973               	setf	115,b	;volatile
  3484                           
  3485                           ;mcc_generated_files/pin_manager.c: 119:     SLRCONE = 0x07;
  3486   0014AC  0E07               	movlw	7
  3487   0014AE  6F83               	movwf	131,b	;volatile
  3488                           
  3489                           ; BSR set to: 58
  3490                           ;mcc_generated_files/pin_manager.c: 124:     INLVLA = 0xFF;
  3491   0014B0  6944               	setf	68,b	;volatile
  3492                           
  3493                           ; BSR set to: 58
  3494                           ;mcc_generated_files/pin_manager.c: 125:     INLVLB = 0xFF;
  3495   0014B2  6954               	setf	84,b	;volatile
  3496                           
  3497                           ; BSR set to: 58
  3498                           ;mcc_generated_files/pin_manager.c: 126:     INLVLC = 0xFF;
  3499   0014B4  6964               	setf	100,b	;volatile
  3500                           
  3501                           ; BSR set to: 58
  3502                           ;mcc_generated_files/pin_manager.c: 127:     INLVLD = 0xFF;
  3503   0014B6  6974               	setf	116,b	;volatile
  3504                           
  3505                           ;mcc_generated_files/pin_manager.c: 128:     INLVLE = 0x0F;
  3506   0014B8  0E0F               	movlw	15
  3507   0014BA  6F84               	movwf	132,b	;volatile
  3508                           
  3509                           ;mcc_generated_files/pin_manager.c: 137:     SPI1SCKPPS = 0x13;
  3510   0014BC  0E13               	movlw	19
  3511   0014BE  6FDE               	movwf	222,b	;volatile
  3512                           
  3513                           ;mcc_generated_files/pin_manager.c: 138:     RC3PPS = 0x1E;
  3514   0014C0  0E1E               	movlw	30
  3515   0014C2  6F13               	movwf	19,b	;volatile
  3516                           
  3517                           ;mcc_generated_files/pin_manager.c: 139:     RC5PPS = 0x1F;
  3518   0014C4  0E1F               	movlw	31
  3519   0014C6  6F15               	movwf	21,b	;volatile
  3520                           
  3521                           ;mcc_generated_files/pin_manager.c: 140:     RC6PPS = 0x13;
  3522   0014C8  0E13               	movlw	19
  3523   0014CA  6F16               	movwf	22,b	;volatile
  3524                           
  3525                           ;mcc_generated_files/pin_manager.c: 141:     U1RXPPS = 0x17;
  3526   0014CC  0E17               	movlw	23
  3527   0014CE  6FE5               	movwf	229,b	;volatile
  3528                           
  3529                           ;mcc_generated_files/pin_manager.c: 142:     SPI1SDIPPS = 0x14;
  3530   0014D0  0E14               	movlw	20
  3531   0014D2  6FDF               	movwf	223,b	;volatile
  3532                           
  3533                           ; BSR set to: 58
  3534   0014D4  0012               	return		;funcret
  3535   0014D6                     __end_of_PIN_MANAGER_Initialize:
  3536                           	callstack 0
  3537                           
  3538 ;; *************** function _OSCILLATOR_Initialize *****************
  3539 ;; Defined at:
  3540 ;;		line 63 in file "mcc_generated_files/mcc.c"
  3541 ;; Parameters:    Size  Location     Type
  3542 ;;		None
  3543 ;; Auto vars:     Size  Location     Type
  3544 ;;		None
  3545 ;; Return value:  Size  Location     Type
  3546 ;;                  1    wreg      void 
  3547 ;; Registers used:
  3548 ;;		wreg, status,2
  3549 ;; Tracked objects:
  3550 ;;		On entry : 0/0
  3551 ;;		On exit  : 0/0
  3552 ;;		Unchanged: 0/0
  3553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3557 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3558 ;;Total ram usage:        0 bytes
  3559 ;; Hardware stack levels used: 1
  3560 ;; Hardware stack levels required when called: 4
  3561 ;; This function calls:
  3562 ;;		Nothing
  3563 ;; This function is called by:
  3564 ;;		_SYSTEM_Initialize
  3565 ;; This function uses a non-reentrant model
  3566 ;;
  3567                           
  3568                           	psect	text32
  3569   001BAC                     __ptext32:
  3570                           	callstack 0
  3571   001BAC                     _OSCILLATOR_Initialize:
  3572                           	callstack 25
  3573                           
  3574                           ;mcc_generated_files/mcc.c: 66:     OSCCON1 = 0x20;
  3575                           
  3576                           ; BSR set to: 58
  3577                           ;incstack = 0
  3578   001BAC  0E20               	movlw	32
  3579   001BAE  0139               	movlb	57	; () banked
  3580   001BB0  6FD9               	movwf	217,b	;volatile
  3581                           
  3582                           ;mcc_generated_files/mcc.c: 68:     OSCCON3 = 0x00;
  3583   001BB2  0E00               	movlw	0
  3584   001BB4  6FDB               	movwf	219,b	;volatile
  3585                           
  3586                           ;mcc_generated_files/mcc.c: 70:     OSCEN = 0x00;
  3587   001BB6  0E00               	movlw	0
  3588   001BB8  6FDD               	movwf	221,b	;volatile
  3589                           
  3590                           ;mcc_generated_files/mcc.c: 72:     OSCFRQ = 0x08;
  3591   001BBA  0E08               	movlw	8
  3592   001BBC  6FDF               	movwf	223,b	;volatile
  3593                           
  3594                           ;mcc_generated_files/mcc.c: 74:     OSCTUNE = 0x00;
  3595   001BBE  0E00               	movlw	0
  3596   001BC0  6FDE               	movwf	222,b	;volatile
  3597   001BC2                     l56:
  3598                           
  3599                           ; BSR set to: 57
  3600                           ;mcc_generated_files/mcc.c: 76:     while(PLLR == 0)
  3601   001BC2  B1DC               	btfsc	220,0,b	;volatile
  3602   001BC4  0012               	return	
  3603   001BC6  D7FD               	goto	l56
  3604   001BC8                     __end_of_OSCILLATOR_Initialize:
  3605                           	callstack 0
  3606                           
  3607 ;; *************** function _INTERRUPT_Initialize *****************
  3608 ;; Defined at:
  3609 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  3610 ;; Parameters:    Size  Location     Type
  3611 ;;		None
  3612 ;; Auto vars:     Size  Location     Type
  3613 ;;		None
  3614 ;; Return value:  Size  Location     Type
  3615 ;;                  1    wreg      void 
  3616 ;; Registers used:
  3617 ;;		None
  3618 ;; Tracked objects:
  3619 ;;		On entry : 0/0
  3620 ;;		On exit  : 0/0
  3621 ;;		Unchanged: 0/0
  3622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3626 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3627 ;;Total ram usage:        0 bytes
  3628 ;; Hardware stack levels used: 1
  3629 ;; Hardware stack levels required when called: 4
  3630 ;; This function calls:
  3631 ;;		Nothing
  3632 ;; This function is called by:
  3633 ;;		_SYSTEM_Initialize
  3634 ;; This function uses a non-reentrant model
  3635 ;;
  3636                           
  3637                           	psect	text33
  3638   001CE8                     __ptext33:
  3639                           	callstack 0
  3640   001CE8                     _INTERRUPT_Initialize:
  3641                           	callstack 25
  3642                           
  3643                           ;mcc_generated_files/interrupt_manager.c: 55:     INTCON0bits.IPEN = 0;
  3644                           
  3645                           ; BSR set to: 57
  3646                           ;incstack = 0
  3647   001CE8  9AD2               	bcf	210,5,c	;volatile
  3648   001CEA  0012               	return		;funcret
  3649   001CEC                     __end_of_INTERRUPT_Initialize:
  3650                           	callstack 0
  3651                           
  3652 ;; *************** function _FVR_Initialize *****************
  3653 ;; Defined at:
  3654 ;;		line 58 in file "mcc_generated_files/fvr.c"
  3655 ;; Parameters:    Size  Location     Type
  3656 ;;		None
  3657 ;; Auto vars:     Size  Location     Type
  3658 ;;		None
  3659 ;; Return value:  Size  Location     Type
  3660 ;;                  1    wreg      void 
  3661 ;; Registers used:
  3662 ;;		wreg, status,2
  3663 ;; Tracked objects:
  3664 ;;		On entry : 0/0
  3665 ;;		On exit  : 0/0
  3666 ;;		Unchanged: 0/0
  3667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3671 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3672 ;;Total ram usage:        0 bytes
  3673 ;; Hardware stack levels used: 1
  3674 ;; Hardware stack levels required when called: 4
  3675 ;; This function calls:
  3676 ;;		Nothing
  3677 ;; This function is called by:
  3678 ;;		_SYSTEM_Initialize
  3679 ;; This function uses a non-reentrant model
  3680 ;;
  3681                           
  3682                           	psect	text34
  3683   001CD2                     __ptext34:
  3684                           	callstack 0
  3685   001CD2                     _FVR_Initialize:
  3686                           	callstack 25
  3687                           
  3688                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0x82;
  3689                           
  3690                           ;incstack = 0
  3691   001CD2  0E82               	movlw	130
  3692   001CD4  013E               	movlb	62	; () banked
  3693   001CD6  6FC1               	movwf	193,b	;volatile
  3694                           
  3695                           ; BSR set to: 62
  3696   001CD8  0012               	return		;funcret
  3697   001CDA                     __end_of_FVR_Initialize:
  3698                           	callstack 0
  3699                           
  3700 ;; *************** function _ADCC_Initialize *****************
  3701 ;; Defined at:
  3702 ;;		line 62 in file "mcc_generated_files/adcc.c"
  3703 ;; Parameters:    Size  Location     Type
  3704 ;;		None
  3705 ;; Auto vars:     Size  Location     Type
  3706 ;;		None
  3707 ;; Return value:  Size  Location     Type
  3708 ;;                  1    wreg      void 
  3709 ;; Registers used:
  3710 ;;		wreg, status,2
  3711 ;; Tracked objects:
  3712 ;;		On entry : 0/0
  3713 ;;		On exit  : 0/0
  3714 ;;		Unchanged: 0/0
  3715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3719 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3720 ;;Total ram usage:        0 bytes
  3721 ;; Hardware stack levels used: 1
  3722 ;; Hardware stack levels required when called: 4
  3723 ;; This function calls:
  3724 ;;		Nothing
  3725 ;; This function is called by:
  3726 ;;		_SYSTEM_Initialize
  3727 ;;		_main
  3728 ;; This function uses a non-reentrant model
  3729 ;;
  3730                           
  3731                           	psect	text35
  3732   0018FA                     __ptext35:
  3733                           	callstack 0
  3734   0018FA                     _ADCC_Initialize:
  3735                           	callstack 25
  3736                           
  3737                           ;mcc_generated_files/adcc.c: 66:     ADLTHL = 0x00;
  3738                           
  3739                           ; BSR set to: 62
  3740                           ;incstack = 0
  3741   0018FA  0E00               	movlw	0
  3742   0018FC  013E               	movlb	62	; () banked
  3743   0018FE  6FDE               	movwf	222,b	;volatile
  3744                           
  3745                           ;mcc_generated_files/adcc.c: 68:     ADLTHH = 0x00;
  3746   001900  0E00               	movlw	0
  3747   001902  6FDF               	movwf	223,b	;volatile
  3748                           
  3749                           ;mcc_generated_files/adcc.c: 70:     ADUTHL = 0x00;
  3750   001904  0E00               	movlw	0
  3751   001906  6FE0               	movwf	224,b	;volatile
  3752                           
  3753                           ;mcc_generated_files/adcc.c: 72:     ADUTHH = 0x00;
  3754   001908  0E00               	movlw	0
  3755   00190A  6FE1               	movwf	225,b	;volatile
  3756                           
  3757                           ;mcc_generated_files/adcc.c: 74:     ADSTPTL = 0x00;
  3758   00190C  0E00               	movlw	0
  3759   00190E  6FE4               	movwf	228,b	;volatile
  3760                           
  3761                           ;mcc_generated_files/adcc.c: 76:     ADSTPTH = 0x00;
  3762   001910  0E00               	movlw	0
  3763   001912  6FE5               	movwf	229,b	;volatile
  3764                           
  3765                           ;mcc_generated_files/adcc.c: 78:     ADACCU = 0x00;
  3766   001914  0E00               	movlw	0
  3767   001916  6FEA               	movwf	234,b	;volatile
  3768                           
  3769                           ;mcc_generated_files/adcc.c: 80:     ADRPT = 0x00;
  3770   001918  0E00               	movlw	0
  3771   00191A  6FEC               	movwf	236,b	;volatile
  3772                           
  3773                           ;mcc_generated_files/adcc.c: 82:     ADPCH = 0x00;
  3774   00191C  0E00               	movlw	0
  3775   00191E  6FF1               	movwf	241,b	;volatile
  3776                           
  3777                           ;mcc_generated_files/adcc.c: 84:     ADACQL = 0x00;
  3778   001920  0E00               	movlw	0
  3779   001922  6FF3               	movwf	243,b	;volatile
  3780                           
  3781                           ;mcc_generated_files/adcc.c: 86:     ADACQH = 0x00;
  3782   001924  0E00               	movlw	0
  3783   001926  6FF4               	movwf	244,b	;volatile
  3784                           
  3785                           ;mcc_generated_files/adcc.c: 88:     ADCAP = 0x00;
  3786   001928  0E00               	movlw	0
  3787   00192A  6FF5               	movwf	245,b	;volatile
  3788                           
  3789                           ;mcc_generated_files/adcc.c: 90:     ADPREL = 0x00;
  3790   00192C  0E00               	movlw	0
  3791   00192E  6FF6               	movwf	246,b	;volatile
  3792                           
  3793                           ;mcc_generated_files/adcc.c: 92:     ADPREH = 0x00;
  3794   001930  0E00               	movlw	0
  3795   001932  6FF7               	movwf	247,b	;volatile
  3796                           
  3797                           ;mcc_generated_files/adcc.c: 94:     ADCON1 = 0x00;
  3798   001934  0E00               	movlw	0
  3799   001936  6FF9               	movwf	249,b	;volatile
  3800                           
  3801                           ;mcc_generated_files/adcc.c: 96:     ADCON2 = 0x00;
  3802   001938  0E00               	movlw	0
  3803   00193A  6FFA               	movwf	250,b	;volatile
  3804                           
  3805                           ;mcc_generated_files/adcc.c: 98:     ADCON3 = 0x00;
  3806   00193C  0E00               	movlw	0
  3807   00193E  6FFB               	movwf	251,b	;volatile
  3808                           
  3809                           ;mcc_generated_files/adcc.c: 100:     ADSTAT = 0x00;
  3810   001940  0E00               	movlw	0
  3811   001942  6FFC               	movwf	252,b	;volatile
  3812                           
  3813                           ;mcc_generated_files/adcc.c: 102:     ADREF = 0x00;
  3814   001944  0E00               	movlw	0
  3815   001946  6FFD               	movwf	253,b	;volatile
  3816                           
  3817                           ;mcc_generated_files/adcc.c: 104:     ADACT = 0x00;
  3818   001948  0E00               	movlw	0
  3819   00194A  6FFE               	movwf	254,b	;volatile
  3820                           
  3821                           ;mcc_generated_files/adcc.c: 106:     ADCLK = 0x1F;
  3822   00194C  0E1F               	movlw	31
  3823   00194E  6FFF               	movwf	255,b	;volatile
  3824                           
  3825                           ;mcc_generated_files/adcc.c: 108:     ADCON0 = 0x84;
  3826   001950  0E84               	movlw	132
  3827   001952  6FF8               	movwf	248,b	;volatile
  3828                           
  3829                           ; BSR set to: 62
  3830   001954  0012               	return		;funcret
  3831   001956                     __end_of_ADCC_Initialize:
  3832                           	callstack 0
  3833                           
  3834 ;; *************** function _ADCC_StartConversion *****************
  3835 ;; Defined at:
  3836 ;;		line 113 in file "mcc_generated_files/adcc.c"
  3837 ;; Parameters:    Size  Location     Type
  3838 ;;  channel         1    wreg     enum E15846
  3839 ;; Auto vars:     Size  Location     Type
  3840 ;;  channel         1    2[COMRAM] enum E15846
  3841 ;; Return value:  Size  Location     Type
  3842 ;;                  1    wreg      void 
  3843 ;; Registers used:
  3844 ;;		wreg
  3845 ;; Tracked objects:
  3846 ;;		On entry : 0/0
  3847 ;;		On exit  : 0/0
  3848 ;;		Unchanged: 0/0
  3849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3851 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3853 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3854 ;;Total ram usage:        1 bytes
  3855 ;; Hardware stack levels used: 1
  3856 ;; Hardware stack levels required when called: 4
  3857 ;; This function calls:
  3858 ;;		Nothing
  3859 ;; This function is called by:
  3860 ;;		_main
  3861 ;; This function uses a non-reentrant model
  3862 ;;
  3863                           
  3864                           	psect	text36
  3865   001C5E                     __ptext36:
  3866                           	callstack 0
  3867   001C5E                     _ADCC_StartConversion:
  3868                           	callstack 26
  3869                           
  3870                           ; BSR set to: 62
  3871                           ;incstack = 0
  3872                           ;ADCC_StartConversion@channel stored from wreg
  3873   001C5E  6E03               	movwf	ADCC_StartConversion@channel^0,c
  3874                           
  3875                           ;mcc_generated_files/adcc.c: 113: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 114: {;mcc_generated_files/adcc.c: 116:     ADPCH = channel;
  3876   001C60  0060  F00F  FEF1   	movff	ADCC_StartConversion@channel,16113	;volatile
  3877                           
  3878                           ;mcc_generated_files/adcc.c: 119:     ADCON0bits.ADON = 1;
  3879   001C66  013E               	movlb	62	; () banked
  3880   001C68  8FF8               	bsf	248,7,b	;volatile
  3881                           
  3882                           ; BSR set to: 62
  3883                           ;mcc_generated_files/adcc.c: 122:     ADCON0bits.ADGO = 1;
  3884   001C6A  81F8               	bsf	248,0,b	;volatile
  3885                           
  3886                           ; BSR set to: 62
  3887   001C6C  0012               	return		;funcret
  3888   001C6E                     __end_of_ADCC_StartConversion:
  3889                           	callstack 0
  3890                           
  3891 ;; *************** function _ADCC_IsConversionDone *****************
  3892 ;; Defined at:
  3893 ;;		line 125 in file "mcc_generated_files/adcc.c"
  3894 ;; Parameters:    Size  Location     Type
  3895 ;;		None
  3896 ;; Auto vars:     Size  Location     Type
  3897 ;;		None
  3898 ;; Return value:  Size  Location     Type
  3899 ;;                  1    wreg      _Bool 
  3900 ;; Registers used:
  3901 ;;		wreg
  3902 ;; Tracked objects:
  3903 ;;		On entry : 0/0
  3904 ;;		On exit  : 0/0
  3905 ;;		Unchanged: 0/0
  3906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3910 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3911 ;;Total ram usage:        0 bytes
  3912 ;; Hardware stack levels used: 1
  3913 ;; Hardware stack levels required when called: 4
  3914 ;; This function calls:
  3915 ;;		Nothing
  3916 ;; This function is called by:
  3917 ;;		_main
  3918 ;; This function uses a non-reentrant model
  3919 ;;
  3920                           
  3921                           	psect	text37
  3922   001C8A                     __ptext37:
  3923                           	callstack 0
  3924   001C8A                     _ADCC_IsConversionDone:
  3925                           	callstack 26
  3926                           
  3927                           ;mcc_generated_files/adcc.c: 128:     return ((unsigned char)(!ADCON0bits.ADGO));
  3928                           
  3929                           ; BSR set to: 62
  3930                           ;incstack = 0
  3931   001C8A  013E               	movlb	62	; () banked
  3932   001C8C  B1F8               	btfsc	248,0,b	;volatile
  3933   001C8E  D002               	goto	u1080
  3934   001C90  0E01               	movlw	1
  3935   001C92  0012               	return	
  3936   001C94                     u1080:
  3937   001C94  0E00               	movlw	0
  3938                           
  3939                           ; BSR set to: 62
  3940   001C96  0012               	return		;funcret
  3941   001C98                     __end_of_ADCC_IsConversionDone:
  3942                           	callstack 0
  3943                           
  3944 ;; *************** function _ADCC_GetConversionResult *****************
  3945 ;; Defined at:
  3946 ;;		line 131 in file "mcc_generated_files/adcc.c"
  3947 ;; Parameters:    Size  Location     Type
  3948 ;;		None
  3949 ;; Auto vars:     Size  Location     Type
  3950 ;;		None
  3951 ;; Return value:  Size  Location     Type
  3952 ;;                  2    2[COMRAM] unsigned short 
  3953 ;; Registers used:
  3954 ;;		wreg, status,2, status,0
  3955 ;; Tracked objects:
  3956 ;;		On entry : 0/0
  3957 ;;		On exit  : 0/0
  3958 ;;		Unchanged: 0/0
  3959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3960 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3962 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3963 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3964 ;;Total ram usage:        4 bytes
  3965 ;; Hardware stack levels used: 1
  3966 ;; Hardware stack levels required when called: 4
  3967 ;; This function calls:
  3968 ;;		Nothing
  3969 ;; This function is called by:
  3970 ;;		_main
  3971 ;; This function uses a non-reentrant model
  3972 ;;
  3973                           
  3974                           	psect	text38
  3975   001C14                     __ptext38:
  3976                           	callstack 0
  3977   001C14                     _ADCC_GetConversionResult:
  3978                           	callstack 26
  3979                           
  3980                           ;mcc_generated_files/adcc.c: 134:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  3981                           
  3982                           ; BSR set to: 62
  3983                           ;incstack = 0
  3984   001C14  013E               	movlb	62	; () banked
  3985   001C16  51F0               	movf	240,w,b	;volatile
  3986   001C18  6E06               	movwf	(??_ADCC_GetConversionResult+1)^0,c
  3987   001C1A  6A05               	clrf	??_ADCC_GetConversionResult^0,c
  3988   001C1C  51EF               	movf	239,w,b	;volatile
  3989   001C1E  2405               	addwf	??_ADCC_GetConversionResult^0,w,c
  3990   001C20  6E03               	movwf	?_ADCC_GetConversionResult^0,c
  3991   001C22  0E00               	movlw	0
  3992   001C24  2006               	addwfc	(??_ADCC_GetConversionResult+1)^0,w,c
  3993   001C26  6E04               	movwf	(?_ADCC_GetConversionResult+1)^0,c
  3994                           
  3995                           ; BSR set to: 62
  3996   001C28  0012               	return		;funcret
  3997   001C2A                     __end_of_ADCC_GetConversionResult:
  3998                           	callstack 0
  3999                           
  4000 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
  4001 ;; Defined at:
  4002 ;;		line 174 in file "mcc_generated_files/adcc.c"
  4003 ;; Parameters:    Size  Location     Type
  4004 ;;		None
  4005 ;; Auto vars:     Size  Location     Type
  4006 ;;		None
  4007 ;; Return value:  Size  Location     Type
  4008 ;;                  1    wreg      void 
  4009 ;; Registers used:
  4010 ;;		wreg, status,2
  4011 ;; Tracked objects:
  4012 ;;		On entry : 0/0
  4013 ;;		On exit  : 0/0
  4014 ;;		Unchanged: 0/0
  4015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4019 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4020 ;;Total ram usage:        0 bytes
  4021 ;; Hardware stack levels used: 1
  4022 ;; Hardware stack levels required when called: 4
  4023 ;; This function calls:
  4024 ;;		Nothing
  4025 ;; This function is called by:
  4026 ;;		_main
  4027 ;; This function uses a non-reentrant model
  4028 ;;
  4029                           
  4030                           	psect	text39
  4031   001CDA                     __ptext39:
  4032                           	callstack 0
  4033   001CDA                     _ADCC_DischargeSampleCapacitor:
  4034                           	callstack 26
  4035                           
  4036                           ;mcc_generated_files/adcc.c: 177:     ADPCH = 0x3b;
  4037                           
  4038                           ; BSR set to: 62
  4039                           ;incstack = 0
  4040   001CDA  0E3B               	movlw	59
  4041   001CDC  013E               	movlb	62	; () banked
  4042   001CDE  6FF1               	movwf	241,b	;volatile
  4043                           
  4044                           ; BSR set to: 62
  4045   001CE0  0012               	return		;funcret
  4046   001CE2                     __end_of_ADCC_DischargeSampleCapacitor:
  4047                           	callstack 0
  4048                           
  4049 ;; *************** function _INTERRUPT_InterruptManager *****************
  4050 ;; Defined at:
  4051 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  4052 ;; Parameters:    Size  Location     Type
  4053 ;;		None
  4054 ;; Auto vars:     Size  Location     Type
  4055 ;;		None
  4056 ;; Return value:  Size  Location     Type
  4057 ;;                  1    wreg      void 
  4058 ;; Registers used:
  4059 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  4060 ;; Tracked objects:
  4061 ;;		On entry : 0/0
  4062 ;;		On exit  : 0/0
  4063 ;;		Unchanged: 0/0
  4064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4067 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4068 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4069 ;;Total ram usage:        2 bytes
  4070 ;; Hardware stack levels used: 1
  4071 ;; Hardware stack levels required when called: 3
  4072 ;; This function calls:
  4073 ;;		Absolute function
  4074 ;;		_UART1_Receive_ISR
  4075 ;;		_UART1_Transmit_ISR
  4076 ;; This function is called by:
  4077 ;;		Interrupt level 2
  4078 ;; This function uses a non-reentrant model
  4079 ;;
  4080                           
  4081                           	psect	text40
  4082   001956                     __ptext40:
  4083                           	callstack 0
  4084   001956                     _INTERRUPT_InterruptManager:
  4085                           	callstack 24
  4086                           
  4087                           ; BSR set to: 62
  4088                           ;incstack = 0
  4089   001956  006F FFE8  F001    	movff	pclath,??_INTERRUPT_InterruptManager
  4090   00195C  006F FFEC  F002    	movff	pclatu,??_INTERRUPT_InterruptManager+1
  4091                           
  4092                           ;mcc_generated_files/interrupt_manager.c: 61:     if(PIE3bits.U1TXIE == 1 && PIR3bits.U1
      +                          TXIF == 1)
  4093   001962  0139               	movlb	57	; () banked
  4094   001964  B993               	btfsc	147,4,b	;volatile
  4095                           
  4096                           ; BSR set to: 57
  4097   001966  A9A3               	btfss	163,4,b	;volatile
  4098   001968  D00B               	goto	i2l646
  4099                           
  4100                           ; BSR set to: 57
  4101                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         UART1_TxInterruptHandler();
  4102   00196A  D801               	call	i2u88_48
  4103   00196C  D017               	goto	i2u91_49
  4104   00196E                     i2u88_48:
  4105   00196E  0005               	push	
  4106   001970  6EFA               	movwf	pclath,c
  4107   001972  501E               	movf	_UART1_TxInterruptHandler^0,w,c
  4108   001974  6EFD               	movwf	tosl,c
  4109   001976  501F               	movf	(_UART1_TxInterruptHandler+1)^0,w,c
  4110   001978  6EFE               	movwf	tosh,c
  4111   00197A  6AFF               	clrf	tosu,c
  4112   00197C  50FA               	movf	pclath,w,c
  4113   00197E  0012               	return		;indir
  4114   001980                     i2l646:
  4115                           
  4116                           ; BSR set to: 57
  4117   001980  B793               	btfsc	147,3,b	;volatile
  4118                           
  4119                           ; BSR set to: 57
  4120   001982  A7A3               	btfss	163,3,b	;volatile
  4121   001984  D00B               	goto	i2u91_49
  4122                           
  4123                           ; BSR set to: 57
  4124                           ;mcc_generated_files/interrupt_manager.c: 66:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 67:         UART1_RxInterruptHandler();
  4125   001986  D801               	call	i2u91_48
  4126   001988  D009               	goto	i2u91_49
  4127   00198A                     i2u91_48:
  4128   00198A  0005               	push	
  4129   00198C  6EFA               	movwf	pclath,c
  4130   00198E  5020               	movf	_UART1_RxInterruptHandler^0,w,c
  4131   001990  6EFD               	movwf	tosl,c
  4132   001992  5021               	movf	(_UART1_RxInterruptHandler+1)^0,w,c
  4133   001994  6EFE               	movwf	tosh,c
  4134   001996  6AFF               	clrf	tosu,c
  4135   001998  50FA               	movf	pclath,w,c
  4136   00199A  0012               	return		;indir
  4137   00199C                     i2u91_49:
  4138                           
  4139                           ;mcc_generated_files/interrupt_manager.c: 68:     }
  4140   00199C  0060  F00B  FFFB   	movff	??_INTERRUPT_InterruptManager+1,pclatu
  4141   0019A2  0060  F007  FFFA   	movff	??_INTERRUPT_InterruptManager,pclath
  4142   0019A8  0011               	retfie		f
  4143   0019AA                     __end_of_INTERRUPT_InterruptManager:
  4144                           	callstack 0
  4145                           
  4146 ;; *************** function _UART1_Transmit_ISR *****************
  4147 ;; Defined at:
  4148 ;;		line 228 in file "mcc_generated_files/uart1.c"
  4149 ;; Parameters:    Size  Location     Type
  4150 ;;		None
  4151 ;; Auto vars:     Size  Location     Type
  4152 ;;		None
  4153 ;; Return value:  Size  Location     Type
  4154 ;;                  1    wreg      void 
  4155 ;; Registers used:
  4156 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4157 ;; Tracked objects:
  4158 ;;		On entry : 0/0
  4159 ;;		On exit  : 0/0
  4160 ;;		Unchanged: 0/0
  4161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4165 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4166 ;;Total ram usage:        0 bytes
  4167 ;; Hardware stack levels used: 1
  4168 ;; This function calls:
  4169 ;;		Nothing
  4170 ;; This function is called by:
  4171 ;;		_UART1_Initialize
  4172 ;;		_INTERRUPT_InterruptManager
  4173 ;; This function uses a non-reentrant model
  4174 ;;
  4175                           
  4176                           	psect	text41
  4177   001AA0                     __ptext41:
  4178                           	callstack 0
  4179   001AA0                     _UART1_Transmit_ISR:
  4180                           	callstack 26
  4181                           
  4182                           ;mcc_generated_files/uart1.c: 231:     if(sizeof(uart1TxBuffer) > uart1TxBufferRemaining
      +                          )
  4183                           
  4184                           ;incstack = 0
  4185   001AA0  0E08               	movlw	8
  4186   001AA2  602A               	cpfslt	_uart1TxBufferRemaining^0,c	;volatile
  4187   001AA4  D011               	goto	i2l590
  4188                           
  4189                           ;mcc_generated_files/uart1.c: 232:     {;mcc_generated_files/uart1.c: 233:         U1TXB
      +                           = uart1TxBuffer[uart1TxTail++];
  4190   001AA6  0EA3               	movlw	low _uart1TxBuffer
  4191   001AA8  242B               	addwf	_uart1TxTail^0,w,c	;volatile
  4192   001AAA  6ED9               	movwf	fsr2l,c
  4193   001AAC  6ADA               	clrf	fsr2h,c
  4194   001AAE  0E00               	movlw	high _uart1TxBuffer
  4195   001AB0  22DA               	addwfc	fsr2h,f,c
  4196   001AB2  50DF               	movf	indf2,w,c
  4197   001AB4  013D               	movlb	61	; () banked
  4198   001AB6  6FEA               	movwf	234,b	;volatile
  4199                           
  4200                           ; BSR set to: 61
  4201   001AB8  2A2B               	incf	_uart1TxTail^0,f,c	;volatile
  4202                           
  4203                           ; BSR set to: 61
  4204                           ;mcc_generated_files/uart1.c: 234:        if(sizeof(uart1TxBuffer) <= uart1TxTail)
  4205   001ABA  0E07               	movlw	7
  4206   001ABC  642B               	cpfsgt	_uart1TxTail^0,c	;volatile
  4207   001ABE  D002               	goto	i2l2387
  4208                           
  4209                           ; BSR set to: 61
  4210                           ;mcc_generated_files/uart1.c: 235:         {;mcc_generated_files/uart1.c: 236:          
      +                             uart1TxTail = 0;
  4211   001AC0  0E00               	movlw	0
  4212   001AC2  6E2B               	movwf	_uart1TxTail^0,c	;volatile
  4213   001AC4                     i2l2387:
  4214                           
  4215                           ; BSR set to: 61
  4216                           ;mcc_generated_files/uart1.c: 238:         uart1TxBufferRemaining++;
  4217   001AC4  2A2A               	incf	_uart1TxBufferRemaining^0,f,c	;volatile
  4218                           
  4219                           ;mcc_generated_files/uart1.c: 239:     }
  4220   001AC6  0012               	return	
  4221   001AC8                     i2l590:
  4222                           
  4223                           ;mcc_generated_files/uart1.c: 241:     {;mcc_generated_files/uart1.c: 242:         PIE3b
      +                          its.U1TXIE = 0;
  4224   001AC8  0139               	movlb	57	; () banked
  4225   001ACA  9993               	bcf	147,4,b	;volatile
  4226   001ACC  0012               	return		;funcret
  4227   001ACE                     __end_of_UART1_Transmit_ISR:
  4228                           	callstack 0
  4229                           
  4230 ;; *************** function _UART1_Receive_ISR *****************
  4231 ;; Defined at:
  4232 ;;		line 248 in file "mcc_generated_files/uart1.c"
  4233 ;; Parameters:    Size  Location     Type
  4234 ;;		None
  4235 ;; Auto vars:     Size  Location     Type
  4236 ;;		None
  4237 ;; Return value:  Size  Location     Type
  4238 ;;                  1    wreg      void 
  4239 ;; Registers used:
  4240 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  4241 ;; Tracked objects:
  4242 ;;		On entry : 0/0
  4243 ;;		On exit  : 0/0
  4244 ;;		Unchanged: 0/0
  4245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4249 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4250 ;;Total ram usage:        0 bytes
  4251 ;; Hardware stack levels used: 1
  4252 ;; Hardware stack levels required when called: 2
  4253 ;; This function calls:
  4254 ;;		Absolute function
  4255 ;;		_UART1_DefaultErrorHandler
  4256 ;;		_UART1_DefaultFramingErrorHandler
  4257 ;;		_UART1_DefaultOverrunErrorHandler
  4258 ;;		_UART1_RxDataHandler
  4259 ;; This function is called by:
  4260 ;;		_UART1_Initialize
  4261 ;;		_INTERRUPT_InterruptManager
  4262 ;; This function uses a non-reentrant model
  4263 ;;
  4264                           
  4265                           	psect	text42
  4266   00174E                     __ptext42:
  4267                           	callstack 0
  4268   00174E                     _UART1_Receive_ISR:
  4269                           	callstack 24
  4270                           
  4271                           ;mcc_generated_files/uart1.c: 251:     uart1RxStatusBuffer[uart1RxHead].status = 0;
  4272                           
  4273                           ;incstack = 0
  4274   00174E  0E93               	movlw	low _uart1RxStatusBuffer
  4275   001750  2429               	addwf	_uart1RxHead^0,w,c	;volatile
  4276   001752  6ED9               	movwf	fsr2l,c
  4277   001754  6ADA               	clrf	fsr2h,c
  4278   001756  0E00               	movlw	high _uart1RxStatusBuffer
  4279   001758  22DA               	addwfc	fsr2h,f,c
  4280   00175A  0E00               	movlw	0
  4281   00175C  6EDF               	movwf	indf2,c
  4282                           
  4283                           ;mcc_generated_files/uart1.c: 253:     if(U1ERRIRbits.FERIF){
  4284   00175E  013D               	movlb	61	; () banked
  4285   001760  A7F9               	btfss	249,3,b	;volatile
  4286   001762  D013               	goto	i2u67_49
  4287                           
  4288                           ; BSR set to: 61
  4289                           ;mcc_generated_files/uart1.c: 254:         uart1RxStatusBuffer[uart1RxHead].ferr = 1;
  4290   001764  0E93               	movlw	low _uart1RxStatusBuffer
  4291   001766  2429               	addwf	_uart1RxHead^0,w,c	;volatile
  4292   001768  6ED9               	movwf	fsr2l,c
  4293   00176A  6ADA               	clrf	fsr2h,c
  4294   00176C  0E00               	movlw	high _uart1RxStatusBuffer
  4295   00176E  22DA               	addwfc	fsr2h,f,c
  4296   001770  0100               	movlb	0	; () banked
  4297   001772  82DF               	bsf	indf2,1,c
  4298                           
  4299                           ; BSR set to: 0
  4300                           ;mcc_generated_files/uart1.c: 255:         UART1_FramingErrorHandler();
  4301   001774  D801               	call	i2u67_48
  4302   001776  D009               	goto	i2u67_49
  4303   001778                     i2u67_48:
  4304   001778  0005               	push	
  4305   00177A  6EFA               	movwf	pclath,c
  4306   00177C  51AF               	movf	_UART1_FramingErrorHandler& (0+255),w,b
  4307   00177E  6EFD               	movwf	tosl,c
  4308   001780  51B0               	movf	(_UART1_FramingErrorHandler+1)& (0+255),w,b
  4309   001782  6EFE               	movwf	tosh,c
  4310   001784  6AFF               	clrf	tosu,c
  4311   001786  50FA               	movf	pclath,w,c
  4312   001788  0012               	return		;indir
  4313   00178A                     i2u67_49:
  4314                           
  4315                           ;mcc_generated_files/uart1.c: 258:     if(U1ERRIRbits.RXFOIF){
  4316   00178A  013D               	movlb	61	; () banked
  4317   00178C  A3F9               	btfss	249,1,b	;volatile
  4318   00178E  D013               	goto	i2u69_49
  4319                           
  4320                           ; BSR set to: 61
  4321                           ;mcc_generated_files/uart1.c: 259:         uart1RxStatusBuffer[uart1RxHead].oerr = 1;
  4322   001790  0E93               	movlw	low _uart1RxStatusBuffer
  4323   001792  2429               	addwf	_uart1RxHead^0,w,c	;volatile
  4324   001794  6ED9               	movwf	fsr2l,c
  4325   001796  6ADA               	clrf	fsr2h,c
  4326   001798  0E00               	movlw	high _uart1RxStatusBuffer
  4327   00179A  22DA               	addwfc	fsr2h,f,c
  4328   00179C  0100               	movlb	0	; () banked
  4329   00179E  84DF               	bsf	indf2,2,c
  4330                           
  4331                           ; BSR set to: 0
  4332                           ;mcc_generated_files/uart1.c: 260:         UART1_OverrunErrorHandler();
  4333   0017A0  D801               	call	i2u69_48
  4334   0017A2  D009               	goto	i2u69_49
  4335   0017A4                     i2u69_48:
  4336   0017A4  0005               	push	
  4337   0017A6  6EFA               	movwf	pclath,c
  4338   0017A8  51AD               	movf	_UART1_OverrunErrorHandler& (0+255),w,b
  4339   0017AA  6EFD               	movwf	tosl,c
  4340   0017AC  51AE               	movf	(_UART1_OverrunErrorHandler+1)& (0+255),w,b
  4341   0017AE  6EFE               	movwf	tosh,c
  4342   0017B0  6AFF               	clrf	tosu,c
  4343   0017B2  50FA               	movf	pclath,w,c
  4344   0017B4  0012               	return		;indir
  4345   0017B6                     i2u69_49:
  4346                           
  4347                           ;mcc_generated_files/uart1.c: 263:     if(uart1RxStatusBuffer[uart1RxHead].status){
  4348   0017B6  0E93               	movlw	low _uart1RxStatusBuffer
  4349   0017B8  2429               	addwf	_uart1RxHead^0,w,c	;volatile
  4350   0017BA  6ED9               	movwf	fsr2l,c
  4351   0017BC  6ADA               	clrf	fsr2h,c
  4352   0017BE  0E00               	movlw	high _uart1RxStatusBuffer
  4353   0017C0  22DA               	addwfc	fsr2h,f,c
  4354   0017C2  50DF               	movf	indf2,w,c
  4355   0017C4  B4D8               	btfsc	status,2,c
  4356   0017C6  D00C               	goto	i2l2407
  4357                           
  4358                           ;mcc_generated_files/uart1.c: 264:         UART1_ErrorHandler();
  4359   0017C8  D801               	call	i2u71_48
  4360   0017CA  0012               	return	
  4361   0017CC                     i2u71_48:
  4362   0017CC  0005               	push	
  4363   0017CE  6EFA               	movwf	pclath,c
  4364   0017D0  0100               	movlb	0	; () banked
  4365   0017D2  51AB               	movf	_UART1_ErrorHandler& (0+255),w,b
  4366   0017D4  6EFD               	movwf	tosl,c
  4367   0017D6  51AC               	movf	(_UART1_ErrorHandler+1)& (0+255),w,b
  4368   0017D8  6EFE               	movwf	tosh,c
  4369   0017DA  6AFF               	clrf	tosu,c
  4370   0017DC  50FA               	movf	pclath,w,c
  4371   0017DE  0012               	return		;indir
  4372   0017E0                     i2l2407:
  4373                           
  4374                           ;mcc_generated_files/uart1.c: 266:         UART1_RxDataHandler();
  4375   0017E0  ECB6  F00D         	call	_UART1_RxDataHandler	;wreg free
  4376   0017E4  0012               	return		;funcret
  4377   0017E6                     __end_of_UART1_Receive_ISR:
  4378                           	callstack 0
  4379                           
  4380 ;; *************** function _UART1_DefaultOverrunErrorHandler *****************
  4381 ;; Defined at:
  4382 ;;		line 284 in file "mcc_generated_files/uart1.c"
  4383 ;; Parameters:    Size  Location     Type
  4384 ;;		None
  4385 ;; Auto vars:     Size  Location     Type
  4386 ;;		None
  4387 ;; Return value:  Size  Location     Type
  4388 ;;                  1    wreg      void 
  4389 ;; Registers used:
  4390 ;;		None
  4391 ;; Tracked objects:
  4392 ;;		On entry : 0/0
  4393 ;;		On exit  : 0/0
  4394 ;;		Unchanged: 0/0
  4395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4399 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4400 ;;Total ram usage:        0 bytes
  4401 ;; Hardware stack levels used: 1
  4402 ;; This function calls:
  4403 ;;		Nothing
  4404 ;; This function is called by:
  4405 ;;		_UART1_Initialize
  4406 ;;		_UART1_Receive_ISR
  4407 ;; This function uses a non-reentrant model
  4408 ;;
  4409                           
  4410                           	psect	text43
  4411   001CEC                     __ptext43:
  4412                           	callstack 0
  4413   001CEC                     _UART1_DefaultOverrunErrorHandler:
  4414                           	callstack 25
  4415                           
  4416                           ;incstack = 0
  4417   001CEC  0012               	return		;funcret
  4418   001CEE                     __end_of_UART1_DefaultOverrunErrorHandler:
  4419                           	callstack 0
  4420                           
  4421 ;; *************** function _UART1_DefaultFramingErrorHandler *****************
  4422 ;; Defined at:
  4423 ;;		line 282 in file "mcc_generated_files/uart1.c"
  4424 ;; Parameters:    Size  Location     Type
  4425 ;;		None
  4426 ;; Auto vars:     Size  Location     Type
  4427 ;;		None
  4428 ;; Return value:  Size  Location     Type
  4429 ;;                  1    wreg      void 
  4430 ;; Registers used:
  4431 ;;		None
  4432 ;; Tracked objects:
  4433 ;;		On entry : 0/0
  4434 ;;		On exit  : 0/0
  4435 ;;		Unchanged: 0/0
  4436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4440 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4441 ;;Total ram usage:        0 bytes
  4442 ;; Hardware stack levels used: 1
  4443 ;; This function calls:
  4444 ;;		Nothing
  4445 ;; This function is called by:
  4446 ;;		_UART1_Initialize
  4447 ;;		_UART1_Receive_ISR
  4448 ;; This function uses a non-reentrant model
  4449 ;;
  4450                           
  4451                           	psect	text44
  4452   001CEE                     __ptext44:
  4453                           	callstack 0
  4454   001CEE                     _UART1_DefaultFramingErrorHandler:
  4455                           	callstack 25
  4456                           
  4457                           ;incstack = 0
  4458   001CEE  0012               	return		;funcret
  4459   001CF0                     __end_of_UART1_DefaultFramingErrorHandler:
  4460                           	callstack 0
  4461                           
  4462 ;; *************** function _UART1_DefaultErrorHandler *****************
  4463 ;; Defined at:
  4464 ;;		line 286 in file "mcc_generated_files/uart1.c"
  4465 ;; Parameters:    Size  Location     Type
  4466 ;;		None
  4467 ;; Auto vars:     Size  Location     Type
  4468 ;;		None
  4469 ;; Return value:  Size  Location     Type
  4470 ;;                  1    wreg      void 
  4471 ;; Registers used:
  4472 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4473 ;; Tracked objects:
  4474 ;;		On entry : 0/0
  4475 ;;		On exit  : 0/0
  4476 ;;		Unchanged: 0/0
  4477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4481 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4482 ;;Total ram usage:        0 bytes
  4483 ;; Hardware stack levels used: 1
  4484 ;; Hardware stack levels required when called: 1
  4485 ;; This function calls:
  4486 ;;		_UART1_RxDataHandler
  4487 ;; This function is called by:
  4488 ;;		_UART1_Initialize
  4489 ;;		_UART1_Receive_ISR
  4490 ;; This function uses a non-reentrant model
  4491 ;;
  4492                           
  4493                           	psect	text45
  4494   001CE2                     __ptext45:
  4495                           	callstack 0
  4496   001CE2                     _UART1_DefaultErrorHandler:
  4497                           	callstack 24
  4498                           
  4499                           ;mcc_generated_files/uart1.c: 287:     UART1_RxDataHandler();
  4500                           
  4501                           ;incstack = 0
  4502   001CE2  ECB6  F00D         	call	_UART1_RxDataHandler	;wreg free
  4503   001CE6  0012               	return		;funcret
  4504   001CE8                     __end_of_UART1_DefaultErrorHandler:
  4505                           	callstack 0
  4506                           
  4507 ;; *************** function _UART1_RxDataHandler *****************
  4508 ;; Defined at:
  4509 ;;		line 272 in file "mcc_generated_files/uart1.c"
  4510 ;; Parameters:    Size  Location     Type
  4511 ;;		None
  4512 ;; Auto vars:     Size  Location     Type
  4513 ;;		None
  4514 ;; Return value:  Size  Location     Type
  4515 ;;                  1    wreg      void 
  4516 ;; Registers used:
  4517 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4518 ;; Tracked objects:
  4519 ;;		On entry : 0/0
  4520 ;;		On exit  : 0/0
  4521 ;;		Unchanged: 0/0
  4522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4526 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4527 ;;Total ram usage:        0 bytes
  4528 ;; Hardware stack levels used: 1
  4529 ;; This function calls:
  4530 ;;		Nothing
  4531 ;; This function is called by:
  4532 ;;		_UART1_Receive_ISR
  4533 ;;		_UART1_DefaultErrorHandler
  4534 ;; This function uses a non-reentrant model
  4535 ;;
  4536                           
  4537                           	psect	text46
  4538   001B6C                     __ptext46:
  4539                           	callstack 0
  4540   001B6C                     _UART1_RxDataHandler:
  4541                           	callstack 25
  4542                           
  4543                           ;mcc_generated_files/uart1.c: 274:     uart1RxBuffer[uart1RxHead++] = U1RXB;
  4544                           
  4545                           ;incstack = 0
  4546   001B6C  0E9B               	movlw	low _uart1RxBuffer
  4547   001B6E  2429               	addwf	_uart1RxHead^0,w,c	;volatile
  4548   001B70  6ED9               	movwf	fsr2l,c
  4549   001B72  6ADA               	clrf	fsr2h,c
  4550   001B74  0E00               	movlw	high _uart1RxBuffer
  4551   001B76  22DA               	addwfc	fsr2h,f,c
  4552   001B78  006F F7A3 FFDF     	movff	15848,indf2	;volatile
  4553   001B7E  2A29               	incf	_uart1RxHead^0,f,c	;volatile
  4554                           
  4555                           ;mcc_generated_files/uart1.c: 275:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
  4556   001B80  0E07               	movlw	7
  4557   001B82  6429               	cpfsgt	_uart1RxHead^0,c	;volatile
  4558   001B84  D002               	goto	i2l2277
  4559                           
  4560                           ;mcc_generated_files/uart1.c: 276:     {;mcc_generated_files/uart1.c: 277:         uart1
      +                          RxHead = 0;
  4561   001B86  0E00               	movlw	0
  4562   001B88  6E29               	movwf	_uart1RxHead^0,c	;volatile
  4563   001B8A                     i2l2277:
  4564                           
  4565                           ;mcc_generated_files/uart1.c: 279:     uart1RxCount++;
  4566   001B8A  2A27               	incf	_uart1RxCount^0,f,c	;volatile
  4567   001B8C  0012               	return		;funcret
  4568   001B8E                     __end_of_UART1_RxDataHandler:
  4569                           	callstack 0
  4570                           
  4571                           ;
  4572                           ; Interrupt Vector Table @ 0x8
  4573                           ;
  4574                           
  4575                           	psect	ivt0x8
  4576   000008                     __pivt0x8:
  4577                           	callstack 0
  4578   000008                     ivt0x8_base:
  4579                           	callstack 0
  4580                           
  4581                           ; high-priority vector
  4582   000008  EFAB  F00C         	goto	_INTERRUPT_InterruptManager
  4583   000018                     	org	16
  4584                           
  4585                           ; low-priority vector
  4586   000018  00FF               	reset	
  4587                           
  4588                           	psect	text47
  4589   000000                     __ptext47:
  4590                           	callstack 0
  4591                           
  4592                           	psect	rparam
  4593   000000                     
  4594                           	psect	idloc
  4595                           
  4596                           ;Config register IDLOC0 @ 0x200000
  4597                           ;	unspecified, using default values
  4598   200000                     	org	2097152
  4599   200000  0FFF               	dw	4095
  4600                           
  4601                           ;Config register IDLOC1 @ 0x200002
  4602                           ;	unspecified, using default values
  4603   200002                     	org	2097154
  4604   200002  0FFF               	dw	4095
  4605                           
  4606                           ;Config register IDLOC2 @ 0x200004
  4607                           ;	unspecified, using default values
  4608   200004                     	org	2097156
  4609   200004  0FFF               	dw	4095
  4610                           
  4611                           ;Config register IDLOC3 @ 0x200006
  4612                           ;	unspecified, using default values
  4613   200006                     	org	2097158
  4614   200006  0FFF               	dw	4095
  4615                           
  4616                           ;Config register IDLOC4 @ 0x200008
  4617                           ;	unspecified, using default values
  4618   200008                     	org	2097160
  4619   200008  0FFF               	dw	4095
  4620                           
  4621                           ;Config register IDLOC5 @ 0x20000A
  4622                           ;	unspecified, using default values
  4623   20000A                     	org	2097162
  4624   20000A  0FFF               	dw	4095
  4625                           
  4626                           ;Config register IDLOC6 @ 0x20000C
  4627                           ;	unspecified, using default values
  4628   20000C                     	org	2097164
  4629   20000C  0FFF               	dw	4095
  4630                           
  4631                           ;Config register IDLOC7 @ 0x20000E
  4632                           ;	unspecified, using default values
  4633   20000E                     	org	2097166
  4634   20000E  0FFF               	dw	4095
  4635                           
  4636                           	psect	config
  4637                           
  4638                           ;Config register CONFIG1L @ 0x300000
  4639                           ;	External Oscillator Selection
  4640                           ;	FEXTOSC = ECH, EC (external clock) above 8 MHz; PFM set to high power
  4641                           ;	Reset Oscillator Selection
  4642                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  4643   300000                     	org	3145728
  4644   300000  AF                 	db	175
  4645                           
  4646                           ;Config register CONFIG1H @ 0x300001
  4647                           ;	Clock out Enable bit
  4648                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  4649                           ;	PRLOCKED One-Way Set Enable bit
  4650                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
  4651                           ;	Clock Switch Enable bit
  4652                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  4653                           ;	Fail-Safe Clock Monitor Enable bit
  4654                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  4655   300001                     	org	3145729
  4656   300001  FF                 	db	255
  4657                           
  4658                           ;Config register CONFIG2L @ 0x300002
  4659                           ;	MCLR Enable bit
  4660                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  4661                           ;	Power-up timer selection bits
  4662                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  4663                           ;	Multi-vector enable bit
  4664                           ;	MVECEN = OFF, Interrupt contoller does not use vector table to prioritze interrupts
  4665                           ;	IVTLOCK bit One-way set enable bit
  4666                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
  4667                           ;	Low Power BOR Enable bit
  4668                           ;	LPBOREN = OFF, ULPBOR disabled
  4669                           ;	Brown-out Reset Enable bits
  4670                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  4671   300002                     	org	3145730
  4672   300002  F7                 	db	247
  4673                           
  4674                           ;Config register CONFIG2H @ 0x300003
  4675                           ;	Brown-out Reset Voltage Selection bits
  4676                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
  4677                           ;	ZCD Disable bit
  4678                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  4679                           ;	PPSLOCK bit One-Way Set Enable bit
  4680                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  4681                           ;	Stack Full/Underflow Reset Enable bit
  4682                           ;	STVREN = ON, Stack full/underflow will cause Reset
  4683                           ;	Debugger Enable bit
  4684                           ;	DEBUG = OFF, Background debugger disabled
  4685                           ;	Extended Instruction Set Enable bit
  4686                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  4687   300003                     	org	3145731
  4688   300003  FF                 	db	255
  4689                           
  4690                           ;Config register CONFIG3L @ 0x300004
  4691                           ;	WDT Period selection bits
  4692                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  4693                           ;	WDT operating mode
  4694                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  4695   300004                     	org	3145732
  4696   300004  9F                 	db	159
  4697                           
  4698                           ;Config register CONFIG3H @ 0x300005
  4699                           ;	WDT Window Select bits
  4700                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  4701                           ;	WDT input clock selector
  4702                           ;	WDTCCS = SC, Software Control
  4703   300005                     	org	3145733
  4704   300005  FF                 	db	255
  4705                           
  4706                           ;Config register CONFIG4L @ 0x300006
  4707                           ;	Boot Block Size selection bits
  4708                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  4709                           ;	Boot Block enable bit
  4710                           ;	BBEN = OFF, Boot block disabled
  4711                           ;	Storage Area Flash enable bit
  4712                           ;	SAFEN = OFF, SAF disabled
  4713                           ;	Application Block write protection bit
  4714                           ;	WRTAPP = OFF, Application Block not write protected
  4715   300006                     	org	3145734
  4716   300006  FF                 	db	255
  4717                           
  4718                           ;Config register CONFIG4H @ 0x300007
  4719                           ;	Boot Block Write Protection bit
  4720                           ;	WRTB = OFF, Boot Block not write-protected
  4721                           ;	Configuration Register Write Protection bit
  4722                           ;	WRTC = OFF, Configuration registers not write-protected
  4723                           ;	Data EEPROM Write Protection bit
  4724                           ;	WRTD = OFF, Data EEPROM not write-protected
  4725                           ;	SAF Write protection bit
  4726                           ;	WRTSAF = OFF, SAF not Write Protected
  4727                           ;	Low Voltage Programming Enable bit
  4728                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  4729   300007                     	org	3145735
  4730   300007  FF                 	db	255
  4731                           
  4732                           ;Config register CONFIG5L @ 0x300008
  4733                           ;	PFM and Data EEPROM Code Protection bit
  4734                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  4735   300008                     	org	3145736
  4736   300008  FF                 	db	255
  4737                           
  4738                           ;Config register CONFIG5H @ 0x300009
  4739                           ;	unspecified, using default values
  4740   300009                     	org	3145737
  4741   300009  FF                 	db	255
  4742                           tosu	equ	0x3FFF
  4743                           tosh	equ	0x3FFE
  4744                           tosl	equ	0x3FFD
  4745                           stkptr	equ	0x3FFC
  4746                           pclatu	equ	0x3FFB
  4747                           pclath	equ	0x3FFA
  4748                           pcl	equ	0x3FF9
  4749                           tblptru	equ	0x3FF8
  4750                           tblptrh	equ	0x3FF7
  4751                           tblptrl	equ	0x3FF6
  4752                           tablat	equ	0x3FF5
  4753                           prodh	equ	0x3FF4
  4754                           prodl	equ	0x3FF3
  4755                           indf0	equ	0x3FEF
  4756                           postinc0	equ	0x3FEE
  4757                           postdec0	equ	0x3FED
  4758                           preinc0	equ	0x3FEC
  4759                           plusw0	equ	0x3FEB
  4760                           fsr0h	equ	0x3FEA
  4761                           fsr0l	equ	0x3FE9
  4762                           wreg	equ	0x3FE8
  4763                           indf1	equ	0x3FE7
  4764                           postinc1	equ	0x3FE6
  4765                           postdec1	equ	0x3FE5
  4766                           preinc1	equ	0x3FE4
  4767                           plusw1	equ	0x3FE3
  4768                           fsr1h	equ	0x3FE2
  4769                           fsr1l	equ	0x3FE1
  4770                           bsr	equ	0x3FE0
  4771                           indf2	equ	0x3FDF
  4772                           postinc2	equ	0x3FDE
  4773                           postdec2	equ	0x3FDD
  4774                           preinc2	equ	0x3FDC
  4775                           plusw2	equ	0x3FDB
  4776                           fsr2h	equ	0x3FDA
  4777                           fsr2l	equ	0x3FD9
  4778                           status	equ	0x3FD8

Data Sizes:
    Strings     0
    Constant    5
    Data        0
    BSS         49
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     25      44
    BANK0           160     51      81
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0

Pointer List with Targets:

    actualizar_recibido_Eusart@disp	PTR struct usart size(2) Largest target is 11
		 -> main@disp(BANK0[11]), 

    dato_recibido_completo@disp	PTR struct usart size(2) Largest target is 11
		 -> main@disp(BANK0[11]), 

    recibir_periodo_Eusart@disp	PTR struct usart size(2) Largest target is 11
		 -> main@disp(BANK0[11]), 

    iniciar_struct_usart@disp	PTR struct usart size(2) Largest target is 11
		 -> main@disp(BANK0[11]), 

    actualize_valor@spi	PTR struct structspi size(2) Largest target is 12
		 -> main@spi(BANK0[12]), 

    inicie_SPI@spi	PTR struct structspi size(2) Largest target is 12
		 -> main@spi(BANK0[12]), 

    cola_vacia@c	PTR struct eCola size(2) Largest target is 21
		 -> main@cola(BANK0[21]), 

    cola_llena@c	PTR struct eCola size(2) Largest target is 21
		 -> main@cola(BANK0[21]), 

    cola_get@c	PTR struct eCola size(2) Largest target is 21
		 -> main@cola(BANK0[21]), 

    cola_add@c	PTR struct eCola size(2) Largest target is 21
		 -> main@cola(BANK0[21]), 

    inicie_cola@c	PTR struct eCola size(2) Largest target is 21
		 -> main@cola(BANK0[21]), 

    Tm_Baje_periodico@ctp	PTR struct Tm_Periodico size(2) Largest target is 7
		 -> main@timer(BANK0[7]), 

    Tm_Hubo_periodico@ctp	PTR struct Tm_Periodico size(2) Largest target is 7
		 -> main@timer(BANK0[7]), 

    Tm_Procese_tiempo@ctp	PTR struct Tm_Periodico size(2) Largest target is 7
		 -> main@timer(BANK0[7]), 

    Tm_Inicie_periodico@ctp	PTR struct Tm_Periodico size(2) Largest target is 7
		 -> main@timer(BANK0[7]), 

    UART1_SetTxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_Transmit_ISR(), 

    UART1_SetRxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_Receive_ISR(), 

    UART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultErrorHandler(), 

    UART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), 

    UART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), 

    UART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultErrorHandler(), 

    UART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultOverrunErrorHandler(), 

    UART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMRAM

    _main->_Tm_Inicie_periodico
    _enviar_Eusart->_cola_get
    _cola_get->_cola_vacia
    _cola_add->_cola_llena
    _actualizar_recibido_Eusart->___wmul
    _Tm_Inicie_periodico->_actualizar_recibido_Eusart
    _UART1_Initialize->_UART1_SetErrorHandler
    _UART1_Initialize->_UART1_SetFramingErrorHandler
    _UART1_Initialize->_UART1_SetOverrunErrorHandler
    _UART1_Initialize->_UART1_SetRxInterruptHandler
    _UART1_Initialize->_UART1_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                55    55      0    7614
                                             22 COMRAM     3     3      0
                                              0 BANK0     51    51      0
      _ADCC_DischargeSampleCapacitor
           _ADCC_GetConversionResult
                    _ADCC_Initialize
              _ADCC_IsConversionDone
               _ADCC_StartConversion
                    _SPI1_Initialize
                  _SYSTEM_Initialize
            _TMR2_HasOverflowOccured
                    _TMR2_Initialize
                  _Tm_Baje_periodico
                  _Tm_Hubo_periodico
                _Tm_Inicie_periodico
                  _Tm_Procese_tiempo
                   _UART1_Initialize
                  _UART1_is_rx_ready
                  _UART1_is_tx_ready
         _actualizar_recibido_Eusart
                    _actualize_valor
                           _cola_add
                           _cola_get
                         _cola_vacia
             _dato_recibido_completo
                      _enviar_Eusart
               _iniciar_struct_usart
                         _inicie_SPI
                        _inicie_cola
             _recibir_periodo_Eusart
 ---------------------------------------------------------------------------------
 (1) _recibir_periodo_Eusart                               4     2      2     648
                                              2 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _inicie_cola                                          2     0      2     183
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _inicie_SPI                                           2     0      2     338
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _iniciar_struct_usart                                 2     0      2     307
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _enviar_Eusart                                        2     0      2     121
                                             11 COMRAM     2     0      2
                           _cola_get (ARG)
 ---------------------------------------------------------------------------------
 (1) _dato_recibido_completo                               2     0      2     121
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _cola_get                                             5     3      2     552
                                              6 COMRAM     5     3      2
                         _cola_vacia
 ---------------------------------------------------------------------------------
 (1) _cola_vacia                                           4     2      2     211
                                              2 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _cola_add                                             5     2      3     909
                                              6 COMRAM     5     2      3
                         _cola_llena
 ---------------------------------------------------------------------------------
 (2) _cola_llena                                           4     2      2     121
                                              2 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _actualize_valor                                      4     0      4     242
                                              2 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _actualizar_recibido_Eusart                          10     8      2     686
                                              8 COMRAM    10     8      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     472
                                              2 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _UART1_is_tx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART1_is_rx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Tm_Procese_tiempo                                    6     4      2     369
                                              2 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _Tm_Inicie_periodico                                  4     0      4     515
                                             18 COMRAM     4     0      4
         _actualizar_recibido_Eusart (ARG)
 ---------------------------------------------------------------------------------
 (1) _Tm_Hubo_periodico                                    2     0      2     121
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _Tm_Baje_periodico                                    2     0      2     121
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _TMR2_HasOverflowOccured                              1     1      0      45
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     605
                    _ADCC_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                   _UART1_Initialize
 ---------------------------------------------------------------------------------
 (1) _UART1_Initialize                                     0     0      0     605
              _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _UART1_SetTxInterruptHandler                          2     0      2     121
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _UART1_SetRxInterruptHandler                          2     0      2     121
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _UART1_SetOverrunErrorHandler                         2     0      2     121
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _UART1_SetFramingErrorHandler                         2     0      2     121
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _UART1_SetErrorHandler                                2     0      2     121
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADCC_StartConversion                                 1     1      0      22
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADCC_IsConversionDone                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADCC_GetConversionResult                             4     2      2       0
                                              2 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _ADCC_DischargeSampleCapacitor                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           2     2      0       0
                                              0 COMRAM     2     2      0
                   Absolute function *
                  _UART1_Receive_ISR *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (5) _UART1_Transmit_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _UART1_Receive_ISR                                    0     0      0       0
                   Absolute function *
          _UART1_DefaultErrorHandler *
   _UART1_DefaultFramingErrorHandler *
   _UART1_DefaultOverrunErrorHandler *
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (6) _UART1_DefaultOverrunErrorHandler                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _UART1_DefaultFramingErrorHandler                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _UART1_DefaultErrorHandler                            0     0      0       0
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (6) _UART1_RxDataHandler                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_DischargeSampleCapacitor
   _ADCC_GetConversionResult
   _ADCC_Initialize
   _ADCC_IsConversionDone
   _ADCC_StartConversion
   _SPI1_Initialize
   _SYSTEM_Initialize
     _ADCC_Initialize
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _UART1_Initialize
       _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
   _TMR2_HasOverflowOccured
   _TMR2_Initialize
   _Tm_Baje_periodico
   _Tm_Hubo_periodico
   _Tm_Inicie_periodico
     _actualizar_recibido_Eusart (ARG)
       ___wmul
   _Tm_Procese_tiempo
   _UART1_Initialize
   _UART1_is_rx_ready
   _UART1_is_tx_ready
   _actualizar_recibido_Eusart
   _actualize_valor
   _cola_add
     _cola_llena
   _cola_get
     _cola_vacia
   _cola_vacia
   _dato_recibido_completo
   _enviar_Eusart
     _cola_get (ARG)
   _iniciar_struct_usart
   _inicie_SPI
   _inicie_cola
   _recibir_periodo_Eusart

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *
     Absolute function(Fake) *
     _UART1_DefaultErrorHandler *
       _UART1_RxDataHandler
     _UART1_DefaultFramingErrorHandler *
     _UART1_DefaultOverrunErrorHandler *
     _UART1_RxDataHandler *
   _UART1_Transmit_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FFF      0       0      69        0.0%
EEDATA             400      0       0       0        0.0%
BITBIGSFRhhhhll    22A      0       0      50        0.0%
BITBIGSFRlllll     193      0       0      67        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBIGSFRhhhhll     CB      0       0      46        0.0%
BITBIGSFRhhhhll     C6      0       0      43        0.0%
BITBIGSFRhhhhll     AA      0       0      40        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     33      51       5       50.6%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     19      2C       1       46.3%
BITBIGSFRhhhhll     59      0       0      52        0.0%
BITBIGSFRhhhhll     33      0       0      62        0.0%
BITBIGSFRhhhhhh     2D      0       0      36        0.0%
BITBIGSFRhhhhll     29      0       0      60        0.0%
BITBIGSFRhhhhll     1C      0       0      42        0.0%
BITBIGSFRllh        1B      0       0      65        0.0%
BITBIGSFRlh         11      0       0      64        0.0%
BITBIGSFRllllh       E      0       0      66        0.0%
BITBIGSFRhhhhll      B      0       0      59        0.0%
BITBIGSFRhhhhhh      B      0       0      37        0.0%
BITBIGSFRhhhhll      A      0       0      39        0.0%
BITBIGSFRhhhhll      5      0       0      51        0.0%
BITBIGSFRhhhhll      5      0       0      58        0.0%
BITBIGSFRhhhhll      5      0       0      56        0.0%
BITBIGSFRhhhhll      5      0       0      54        0.0%
BITBIGSFRhhhhll      4      0       0      53        0.0%
BITBIGSFRhhhhll      4      0       0      55        0.0%
BITBIGSFRhhhhll      4      0       0      57        0.0%
BITBIGSFRhhhhhl      3      0       0      38        0.0%
BITBIGSFRhhhhll      2      0       0      47        0.0%
BITBIGSFRhhhhll      2      0       0      48        0.0%
BITBIGSFRhhhhll      1      0       0      45        0.0%
BITBIGSFRhhhhll      1      0       0      44        0.0%
BITBIGSFRhhhhll      1      0       0      41        0.0%
BITBIGSFRhhhhll      1      0       0      49        0.0%
BITBIGSFRhhhhll      1      0       0      61        0.0%
BITBIGSFRhl          1      0       0      63        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      7D      68        0.0%
DATA                 0      0      7D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Mar 15 12:46:42 2023

                                          l56 1BC2                        __end_of_FVR_Initialize 1CDA  
                         ___wmul@multiplicand 0005                                           l737 119A  
                                         _PR2 003FAB                         ?_iniciar_struct_usart 0003  
                             _TMR2_Initialize 1B8E                                           tosl 003FFD  
                                         wreg 003FE8                            enviar_Eusart@valor 000C  
               TMR2_HasOverflowOccured@status 0003                            _UART1_Transmit_ISR 1AA0  
                  recibir_periodo_Eusart@disp 0003                                          l3007 10A8  
                                        l3041 114E                                          l3025 10E8  
                                        l3047 1184               ??_ADCC_DischargeSampleCapacitor 0003  
                        _ADCC_StartConversion 1C5E                                          l2921 15DC  
                                        l2925 15E0                                          l2941 1210  
                                        l2783 1A96                                          l2943 1226  
                                        l2929 1614                                          l2953 1320  
                                        l2945 1266                                          l2937 11E6  
                                        l2795 1A64                                          l2947 12A6  
                                        l2955 1336                                          l2949 12E6  
                                        l2897 13E2                                          l2993 1068  
                                        l2997 107E                                          u1100 1C86  
                                        u1120 1C78                                          u1040 1A8C  
                                        u1200 1600                                          u1050 1A5A  
                                        u1060 1C06                                          u1080 1C94  
                                        u1066 1C08                                          u1180 1738  
                                        _LATA 003FBA                                          _LATB 003FBB  
                                        _LATC 003FBC                                          _LATD 003FBD  
                                        _LATE 003FBE                                          u1295 1138  
                                        _T2PR 003FAB                                          _PMD0 0039C0  
                                        _PMD1 0039C1                                          _PMD2 0039C2  
                                        _PMD3 0039C3                                          _PMD4 0039C4  
                                        _PMD5 0039C5                                          _PMD6 0039C6  
                                        _PMD7 0039C7                                          _PLLR 01CEE0  
                                        _TMR2 003FAA                                          _WPUA 003A41  
                                        _WPUB 003A51                                          _WPUC 003A61  
                                        _WPUD 003A71                                          _WPUE 003A81  
                         ?_UART1_Transmit_ISR 0001                                          _main 1008  
                                        fsr1h 003FE2                                          fsr2h 003FDA  
                                        indf2 003FDF                                          fsr1l 003FE1  
                                        fsr2l 003FD9                __end_of_recibir_periodo_Eusart 1378  
                                        prodh 003FF4                                          prodl 003FF3  
                                        start 001A                                  ?_inicie_cola 0003  
               ??_UART1_SetTxInterruptHandler 0005                                  ___param_bank 000000  
                             ?_FVR_Initialize 0001                          ??_UART1_Transmit_ISR 0001  
               __end_of_OSCILLATOR_Initialize 1BC8                                         _ADACT 003EFE  
                                       _ADCAP 003EF5                                         ?_main 0001  
                                       _ADCLK 003EFF                                         _ADCNT 003EEB  
                                       _ADPCH 003EF1                                         _ADREF 003EFD  
                                       _ADRPT 003EEC                                         _U1P1H 003DED  
                                       _U1P2H 003DEF                                         _U1P3H 003DF1  
                                       _U1P1L 003DEC                                         _U1P2L 003DEE  
                                       _T2CON 003FAC                                         _U1P3L 003DF0  
                                       _T2HLT 003FAD                                         _T2TMR 003FAA  
                                       _U1UIR 003DF8                                         _U1RXB 003DE8  
                                       _T2RST 003FAF                                         _U1TXB 003DEA  
                                       i2l590 1AC8                                         i2l646 1980  
                                       _OSCEN 0039DD                                         _TRISA 003FC2  
                                       _TRISB 003FC3                                         _TRISC 003FC4  
                                       _TRISD 003FC5                                         _TRISE 003FC6  
                     ??_ADCC_IsConversionDone 0003                         ?_ADCC_StartConversion 0001  
                                       pclath 003FFA                                         pclatu 003FFB  
                                       plusw2 003FDB                                         status 003FD8  
         __end_of_UART1_SetRxInterruptHandler 1CAC                   _UART1_SetRxInterruptHandler 1CA2  
                 __end_of_Tm_Inicie_periodico 19FC      __end_of_UART1_DefaultFramingErrorHandler 1CF0  
          ??_UART1_DefaultFramingErrorHandler 0001             ?_UART1_DefaultFramingErrorHandler 0001  
            _UART1_DefaultFramingErrorHandler 1CEE                               __initialization 1ACE  
                                __end_of_main 11D2                        _dato_recibido_completo 1C4E  
                 ??_UART1_DefaultErrorHandler 0001                             _Tm_Baje_periodico 1C3C  
                     __end_of_TMR2_Initialize 1BAC                   ?_INTERRUPT_InterruptManager 0001  
                      ??_iniciar_struct_usart 0005                            ?_Tm_Baje_periodico 0003  
                                      ??_main 0017                                 __activetblptr 000003  
                               _enviar_Eusart 1CCA                              _UART1_Initialize 14D6  
                         ??_Tm_Baje_periodico 0005                                        _ADACCH 003EE9  
                                      _ADACCL 003EE8                                        _ADACCU 003EEA  
                                      _ADACQH 003EF4                                        _ADACQL 003EF3  
                                      _ADCON0 003EF8                                        _ADCON1 003EF9  
                                      _ADCON2 003EFA                                        _ADCON3 003EFB  
                                      _ADERRH 003EE3                                        _ADERRL 003EE2  
                                      _ADLTHH 003EDF                                        _ADLTHL 003EDE  
                                      _ADRESH 003EF0                                        _ADRESL 003EEF  
                                      _ADPREH 003EF7                                        _ADPREL 003EF6  
                                      _ADSTAT 003EFC                                        _ADUTHH 003EE1  
                                      _ADUTHL 003EE0                                        _ANSELA 003A40  
                                      _ANSELB 003A50                                        _ANSELC 003A60  
                                      _ANSELD 003A70                                        _ANSELE 003A80  
                                      _RB1I2C 003A5A                                        _RB2I2C 003A5B  
                                      _RD0I2C 003A7A                                        _U1CON0 003DF2  
                                      _U1CON1 003DF3                                        _U1CON2 003DF4  
                                      _RD1I2C 003A7B                                        _RC3I2C 003A6A  
                                      _RC4I2C 003A6B                                        _U1BRGH 003DF6  
                                      _U1FIFO 003DF7                                        _U1BRGL 003DF5  
                                      _RC3PPS 003A13                                        _RC5PPS 003A15  
                                      _ODCONA 003A42                                        _ODCONB 003A52  
                                      _RC6PPS 003A16                                        _ODCONC 003A62  
                                      _ODCOND 003A72                                        _ODCONE 003A82  
                                      i2l2407 17E0                                        i2l2277 1B8A  
                                      i2l2387 1AC4                                        _INLVLA 003A44  
                                      _INLVLB 003A54                                        _INLVLC 003A64  
                                      _INLVLD 003A74                                        _INLVLE 003A84  
                                      _FVRCON 003EC1                                        _OSCFRQ 0039DF  
                           ??_actualize_valor 0007                         _UART1_SetErrorHandler 1CC0  
       __end_of_ADCC_DischargeSampleCapacitor 1CE2                 _ADCC_DischargeSampleCapacitor 1CDA  
                  ??_ADCC_GetConversionResult 0005                              __end_of_cola_add 174E  
                            __end_of_cola_get 1618                     __end_of_Tm_Baje_periodico 1C4E  
                          _bandera_ADC1_start 0025                            _bandera_ADC2_start 0024  
                                      ___wmul 1AF8                             _Tm_Hubo_periodico 1C2A  
                                      clear_0 1AD4                                        clear_1 1AE0  
                          ?_Tm_Hubo_periodico 0003                                        isa$std 000001  
                    ?_TMR2_HasOverflowOccured 0001                               _ADCC_Initialize 18FA  
                              ?_enviar_Eusart 000C                                _PMD_Initialize 1B48  
                                __mediumconst 0000                           ??_Tm_Hubo_periodico 0005  
                      ??_ADCC_StartConversion 0003   UART1_SetTxInterruptHandler@InterruptHandler 0003  
 UART1_SetRxInterruptHandler@InterruptHandler 0003          __end_of_UART1_SetOverrunErrorHandler 1CB6  
                _UART1_SetOverrunErrorHandler 1CAC                     _UART1_DefaultErrorHandler 1CE2  
                           _SYSTEM_Initialize 1B22                                    __accesstop 0060  
                     __end_of__initialization 1AF2                            ?_SYSTEM_Initialize 0001  
                               ___rparam_used 000001                     __end_of_Tm_Hubo_periodico 1C3C  
                              __pcstackCOMRAM 0001                           ??_SYSTEM_Initialize 0005  
                           ??_SPI1_Initialize 0003                              ?_TMR2_Initialize 0001  
                      __end_of_PMD_Initialize 1B6C                            _spi1_configuration 1001  
                   _UART1_FramingErrorHandler 00AF                   ADCC_StartConversion@channel 0003  
                   __end_of_SYSTEM_Initialize 1B48                                    __pbssBANK0 0093  
               ?_UART1_SetOverrunErrorHandler 0003                        ?_UART1_SetErrorHandler 0003  
                                inicie_cola@c 0003                actualizar_recibido_Eusart@disp 0009  
                                     IVTBASEH 003FD6                                       IVTBASEL 003FD5  
                                     IVTBASEU 003FD7                              ??_FVR_Initialize 0003  
              ?_ADCC_DischargeSampleCapacitor 0001                                       ?___wmul 0003  
                     __end_of_ADCC_Initialize 1956               __end_of_TMR2_HasOverflowOccured 1C14  
                                     _ADFLTRH 003EE7                                       _ADFLTRL 003EE6  
                                     _ADPREVH 003EEE                                       _ADPREVL 003EED  
                                     _ADSTPTH 003EE5                                       _ADSTPTL 003EE4  
                             ??_enviar_Eusart 000E                               ?_PMD_Initialize 0001  
                           _UART1_Receive_ISR 174E                                    _cola_llena 1A3A  
                                  _cola_vacia 1A6E                                       _U1ERRIE 003DFA  
                                     _U1ERRIR 003DF9                            ?_UART1_Receive_ISR 0001  
                                     _U1RXPPS 003AE5                                       _OSCCON1 0039D9  
                                     _OSCCON3 0039DB                                       _SPI1CLK 003D1C  
                                     _SPI1RXB 003D10                                       _SPI1TXB 003D11  
                                     _OSCTUNE 0039DE                                       i2u71_48 17CC  
                                     i2u67_48 1778                                       i2u91_48 198A  
                                     i2u67_49 178A                                       i2u91_49 199C  
                                     i2u69_48 17A4                                       i2u69_49 17B6  
                                     i2u88_48 196E                                       _SLRCONA 003A43  
                                     _SLRCONB 003A53                                       _SLRCONC 003A63  
                                     _SLRCOND 003A73                                       _SLRCONE 003A83  
                                   ?_cola_add 0007                                     ?_cola_get 0007  
               __end_of_ADCC_IsConversionDone 1C98                             _Tm_Procese_tiempo 1378  
                         ??_UART1_Receive_ISR 0001                       actualize_valor@valorspi 0005  
                          ?_Tm_Procese_tiempo 0003                       ?_dato_recibido_completo 0003  
                                  _inicie_SPI 17E6                                       __Hparam 0000  
                         ??_Tm_Procese_tiempo 0005                                       __Lparam 0000  
                         _bandera_ADC1_finish 0023                      __end_of_UART1_Initialize 157A  
                         _bandera_ADC2_finish 0022                     __end_of_UART1_Receive_ISR 17E6  
                                __psmallconst 1000                                       __pcinit 1ACE  
                                     __ramtop 1000                                       __ptext0 1008  
                                     __ptext1 11D2                                       __ptext2 19FC  
                                     __ptext3 17E6                                       __ptext4 1878  
                                     __ptext5 1CCA                                       __ptext6 1C4E  
                                     __ptext7 157A                                       __ptext8 1A6E  
                                     __ptext9 16B6                         _OSCILLATOR_Initialize 1BAC  
                                   _T2CONbits 003FAC                               _actualize_valor 1BC8  
                    ??_PIN_MANAGER_Initialize 0003                                     _T2HLTbits 003FAD  
                   __end_of_Tm_Procese_tiempo 1430                                    ??_cola_add 000A  
                                  ??_cola_get 0009                                       main@spi 0060  
                        end_of_initialization 1AF2                                     _T2RSTbits 003FAF  
         __end_of_UART1_SetTxInterruptHandler 1CA2                   _UART1_SetTxInterruptHandler 1C98  
              __end_of_dato_recibido_completo 1C5E                ??_UART1_SetOverrunErrorHandler 0005  
                                   _SPI1TCNTL 003D12                                       postdec1 003FE5  
                                     postdec2 003FDD                                       postinc0 003FEE  
                                     postinc1 003FE6                                       postinc2 003FDE  
                            ?_ADCC_Initialize 0001                           _UART1_RxDataHandler 1B6C  
                          actualize_valor@spi 0003            __end_of_actualizar_recibido_Eusart 16B6  
                  _actualizar_recibido_Eusart 1618                                   ?_cola_llena 0003  
                                 ?_cola_vacia 0003                                     _TRISCbits 003FC4  
                    ??_recibir_periodo_Eusart 0005                          ?_UART1_RxDataHandler 0001  
                             _SPI1_Initialize 1BE2                                   ?_inicie_SPI 0003  
                __end_of_INTERRUPT_Initialize 1CEC                       __end_of_actualize_valor 1BE2  
                              __end_of___wmul 1B22                        ?_OSCILLATOR_Initialize 0001  
                        Tm_Procese_tiempo@ctp 0003                     ?_ADCC_GetConversionResult 0003  
                         start_initialization 1ACE                       ??_UART1_SetErrorHandler 0005  
                       ??_UART1_RxDataHandler 0001                                    ivt0x8_base 0008  
                               _uart1RxBuffer 009B                                 _uart1TxBuffer 00A3  
                               inicie_SPI@spi 0003                                 ??_inicie_cola 0005  
                      Tm_Inicie_periodico@ctp 0013                              ??_PMD_Initialize 0003  
                                    ??___wmul 0007                                   __pbssCOMRAM 001A  
                          _UART1_ErrorHandler 00AB                                 __pcstackBANK0 0060  
                     __end_of_SPI1_Initialize 1BFC                      _UART1_RxInterruptHandler 0020  
                             _primerresultado 001C                  ?_UART1_SetRxInterruptHandler 0003  
                      _PIN_MANAGER_Initialize 1430                             ?_UART1_Initialize 0001  
        __end_of_UART1_SetFramingErrorHandler 1CC0                  _UART1_SetFramingErrorHandler 1CB6  
                          ??_UART1_Initialize 0005                           __end_of_inicie_cola 1A3A  
                            ?_actualize_valor 0003                              _uart1RxLastError 0026  
                ??_INTERRUPT_InterruptManager 0001                                   __smallconst 1000  
                       __end_of_enviar_Eusart 1CD2      __end_of_UART1_DefaultOverrunErrorHandler 1CEE  
          ??_UART1_DefaultOverrunErrorHandler 0001             ?_UART1_DefaultOverrunErrorHandler 0001  
            _UART1_DefaultOverrunErrorHandler 1CEC                  ??_actualizar_recibido_Eusart 000B  
                         _Tm_Inicie_periodico 19AA                                      _T2CLKCON 003FAE  
                                 _U1ERRIRbits 003DF9                          _INTERRUPT_Initialize 1CE8  
                     _TMR2_HasOverflowOccured 1BFC                         _ADCC_IsConversionDone 1C8A  
                  dato_recibido_completo@disp 0003                                ___wmul@product 0007  
       UART1_SetErrorHandler@interruptHandler 0003                                      _LATDbits 003FBD  
                                    _PIE3bits 003993                                  _SPI1CON0bits 003D14  
               ??_UART1_SetRxInterruptHandler 0005                              _segundoresultado 001A  
                                    _PIR2bits 0039A2                                      _SPI1BAUD 003D19  
                                    _PIR3bits 0039A3                                      _PIR4bits 0039A4  
                                    _SPI1CON0 003D14                                      _SPI1CON1 003D15  
                                    _SPI1CON2 003D16                          ?_Tm_Inicie_periodico 0013  
                                   cola_add@c 0007                    __end_of_UART1_Transmit_ISR 1ACE  
                                   cola_get@c 0007                        _recibir_periodo_Eusart 11D2  
               ?_UART1_SetFramingErrorHandler 0003                   ?_actualizar_recibido_Eusart 0009  
                                ??_cola_llena 0005                                    _ADCON0bits 003EF8  
                                  _ADCON1bits 003EF9                                  ??_cola_vacia 0005  
                                  _ADCON2bits 003EFA                                    _ADCON3bits 003EFB  
                           ___wmul@multiplier 0003                                     main@timer 006C  
                            ?_SPI1_Initialize 0001                                   _INTCON0bits 003FD2  
                       ?_INTERRUPT_Initialize 0001                        _uart1TxBufferRemaining 002A  
                           ??_TMR2_Initialize 0003                  __end_of_iniciar_struct_usart 18FA  
                                _uart1RxCount 0027                                  ??_inicie_SPI 0005  
                                  _ADSTATbits 003EFC                            __end_of_cola_llena 1A6E  
                                 _inicie_cola 19FC                            __end_of_cola_vacia 1AA0  
                                    __Hrparam 0000              __end_of_ADCC_GetConversionResult 1C2A  
                                    __Lrparam 0000                         ??_Tm_Inicie_periodico 0017  
                     ??_OSCILLATOR_Initialize 0003                    Tm_Inicie_periodico@periodo 0015  
                    iniciar_struct_usart@disp 0003                                      __pivt0x8 0008  
                   ??_TMR2_HasOverflowOccured 0003                            __end_of_inicie_SPI 1878  
                                    __ptext10 1A3A                                      __ptext11 1BC8  
                                    __ptext20 1BFC                                      __ptext12 1618  
                                    __ptext21 1B22                                      __ptext13 1AF8  
                                    __ptext30 1B48                                      __ptext22 14D6  
                                    __ptext14 1C6E                                      __ptext31 1430  
                                    __ptext23 1C98                                      __ptext15 1C7C  
                                    __ptext40 1956                                      __ptext32 1BAC  
                                    __ptext24 1CA2                                      __ptext16 1378  
                                    _cola_add 16B6                                      __ptext41 1AA0  
                                    __ptext33 1CE8                                      __ptext25 1CAC  
                                    __ptext17 19AA                                      __ptext42 174E  
                                    __ptext34 1CD2                                      __ptext26 1CB6  
                                    __ptext18 1C2A                                      __ptext43 1CEC  
                                    __ptext35 18FA                                      __ptext27 1CC0  
                                    __ptext19 1C3C                                      __ptext44 1CEE  
                                    __ptext36 1C5E                                      __ptext28 1B8E  
                                    __ptext45 1CE2                                      __ptext37 1C8A  
                                    __ptext29 1BE2                                      __ptext46 1B6C  
                                    __ptext38 1C14                                      __ptext47 0000  
                                    __ptext39 1CDA                                      _cola_get 157A  
                      ?_ADCC_IsConversionDone 0001                 __end_of_UART1_SetErrorHandler 1CCA  
                        Tm_Baje_periodico@ctp 0003                     _UART1_OverrunErrorHandler 00AD  
UART1_SetOverrunErrorHandler@interruptHandler 0003                                      isa$xinst 000000  
                __end_of_ADCC_StartConversion 1C6E                    ?_UART1_DefaultErrorHandler 0001  
          __end_of_INTERRUPT_InterruptManager 19AA                    _INTERRUPT_InterruptManager 1956  
                                    main@cola 0073                                      main@disp 0088  
                           _UART1_is_rx_ready 1C7C                             _UART1_is_tx_ready 1C6E  
                          ?_UART1_is_rx_ready 0001                ??_UART1_SetFramingErrorHandler 0005  
                          ?_UART1_is_tx_ready 0001                   __end_of_UART1_RxDataHandler 1B8E  
                                 _uart1RxHead 0029                                   _uart1TxHead 002C  
                                 _uart1RxTail 0028                                   _uart1TxTail 002B  
                                  _FVRCONbits 003EC1                        ??_INTERRUPT_Initialize 0003  
                        Tm_Hubo_periodico@ctp 0003                           ??_UART1_is_rx_ready 0003  
                    ??_dato_recibido_completo 0005                           ??_UART1_is_tx_ready 0003  
                                    intlevel2 0000                       ?_PIN_MANAGER_Initialize 0001  
                                cola_add@dato 0009                           _uart1RxStatusBuffer 0093  
                                  _SPI1SDIPPS 003ADF                                    _SPI1SCKPPS 003ADE  
                   __end_of_UART1_is_rx_ready 1C8A  UART1_SetFramingErrorHandler@interruptHandler 0003  
                   __end_of_UART1_is_tx_ready 1C7C                      _ADCC_GetConversionResult 1C14  
                                cola_get@temp 000B             __end_of_UART1_DefaultErrorHandler 1CE8  
                              _FVR_Initialize 1CD2                          _iniciar_struct_usart 1878  
                    _UART1_TxInterruptHandler 001E                __end_of_PIN_MANAGER_Initialize 14D6  
                           ??_ADCC_Initialize 0003                                   cola_llena@c 0003  
                                 cola_vacia@c 0003                  ?_UART1_SetTxInterruptHandler 0003  
                  __end_of_spi1_configuration 1006                       ?_recibir_periodo_Eusart 0003  
