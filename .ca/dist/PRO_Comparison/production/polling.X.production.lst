

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Mar 15 12:46:59 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F46K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1
    50                           	psect	text39,global,reloc=2,class=CODE,delta=1
    51                           	psect	text40,global,reloc=2,class=CODE,delta=1
    52                           	psect	text41,global,reloc=2,class=CODE,delta=1
    53                           	psect	text42,global,reloc=2,class=CODE,delta=1
    54                           	psect	text43,global,reloc=2,class=CODE,delta=1
    55                           	psect	text44,global,reloc=2,class=CODE,delta=1
    56                           	psect	text45,global,reloc=2,class=CODE,delta=1
    57                           	psect	text46,global,reloc=2,class=CODE,delta=1
    58                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
    59                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1
    61                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    62                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    63                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    64   000000                     
    65                           ; Generated 06/04/2022 GMT
    66                           ; 
    67                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    68                           ; All rights reserved.
    69                           ; 
    70                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    71                           ; 
    72                           ; Redistribution and use in source and binary forms, with or without modification, are
    73                           ; permitted provided that the following conditions are met:
    74                           ; 
    75                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    76                           ;        conditions and the following disclaimer.
    77                           ; 
    78                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    79                           ;        of conditions and the following disclaimer in the documentation and/or other
    80                           ;        materials provided with the distribution. Publication is not required when
    81                           ;        this file is used in an embedded application.
    82                           ; 
    83                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    84                           ;        software without specific prior written permission.
    85                           ; 
    86                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    87                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    88                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    89                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    90                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    91                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    92                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    93                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    94                           ; 
    95                           ; 
    96                           ; Code-generator required, PIC18F46K42 Definitions
    97                           ; 
    98                           ; SFR Addresses
    99   000000                     
   100                           	psect	smallconst
   101   001000                     __psmallconst:
   102                           	callstack 0
   103   001000  00                 	db	0
   104   001001                     _spi1_configuration:
   105                           	callstack 0
   106   001001  02                 	db	2
   107   001002  40                 	db	64
   108   001003  00                 	db	0
   109   001004  00                 	db	0
   110   001005  00                 	db	0
   111   001006                     __end_of_spi1_configuration:
   112                           	callstack 0
   113   000000                     _PIR3bits	set	14755
   114   000000                     _ADERRL	set	16098
   115   000000                     _ADERRH	set	16099
   116   000000                     _ADPREVL	set	16109
   117   000000                     _ADPREVH	set	16110
   118   000000                     _ADFLTRL	set	16102
   119   000000                     _ADFLTRH	set	16103
   120   000000                     _ADACCL	set	16104
   121   000000                     _ADACCH	set	16105
   122   000000                     _ADCNT	set	16107
   123   000000                     _ADRESL	set	16111
   124   000000                     _ADRESH	set	16112
   125   000000                     _ADCON0	set	16120
   126   000000                     _ADCON1	set	16121
   127   000000                     _ADPREH	set	16119
   128   000000                     _ADPREL	set	16118
   129   000000                     _ADCAP	set	16117
   130   000000                     _ADACQH	set	16116
   131   000000                     _ADPCH	set	16113
   132   000000                     _ADRPT	set	16108
   133   000000                     _ADACCU	set	16106
   134   000000                     _ADSTPTH	set	16101
   135   000000                     _ADSTPTL	set	16100
   136   000000                     _ADUTHH	set	16097
   137   000000                     _ADUTHL	set	16096
   138   000000                     _ADLTHH	set	16095
   139   000000                     _T2CON	set	16300
   140   000000                     _TRISD	set	16325
   141   000000                     _TRISC	set	16324
   142   000000                     _TRISB	set	16323
   143   000000                     _LATC	set	16316
   144   000000                     _LATB	set	16315
   145   000000                     _OSCTUNE	set	14814
   146   000000                     _OSCFRQ	set	14815
   147   000000                     _OSCEN	set	14813
   148   000000                     _PLLR	set	118496
   149   000000                     _U1ERRIRbits	set	15865
   150   000000                     _SPI1CON0bits	set	15636
   151   000000                     _FVRCONbits	set	16065
   152   000000                     _ADCON1bits	set	16121
   153   000000                     _ADSTATbits	set	16124
   154   000000                     _ADCON2bits	set	16122
   155   000000                     _ADCON3bits	set	16123
   156   000000                     _ADCON0bits	set	16120
   157   000000                     _LATDbits	set	16317
   158   000000                     _TRISCbits	set	16324
   159   000000                     _PR2	set	16299
   160   000000                     _TMR2	set	16298
   161   000000                     _T2CONbits	set	16300
   162   000000                     _T2RSTbits	set	16303
   163   000000                     _T2HLTbits	set	16301
   164   000000                     _PIE3bits	set	14739
   165   000000                     _PIR2bits	set	14754
   166   000000                     _PIR4bits	set	14756
   167   000000                     _PMD0	set	14784
   168   000000                     _OSCCON1	set	14809
   169   000000                     _OSCCON3	set	14811
   170   000000                     _RC3PPS	set	14867
   171   000000                     _ANSELA	set	14912
   172   000000                     _ANSELB	set	14928
   173   000000                     _ANSELC	set	14944
   174   000000                     _ANSELD	set	14960
   175   000000                     _LATA	set	16314
   176   000000                     _LATD	set	16317
   177   000000                     _LATE	set	16318
   178   000000                     _PMD7	set	14791
   179   000000                     _PMD6	set	14790
   180   000000                     _PMD5	set	14789
   181   000000                     _PMD4	set	14788
   182   000000                     _PMD3	set	14787
   183   000000                     _PMD2	set	14786
   184   000000                     _PMD1	set	14785
   185   000000                     _TRISA	set	16322
   186   000000                     _TRISE	set	16326
   187   000000                     _INTCON0bits	set	16338
   188   000000                     _INLVLD	set	14964
   189   000000                     _SLRCOND	set	14963
   190   000000                     _ODCOND	set	14962
   191   000000                     _RD0I2C	set	14970
   192   000000                     _WPUD	set	14961
   193   000000                     _ANSELE	set	14976
   194   000000                     _INLVLC	set	14948
   195   000000                     _SLRCONC	set	14947
   196   000000                     _ODCONC	set	14946
   197   000000                     _RC3I2C	set	14954
   198   000000                     _WPUC	set	14945
   199   000000                     _INLVLB	set	14932
   200   000000                     _SLRCONB	set	14931
   201   000000                     _ODCONB	set	14930
   202   000000                     _RB1I2C	set	14938
   203   000000                     _WPUB	set	14929
   204   000000                     _SPI1SCKPPS	set	15070
   205   000000                     _INLVLE	set	14980
   206   000000                     _SLRCONE	set	14979
   207   000000                     _ODCONE	set	14978
   208   000000                     _WPUE	set	14977
   209   000000                     _INLVLA	set	14916
   210   000000                     _SLRCONA	set	14915
   211   000000                     _ODCONA	set	14914
   212   000000                     _WPUA	set	14913
   213   000000                     _RB2I2C	set	14939
   214   000000                     _RC4I2C	set	14955
   215   000000                     _RD1I2C	set	14971
   216   000000                     _SPI1SDIPPS	set	15071
   217   000000                     _U1RXPPS	set	15077
   218   000000                     _RC5PPS	set	14869
   219   000000                     _RC6PPS	set	14870
   220   000000                     _SPI1RXB	set	15632
   221   000000                     _SPI1TXB	set	15633
   222   000000                     _SPI1TCNTL	set	15634
   223   000000                     _SPI1CON0	set	15636
   224   000000                     _T2TMR	set	16298
   225   000000                     _T2PR	set	16299
   226   000000                     _T2HLT	set	16301
   227   000000                     _T2CLKCON	set	16302
   228   000000                     _T2RST	set	16303
   229   000000                     _SPI1BAUD	set	15641
   230   000000                     _SPI1CLK	set	15644
   231   000000                     _SPI1CON2	set	15638
   232   000000                     _SPI1CON1	set	15637
   233   000000                     _U1RXB	set	15848
   234   000000                     _U1TXB	set	15850
   235   000000                     _U1P1L	set	15852
   236   000000                     _FVRCON	set	16065
   237   000000                     _ADLTHL	set	16094
   238   000000                     _ADACQL	set	16115
   239   000000                     _ADCLK	set	16127
   240   000000                     _ADACT	set	16126
   241   000000                     _ADREF	set	16125
   242   000000                     _ADSTAT	set	16124
   243   000000                     _ADCON3	set	16123
   244   000000                     _ADCON2	set	16122
   245   000000                     _U1ERRIE	set	15866
   246   000000                     _U1ERRIR	set	15865
   247   000000                     _U1UIR	set	15864
   248   000000                     _U1FIFO	set	15863
   249   000000                     _U1BRGH	set	15862
   250   000000                     _U1BRGL	set	15861
   251   000000                     _U1CON2	set	15860
   252   000000                     _U1CON1	set	15859
   253   000000                     _U1CON0	set	15858
   254   000000                     _U1P3H	set	15857
   255   000000                     _U1P3L	set	15856
   256   000000                     _U1P2H	set	15855
   257   000000                     _U1P2L	set	15854
   258   000000                     _U1P1H	set	15853
   259   001006  00                 	db	0	; dummy byte at the end
   260   000000                     
   261                           ; #config settings
   262                           
   263                           	psect	cinit
   264   001CA6                     __pcinit:
   265                           	callstack 0
   266   001CA6                     start_initialization:
   267                           	callstack 0
   268   001CA6                     __initialization:
   269                           	callstack 0
   270                           
   271                           ; Clear objects allocated to BANK0 (30 bytes)
   272   001CA6  EE00  F093         	lfsr	0,__pbssBANK0
   273   001CAA  0E1E               	movlw	30
   274   001CAC                     clear_0:
   275   001CAC  6AEE               	clrf	postinc0,c
   276   001CAE  06E8               	decf	wreg,f,c
   277   001CB0  E1FD               	bnz	clear_0
   278                           
   279                           ; Clear objects allocated to COMRAM (19 bytes)
   280   001CB2  EE00  F01A         	lfsr	0,__pbssCOMRAM
   281   001CB6  0E13               	movlw	19
   282   001CB8                     clear_1:
   283   001CB8  6AEE               	clrf	postinc0,c
   284   001CBA  06E8               	decf	wreg,f,c
   285   001CBC  E1FD               	bnz	clear_1
   286                           
   287                           ;
   288                           ; Setup IVTBASE
   289                           ;
   290   001CBE  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   291   001CC0  6ED5               	movwf	213,c
   292   001CC2  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   293   001CC4  6ED6               	movwf	214,c
   294   001CC6  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   295   001CC8  6ED7               	movwf	215,c
   296   001CCA                     end_of_initialization:
   297                           	callstack 0
   298   001CCA                     __end_of__initialization:
   299                           	callstack 0
   300   001CCA  0100               	movlb	0
   301   001CCC  EF04  F008         	goto	_main	;jump to C main() function
   302                           
   303                           	psect	bssCOMRAM
   304   00001A                     __pbssCOMRAM:
   305                           	callstack 0
   306   00001A                     _segundoresultado:
   307                           	callstack 0
   308   00001A                     	ds	2
   309   00001C                     _primerresultado:
   310                           	callstack 0
   311   00001C                     	ds	2
   312   00001E                     _UART1_TxInterruptHandler:
   313                           	callstack 0
   314   00001E                     	ds	2
   315   000020                     _UART1_RxInterruptHandler:
   316                           	callstack 0
   317   000020                     	ds	2
   318   000022                     _bandera_ADC2_finish:
   319                           	callstack 0
   320   000022                     	ds	1
   321   000023                     _bandera_ADC1_finish:
   322                           	callstack 0
   323   000023                     	ds	1
   324   000024                     _bandera_ADC2_start:
   325                           	callstack 0
   326   000024                     	ds	1
   327   000025                     _bandera_ADC1_start:
   328                           	callstack 0
   329   000025                     	ds	1
   330   000026                     _uart1RxLastError:
   331                           	callstack 0
   332   000026                     	ds	1
   333   000027                     _uart1RxCount:
   334                           	callstack 0
   335   000027                     	ds	1
   336   000028                     _uart1RxTail:
   337                           	callstack 0
   338   000028                     	ds	1
   339   000029                     _uart1RxHead:
   340                           	callstack 0
   341   000029                     	ds	1
   342   00002A                     _uart1TxBufferRemaining:
   343                           	callstack 0
   344   00002A                     	ds	1
   345   00002B                     _uart1TxTail:
   346                           	callstack 0
   347   00002B                     	ds	1
   348   00002C                     _uart1TxHead:
   349                           	callstack 0
   350   00002C                     	ds	1
   351                           
   352                           	psect	bssBANK0
   353   000093                     __pbssBANK0:
   354                           	callstack 0
   355   000093                     _uart1RxStatusBuffer:
   356                           	callstack 0
   357   000093                     	ds	8
   358   00009B                     _uart1RxBuffer:
   359                           	callstack 0
   360   00009B                     	ds	8
   361   0000A3                     _uart1TxBuffer:
   362                           	callstack 0
   363   0000A3                     	ds	8
   364   0000AB                     _UART1_ErrorHandler:
   365                           	callstack 0
   366   0000AB                     	ds	2
   367   0000AD                     _UART1_OverrunErrorHandler:
   368                           	callstack 0
   369   0000AD                     	ds	2
   370   0000AF                     _UART1_FramingErrorHandler:
   371                           	callstack 0
   372   0000AF                     	ds	2
   373                           
   374                           	psect	cstackBANK0
   375   000060                     __pcstackBANK0:
   376                           	callstack 0
   377   000060                     main@spi:
   378                           	callstack 0
   379                           
   380                           ; 12 bytes @ 0x0
   381   000060                     	ds	12
   382   00006C                     main@timer:
   383                           	callstack 0
   384                           
   385                           ; 7 bytes @ 0xC
   386   00006C                     	ds	7
   387   000073                     main@cola:
   388                           	callstack 0
   389                           
   390                           ; 21 bytes @ 0x13
   391   000073                     	ds	21
   392   000088                     main@disp:
   393                           	callstack 0
   394                           
   395                           ; 11 bytes @ 0x28
   396   000088                     	ds	11
   397                           
   398                           	psect	cstackCOMRAM
   399   000001                     __pcstackCOMRAM:
   400                           	callstack 0
   401   000001                     ??_INTERRUPT_InterruptManager:
   402   000001                     
   403                           ; 1 bytes @ 0x0
   404   000001                     	ds	2
   405   000003                     ?_cola_vacia:
   406                           	callstack 0
   407   000003                     ?_cola_llena:
   408                           	callstack 0
   409   000003                     ?_ADCC_GetConversionResult:
   410                           	callstack 0
   411   000003                     ?___wmul:
   412                           	callstack 0
   413   000003                     TMR2_HasOverflowOccured@status:
   414                           	callstack 0
   415   000003                     ADCC_StartConversion@channel:
   416                           	callstack 0
   417   000003                     UART1_SetFramingErrorHandler@interruptHandler:
   418                           	callstack 0
   419   000003                     UART1_SetOverrunErrorHandler@interruptHandler:
   420                           	callstack 0
   421   000003                     UART1_SetErrorHandler@interruptHandler:
   422                           	callstack 0
   423   000003                     UART1_SetRxInterruptHandler@InterruptHandler:
   424                           	callstack 0
   425   000003                     UART1_SetTxInterruptHandler@InterruptHandler:
   426                           	callstack 0
   427   000003                     Tm_Procese_tiempo@ctp:
   428                           	callstack 0
   429   000003                     Tm_Hubo_periodico@ctp:
   430                           	callstack 0
   431   000003                     Tm_Baje_periodico@ctp:
   432                           	callstack 0
   433   000003                     inicie_cola@c:
   434                           	callstack 0
   435   000003                     cola_llena@c:
   436                           	callstack 0
   437   000003                     cola_vacia@c:
   438                           	callstack 0
   439   000003                     inicie_SPI@spi:
   440                           	callstack 0
   441   000003                     actualize_valor@spi:
   442                           	callstack 0
   443   000003                     iniciar_struct_usart@disp:
   444                           	callstack 0
   445   000003                     recibir_periodo_Eusart@disp:
   446                           	callstack 0
   447   000003                     dato_recibido_completo@disp:
   448                           	callstack 0
   449   000003                     ___wmul@multiplier:
   450                           	callstack 0
   451                           
   452                           ; 2 bytes @ 0x2
   453   000003                     	ds	2
   454   000005                     ??_Tm_Procese_tiempo:
   455   000005                     ??_recibir_periodo_Eusart:
   456   000005                     ??_ADCC_GetConversionResult:
   457   000005                     actualize_valor@valorspi:
   458                           	callstack 0
   459   000005                     ___wmul@multiplicand:
   460                           	callstack 0
   461                           
   462                           ; 2 bytes @ 0x4
   463   000005                     	ds	2
   464   000007                     cola_add@c:
   465                           	callstack 0
   466   000007                     cola_get@c:
   467                           	callstack 0
   468   000007                     ___wmul@product:
   469                           	callstack 0
   470                           
   471                           ; 2 bytes @ 0x6
   472   000007                     	ds	2
   473   000009                     ??_cola_get:
   474   000009                     ?_actualizar_recibido_Eusart:
   475                           	callstack 0
   476   000009                     cola_add@dato:
   477                           	callstack 0
   478   000009                     actualizar_recibido_Eusart@disp:
   479                           	callstack 0
   480                           
   481                           ; 2 bytes @ 0x8
   482   000009                     	ds	1
   483   00000A                     ??_cola_add:
   484                           
   485                           ; 1 bytes @ 0x9
   486   00000A                     	ds	1
   487   00000B                     ??_actualizar_recibido_Eusart:
   488   00000B                     cola_get@temp:
   489                           	callstack 0
   490                           
   491                           ; 1 bytes @ 0xA
   492   00000B                     	ds	1
   493   00000C                     enviar_Eusart@valor:
   494                           	callstack 0
   495                           
   496                           ; 2 bytes @ 0xB
   497   00000C                     	ds	2
   498   00000E                     
   499                           ; 1 bytes @ 0xD
   500   00000E                     	ds	5
   501   000013                     Tm_Inicie_periodico@ctp:
   502                           	callstack 0
   503                           
   504                           ; 2 bytes @ 0x12
   505   000013                     	ds	2
   506   000015                     Tm_Inicie_periodico@periodo:
   507                           	callstack 0
   508                           
   509                           ; 2 bytes @ 0x14
   510   000015                     	ds	2
   511   000017                     ??_main:
   512                           
   513                           ; 1 bytes @ 0x16
   514   000017                     	ds	3
   515                           
   516 ;;
   517 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   518 ;;
   519 ;; *************** function _main *****************
   520 ;; Defined at:
   521 ;;		line 62 in file "main.c"
   522 ;; Parameters:    Size  Location     Type
   523 ;;		None
   524 ;; Auto vars:     Size  Location     Type
   525 ;;  cola           21   19[BANK0 ] struct eCola
   526 ;;  spi            12    0[BANK0 ] struct structspi
   527 ;;  disp           11   40[BANK0 ] struct usart
   528 ;;  timer           7   12[BANK0 ] struct Tm_Periodico
   529 ;;  estructuraSp    1    0        enum E16329
   530 ;; Return value:  Size  Location     Type
   531 ;;                  1    wreg      void 
   532 ;; Registers used:
   533 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   534 ;; Tracked objects:
   535 ;;		On entry : 0/0
   536 ;;		On exit  : 0/0
   537 ;;		Unchanged: 0/0
   538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   540 ;;      Locals:         0      51       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   541 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   542 ;;      Totals:         3      51       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   543 ;;Total ram usage:       54 bytes
   544 ;; Hardware stack levels required when called: 7
   545 ;; This function calls:
   546 ;;		_ADCC_DischargeSampleCapacitor
   547 ;;		_ADCC_GetConversionResult
   548 ;;		_ADCC_Initialize
   549 ;;		_ADCC_IsConversionDone
   550 ;;		_ADCC_StartConversion
   551 ;;		_SPI1_Initialize
   552 ;;		_SYSTEM_Initialize
   553 ;;		_TMR2_HasOverflowOccured
   554 ;;		_TMR2_Initialize
   555 ;;		_Tm_Baje_periodico
   556 ;;		_Tm_Hubo_periodico
   557 ;;		_Tm_Inicie_periodico
   558 ;;		_Tm_Procese_tiempo
   559 ;;		_UART1_Initialize
   560 ;;		_UART1_is_rx_ready
   561 ;;		_UART1_is_tx_ready
   562 ;;		_actualizar_recibido_Eusart
   563 ;;		_actualize_valor
   564 ;;		_cola_add
   565 ;;		_cola_get
   566 ;;		_cola_vacia
   567 ;;		_dato_recibido_completo
   568 ;;		_enviar_Eusart
   569 ;;		_iniciar_struct_usart
   570 ;;		_inicie_SPI
   571 ;;		_inicie_cola
   572 ;;		_recibir_periodo_Eusart
   573 ;; This function is called by:
   574 ;;		Startup code after reset
   575 ;; This function uses a non-reentrant model
   576 ;;
   577                           
   578                           	psect	text0
   579   001008                     __ptext0:
   580                           	callstack 0
   581   001008                     _main:
   582                           	callstack 24
   583   001008                     
   584                           ;main.c: 65:     SYSTEM_Initialize();
   585   001008  EC7D  F00E         	call	_SYSTEM_Initialize	;wreg free
   586   00100C                     
   587                           ;main.c: 77:     TMR2_Initialize();
   588   00100C  ECB5  F00E         	call	_TMR2_Initialize	;wreg free
   589   001010                     
   590                           ;main.c: 78:     ADCC_Initialize();
   591   001010  EC4E  F00D         	call	_ADCC_Initialize	;wreg free
   592   001014                     
   593                           ;main.c: 79:     SPI1_Initialize();
   594   001014  ECD1  F00E         	call	_SPI1_Initialize	;wreg free
   595   001018                     
   596                           ;main.c: 80:     UART1_Initialize();
   597   001018  ECDF  F00B         	call	_UART1_Initialize	;wreg free
   598   00101C                     
   599                           ;main.c: 83:     Tm_Inicie_periodico(&timer,1000);
   600   00101C  0E6C               	movlw	low main@timer
   601   00101E  6E13               	movwf	Tm_Inicie_periodico@ctp^0,c
   602   001020  0E00               	movlw	high main@timer
   603   001022  6E14               	movwf	(Tm_Inicie_periodico@ctp+1)^0,c
   604   001024  0E03               	movlw	3
   605   001026  6E16               	movwf	(Tm_Inicie_periodico@periodo+1)^0,c
   606   001028  0EE8               	movlw	232
   607   00102A  6E15               	movwf	Tm_Inicie_periodico@periodo^0,c
   608   00102C  EC7C  F00D         	call	_Tm_Inicie_periodico	;wreg free
   609   001030                     
   610                           ;main.c: 84:     eCola cola;;main.c: 85:     inicie_cola(&cola);
   611   001030  0E73               	movlw	low main@cola
   612   001032  6E03               	movwf	inicie_cola@c^0,c
   613   001034  0E00               	movlw	high main@cola
   614   001036  6E04               	movwf	(inicie_cola@c+1)^0,c
   615   001038  EC08  F00E         	call	_inicie_cola	;wreg free
   616   00103C                     
   617                           ;main.c: 87:     structspi spi;;main.c: 88:     inicie_SPI(&spi);
   618   00103C  0E60               	movlw	low main@spi
   619   00103E  6E03               	movwf	inicie_SPI@spi^0,c
   620   001040  0E00               	movlw	high main@spi
   621   001042  6E04               	movwf	(inicie_SPI@spi+1)^0,c
   622   001044  EC80  F00C         	call	_inicie_SPI	;wreg free
   623   001048                     
   624                           ;main.c: 89:     actualize_valor(&spi,2048);
   625   001048  0E60               	movlw	low main@spi
   626   00104A  6E03               	movwf	actualize_valor@spi^0,c
   627   00104C  0E00               	movlw	high main@spi
   628   00104E  6E04               	movwf	(actualize_valor@spi+1)^0,c
   629   001050  0E08               	movlw	8
   630   001052  6E06               	movwf	(actualize_valor@valorspi+1)^0,c
   631   001054  0E00               	movlw	0
   632   001056  6E05               	movwf	actualize_valor@valorspi^0,c
   633   001058  ECC4  F00E         	call	_actualize_valor	;wreg free
   634   00105C                     
   635                           ;main.c: 90:     usart disp;;main.c: 91:     iniciar_struct_usart(&disp);
   636   00105C  0E88               	movlw	low main@disp
   637   00105E  6E03               	movwf	iniciar_struct_usart@disp^0,c
   638   001060  0E00               	movlw	high main@disp
   639   001062  6E04               	movwf	(iniciar_struct_usart@disp+1)^0,c
   640   001064  EC0D  F00D         	call	_iniciar_struct_usart	;wreg free
   641   001068                     l2993:
   642                           
   643                           ;main.c: 93:     {;main.c: 106:         if(TMR2_HasOverflowOccured()){
   644   001068  EC27  F00E         	call	_TMR2_HasOverflowOccured	;wreg free
   645   00106C  0900               	iorlw	0
   646   00106E  B4D8               	btfsc	status,2,c
   647   001070  EF3C  F008         	goto	u1231
   648   001074  EF3E  F008         	goto	u1230
   649   001078                     u1231:
   650   001078  EF44  F008         	goto	l2997
   651   00107C                     u1230:
   652   00107C                     
   653                           ;main.c: 107:             Tm_Procese_tiempo(&timer);
   654   00107C  0E6C               	movlw	low main@timer
   655   00107E  6E03               	movwf	Tm_Procese_tiempo@ctp^0,c
   656   001080  0E00               	movlw	high main@timer
   657   001082  6E04               	movwf	(Tm_Procese_tiempo@ctp+1)^0,c
   658   001084  EC0E  F00A         	call	_Tm_Procese_tiempo	;wreg free
   659   001088                     l2997:
   660                           
   661                           ;main.c: 109:         if(Tm_Hubo_periodico(&timer)){
   662   001088  0E6C               	movlw	low main@timer
   663   00108A  6E03               	movwf	Tm_Hubo_periodico@ctp^0,c
   664   00108C  0E00               	movlw	high main@timer
   665   00108E  6E04               	movwf	(Tm_Hubo_periodico@ctp+1)^0,c
   666   001090  EC0A  F00F         	call	_Tm_Hubo_periodico	;wreg free
   667   001094  0900               	iorlw	0
   668   001096  B4D8               	btfsc	status,2,c
   669   001098  EF50  F008         	goto	u1241
   670   00109C  EF52  F008         	goto	u1240
   671   0010A0                     u1241:
   672   0010A0  EF5E  F008         	goto	l3007
   673   0010A4                     u1240:
   674   0010A4                     
   675                           ;main.c: 110:             Tm_Baje_periodico(&timer);
   676   0010A4  0E6C               	movlw	low main@timer
   677   0010A6  6E03               	movwf	Tm_Baje_periodico@ctp^0,c
   678   0010A8  0E00               	movlw	high main@timer
   679   0010AA  6E04               	movwf	(Tm_Baje_periodico@ctp+1)^0,c
   680   0010AC  EC13  F00F         	call	_Tm_Baje_periodico	;wreg free
   681   0010B0  88BD               	bsf	189,4,c	;volatile
   682   0010B2                     
   683                           ;main.c: 115:             ADCC_StartConversion(primerADC);
   684   0010B2  0E06               	movlw	6
   685   0010B4  EC24  F00F         	call	_ADCC_StartConversion
   686   0010B8                     
   687                           ;main.c: 116:             bandera_ADC1_finish = 1;
   688   0010B8  0E01               	movlw	1
   689   0010BA  6E23               	movwf	_bandera_ADC1_finish^0,c
   690   0010BC                     l3007:
   691                           
   692                           ;main.c: 119:         if(ADCC_IsConversionDone() && bandera_ADC1_finish){
   693   0010BC  ECF4  F00E         	call	_ADCC_IsConversionDone	;wreg free
   694   0010C0  0900               	iorlw	0
   695   0010C2  B4D8               	btfsc	status,2,c
   696   0010C4  EF66  F008         	goto	u1251
   697   0010C8  EF68  F008         	goto	u1250
   698   0010CC                     u1251:
   699   0010CC  EF88  F008         	goto	l3025
   700   0010D0                     u1250:
   701   0010D0  5023               	movf	_bandera_ADC1_finish^0,w,c
   702   0010D2  B4D8               	btfsc	status,2,c
   703   0010D4  EF6E  F008         	goto	u1261
   704   0010D8  EF70  F008         	goto	u1260
   705   0010DC                     u1261:
   706   0010DC  EF88  F008         	goto	l3025
   707   0010E0                     u1260:
   708   0010E0                     
   709                           ;main.c: 121:             primerresultado = ADCC_GetConversionResult();
   710   0010E0  ECFF  F00E         	call	_ADCC_GetConversionResult	;wreg free
   711   0010E4  C003  F01C         	movff	?_ADCC_GetConversionResult,_primerresultado
   712   0010E8  C004  F01D         	movff	?_ADCC_GetConversionResult+1,_primerresultado+1
   713   0010EC                     
   714                           ;main.c: 123:             ADCC_DischargeSampleCapacitor();
   715   0010EC  EC4D  F00F         	call	_ADCC_DischargeSampleCapacitor	;wreg free
   716   0010F0                     
   717                           ;main.c: 125:             ADCC_StartConversion(segundoADC);
   718   0010F0  0E05               	movlw	5
   719   0010F2  EC24  F00F         	call	_ADCC_StartConversion
   720   0010F6                     
   721                           ;main.c: 127:             cola_add(&cola,(char)(primerresultado));
   722   0010F6  0E73               	movlw	low main@cola
   723   0010F8  6E07               	movwf	cola_add@c^0,c
   724   0010FA  0E00               	movlw	high main@cola
   725   0010FC  6E08               	movwf	(cola_add@c+1)^0,c
   726   0010FE  C01C  F009         	movff	_primerresultado,cola_add@dato
   727   001102  EC35  F00B         	call	_cola_add	;wreg free
   728   001106  98BD               	bcf	189,4,c	;volatile
   729   001108                     
   730                           ;main.c: 132:             bandera_ADC1_finish = 0;
   731   001108  0E00               	movlw	0
   732   00110A  6E23               	movwf	_bandera_ADC1_finish^0,c
   733   00110C                     
   734                           ;main.c: 133:             bandera_ADC2_finish = 1;
   735   00110C  0E01               	movlw	1
   736   00110E  6E22               	movwf	_bandera_ADC2_finish^0,c
   737   001110                     l3025:
   738                           
   739                           ;main.c: 137:         if(bandera_ADC2_finish && ADCC_IsConversionDone()){
   740   001110  5022               	movf	_bandera_ADC2_finish^0,w,c
   741   001112  B4D8               	btfsc	status,2,c
   742   001114  EF8E  F008         	goto	u1271
   743   001118  EF90  F008         	goto	u1270
   744   00111C                     u1271:
   745   00111C  EFC6  F008         	goto	l3041
   746   001120                     u1270:
   747   001120  ECF4  F00E         	call	_ADCC_IsConversionDone	;wreg free
   748   001124  0900               	iorlw	0
   749   001126  B4D8               	btfsc	status,2,c
   750   001128  EF98  F008         	goto	u1281
   751   00112C  EF9A  F008         	goto	u1280
   752   001130                     u1281:
   753   001130  EFC6  F008         	goto	l3041
   754   001134                     u1280:
   755   001134                     
   756                           ;main.c: 138:             bandera_ADC2_finish = 0;
   757   001134  0E00               	movlw	0
   758   001136  6E22               	movwf	_bandera_ADC2_finish^0,c
   759   001138                     
   760                           ;main.c: 139:             segundoresultado = ADCC_GetConversionResult();
   761   001138  ECFF  F00E         	call	_ADCC_GetConversionResult	;wreg free
   762   00113C  C003  F01A         	movff	?_ADCC_GetConversionResult,_segundoresultado
   763   001140  C004  F01B         	movff	?_ADCC_GetConversionResult+1,_segundoresultado+1
   764   001144                     
   765                           ;main.c: 140:             segundoresultado = 3000;
   766   001144  0E0B               	movlw	11
   767   001146  6E1B               	movwf	(_segundoresultado+1)^0,c
   768   001148  0EB8               	movlw	184
   769   00114A  6E1A               	movwf	_segundoresultado^0,c
   770   00114C                     
   771                           ;main.c: 141:             ADCC_DischargeSampleCapacitor();
   772   00114C  EC4D  F00F         	call	_ADCC_DischargeSampleCapacitor	;wreg free
   773   001150                     
   774                           ;main.c: 142:             cola_add(&cola,segundoresultado & 0xFF);
   775   001150  0E73               	movlw	low main@cola
   776   001152  6E07               	movwf	cola_add@c^0,c
   777   001154  0E00               	movlw	high main@cola
   778   001156  6E08               	movwf	(cola_add@c+1)^0,c
   779   001158  0EB8               	movlw	184
   780   00115A  6E09               	movwf	cola_add@dato^0,c
   781   00115C  EC35  F00B         	call	_cola_add	;wreg free
   782   001160                     
   783                           ;main.c: 143:             cola_add(&cola,((primerresultado & 0xF00) >> 4) | ((segundores
      +                          ultado & 0xF00) >> 8 ));
   784   001160  0E73               	movlw	low main@cola
   785   001162  6E07               	movwf	cola_add@c^0,c
   786   001164  0E00               	movlw	high main@cola
   787   001166  6E08               	movwf	(cola_add@c+1)^0,c
   788   001168  C01C  F017         	movff	_primerresultado,??_main
   789   00116C  C01D  F018         	movff	_primerresultado+1,??_main+1
   790   001170  0E04               	movlw	4
   791   001172  6E19               	movwf	(??_main+2)^0,c
   792   001174                     u1295:
   793   001174  3418               	rlcf	(??_main+1)^0,w,c
   794   001176  3218               	rrcf	(??_main+1)^0,f,c
   795   001178  3217               	rrcf	??_main^0,f,c
   796   00117A  2E19               	decfsz	(??_main+2)^0,f,c
   797   00117C  EFBA  F008         	goto	u1295
   798   001180  5017               	movf	??_main^0,w,c
   799   001182  0BF0               	andlw	240
   800   001184  090B               	iorlw	11
   801   001186  6E09               	movwf	cola_add@dato^0,c
   802   001188  EC35  F00B         	call	_cola_add	;wreg free
   803   00118C                     l3041:
   804                           
   805                           ;main.c: 165:         if(!(cola_vacia(&cola)) && UART1_is_tx_ready()){
   806   00118C  0E73               	movlw	low main@cola
   807   00118E  6E03               	movwf	cola_vacia@c^0,c
   808   001190  0E00               	movlw	high main@cola
   809   001192  6E04               	movwf	(cola_vacia@c+1)^0,c
   810   001194  ECE8  F00D         	call	_cola_vacia	;wreg free
   811   001198  5003               	movf	?_cola_vacia^0,w,c
   812   00119A  1004               	iorwf	(?_cola_vacia+1)^0,w,c
   813   00119C  A4D8               	btfss	status,2,c
   814   00119E  EFD3  F008         	goto	u1301
   815   0011A2  EFD5  F008         	goto	u1300
   816   0011A6                     u1301:
   817   0011A6  EFEB  F008         	goto	l3047
   818   0011AA                     u1300:
   819   0011AA  ECDE  F00E         	call	_UART1_is_tx_ready	;wreg free
   820   0011AE  0900               	iorlw	0
   821   0011B0  B4D8               	btfsc	status,2,c
   822   0011B2  EFDD  F008         	goto	u1311
   823   0011B6  EFDF  F008         	goto	u1310
   824   0011BA                     u1311:
   825   0011BA  EFEB  F008         	goto	l3047
   826   0011BE                     u1310:
   827   0011BE                     
   828                           ;main.c: 166:            enviar_Eusart(cola_get(&cola));
   829   0011BE  0E73               	movlw	low main@cola
   830   0011C0  6E07               	movwf	cola_get@c^0,c
   831   0011C2  0E00               	movlw	high main@cola
   832   0011C4  6E08               	movwf	(cola_get@c+1)^0,c
   833   0011C6  ECD9  F00A         	call	_cola_get	;wreg free
   834   0011CA  6E17               	movwf	??_main^0,c
   835   0011CC  5017               	movf	??_main^0,w,c
   836   0011CE  6E0C               	movwf	enviar_Eusart@valor^0,c
   837   0011D0  6A0D               	clrf	(enviar_Eusart@valor+1)^0,c
   838   0011D2  EC45  F00F         	call	_enviar_Eusart	;wreg free
   839   0011D6                     l3047:
   840                           
   841                           ;main.c: 168:         if(UART1_is_rx_ready()){
   842   0011D6  ECE9  F00E         	call	_UART1_is_rx_ready	;wreg free
   843   0011DA  0900               	iorlw	0
   844   0011DC  B4D8               	btfsc	status,2,c
   845   0011DE  EFF3  F008         	goto	u1321
   846   0011E2  EFF5  F008         	goto	u1320
   847   0011E6                     u1321:
   848   0011E6  EFFB  F008         	goto	l737
   849   0011EA                     u1320:
   850   0011EA                     
   851                           ;main.c: 170:             recibir_periodo_Eusart(&disp);
   852   0011EA  0E88               	movlw	low main@disp
   853   0011EC  6E03               	movwf	recibir_periodo_Eusart@disp^0,c
   854   0011EE  0E00               	movlw	high main@disp
   855   0011F0  6E04               	movwf	(recibir_periodo_Eusart@disp+1)^0,c
   856   0011F2  EC1F  F009         	call	_recibir_periodo_Eusart	;wreg free
   857   0011F6                     l737:
   858                           
   859                           ;main.c: 172:         if(dato_recibido_completo(&disp)){
   860   0011F6  0E88               	movlw	low main@disp
   861   0011F8  6E03               	movwf	dato_recibido_completo@disp^0,c
   862   0011FA  0E00               	movlw	high main@disp
   863   0011FC  6E04               	movwf	(dato_recibido_completo@disp+1)^0,c
   864   0011FE  EC1C  F00F         	call	_dato_recibido_completo	;wreg free
   865   001202  0900               	iorlw	0
   866   001204  B4D8               	btfsc	status,2,c
   867   001206  EF07  F009         	goto	u1331
   868   00120A  EF09  F009         	goto	u1330
   869   00120E                     u1331:
   870   00120E  EF34  F008         	goto	l2993
   871   001212                     u1330:
   872   001212                     
   873                           ;main.c: 173:             Tm_Inicie_periodico(&timer,1 + actualizar_recibido_Eusart(&dis
      +                          p));
   874   001212  0E6C               	movlw	low main@timer
   875   001214  6E13               	movwf	Tm_Inicie_periodico@ctp^0,c
   876   001216  0E00               	movlw	high main@timer
   877   001218  6E14               	movwf	(Tm_Inicie_periodico@ctp+1)^0,c
   878   00121A  0E88               	movlw	low main@disp
   879   00121C  6E09               	movwf	actualizar_recibido_Eusart@disp^0,c
   880   00121E  0E00               	movlw	high main@disp
   881   001220  6E0A               	movwf	(actualizar_recibido_Eusart@disp+1)^0,c
   882   001222  EC31  F00C         	call	_actualizar_recibido_Eusart	;wreg free
   883   001226  0E01               	movlw	1
   884   001228  2409               	addwf	?_actualizar_recibido_Eusart^0,w,c
   885   00122A  6E15               	movwf	Tm_Inicie_periodico@periodo^0,c
   886   00122C  0E00               	movlw	0
   887   00122E  200A               	addwfc	(?_actualizar_recibido_Eusart+1)^0,w,c
   888   001230  6E16               	movwf	(Tm_Inicie_periodico@periodo+1)^0,c
   889   001232  EC7C  F00D         	call	_Tm_Inicie_periodico	;wreg free
   890   001236  EF34  F008         	goto	l2993
   891   00123A  EF0D  F000         	goto	start
   892   00123E                     __end_of_main:
   893                           	callstack 0
   894                           
   895 ;; *************** function _recibir_periodo_Eusart *****************
   896 ;; Defined at:
   897 ;;		line 17 in file "proceseusart.c"
   898 ;; Parameters:    Size  Location     Type
   899 ;;  disp            2    2[COMRAM] PTR struct usart
   900 ;;		 -> main@disp(11), 
   901 ;; Auto vars:     Size  Location     Type
   902 ;;		None
   903 ;; Return value:  Size  Location     Type
   904 ;;                  1    wreg      void 
   905 ;; Registers used:
   906 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   907 ;; Tracked objects:
   908 ;;		On entry : 0/0
   909 ;;		On exit  : 0/0
   910 ;;		Unchanged: 0/0
   911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   912 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   914 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   915 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   916 ;;Total ram usage:        4 bytes
   917 ;; Hardware stack levels used: 1
   918 ;; Hardware stack levels required when called: 4
   919 ;; This function calls:
   920 ;;		Nothing
   921 ;; This function is called by:
   922 ;;		_main
   923 ;; This function uses a non-reentrant model
   924 ;;
   925                           
   926                           	psect	text1
   927   00123E                     __ptext1:
   928                           	callstack 0
   929   00123E                     _recibir_periodo_Eusart:
   930                           	callstack 26
   931   00123E                     
   932                           ;proceseusart.c: 18:     disp -> valor = U1RXB;
   933   00123E  0060  F00F  FFD9   	movff	recibir_periodo_Eusart@disp,fsr2l
   934   001244  0060  F013  FFDA   	movff	recibir_periodo_Eusart@disp+1,fsr2h
   935   00124A  006F F7A3 FFDF     	movff	15848,indf2	;volatile
   936                           
   937                           ;proceseusart.c: 19:     switch(disp -> caso)
   938   001250  EFE3  F009         	goto	l2955
   939   001254                     l2937:
   940                           
   941                           ;proceseusart.c: 22:             if(disp -> valor == 60){
   942   001254  0060  F00F  FFD9   	movff	recibir_periodo_Eusart@disp,fsr2l
   943   00125A  0060  F013  FFDA   	movff	recibir_periodo_Eusart@disp+1,fsr2h
   944   001260  0E3C               	movlw	60
   945   001262  18DE               	xorwf	postinc2,w,c
   946   001264  A4D8               	btfss	status,2,c
   947   001266  EF37  F009         	goto	u1211
   948   00126A  EF39  F009         	goto	u1210
   949   00126E                     u1211:
   950   00126E  EF45  F009         	goto	l2941
   951   001272                     u1210:
   952   001272                     
   953                           ;proceseusart.c: 23:                 disp -> caso = 1;
   954   001272  EE20 F007          	lfsr	2,7
   955   001276  5003               	movf	recibir_periodo_Eusart@disp^0,w,c
   956   001278  26D9               	addwf	fsr2l,f,c
   957   00127A  5004               	movf	(recibir_periodo_Eusart@disp+1)^0,w,c
   958   00127C  22DA               	addwfc	fsr2h,f,c
   959   00127E  0E01               	movlw	1
   960   001280  6EDE               	movwf	postinc2,c
   961   001282  0E00               	movlw	0
   962   001284  6EDD               	movwf	postdec2,c
   963                           
   964                           ;proceseusart.c: 24:             }
   965   001286  EF0D  F00A         	goto	l870
   966   00128A                     l2941:
   967                           
   968                           ;proceseusart.c: 26:             {;proceseusart.c: 27:                 disp -> caso = 0;
   969   00128A  EE20 F007          	lfsr	2,7
   970   00128E  5003               	movf	recibir_periodo_Eusart@disp^0,w,c
   971   001290  26D9               	addwf	fsr2l,f,c
   972   001292  5004               	movf	(recibir_periodo_Eusart@disp+1)^0,w,c
   973   001294  22DA               	addwfc	fsr2h,f,c
   974   001296  0E00               	movlw	0
   975   001298  6EDE               	movwf	postinc2,c
   976   00129A  0E00               	movlw	0
   977   00129C  6EDD               	movwf	postdec2,c
   978   00129E  EF0D  F00A         	goto	l870
   979   0012A2                     l2943:
   980                           
   981                           ;proceseusart.c: 31:             disp -> caso = 2;
   982   0012A2  EE20 F007          	lfsr	2,7
   983   0012A6  5003               	movf	recibir_periodo_Eusart@disp^0,w,c
   984   0012A8  26D9               	addwf	fsr2l,f,c
   985   0012AA  5004               	movf	(recibir_periodo_Eusart@disp+1)^0,w,c
   986   0012AC  22DA               	addwfc	fsr2h,f,c
   987   0012AE  0E02               	movlw	2
   988   0012B0  6EDE               	movwf	postinc2,c
   989   0012B2  0E00               	movlw	0
   990   0012B4  6EDD               	movwf	postdec2,c
   991                           
   992                           ;proceseusart.c: 32:             disp -> numero1 = disp -> valor;
   993   0012B6  0060  F00F  FFD9   	movff	recibir_periodo_Eusart@disp,fsr2l
   994   0012BC  0060  F013  FFDA   	movff	recibir_periodo_Eusart@disp+1,fsr2h
   995   0012C2  50DF               	movf	indf2,w,c
   996   0012C4  6E05               	movwf	??_recibir_periodo_Eusart^0,c
   997   0012C6  6A06               	clrf	(??_recibir_periodo_Eusart+1)^0,c
   998   0012C8  EE20 F001          	lfsr	2,1
   999   0012CC  5003               	movf	recibir_periodo_Eusart@disp^0,w,c
  1000   0012CE  26D9               	addwf	fsr2l,f,c
  1001   0012D0  5004               	movf	(recibir_periodo_Eusart@disp+1)^0,w,c
  1002   0012D2  22DA               	addwfc	fsr2h,f,c
  1003   0012D4  0060  F017  FFDE   	movff	??_recibir_periodo_Eusart,postinc2
  1004   0012DA  0060  F01B  FFDD   	movff	??_recibir_periodo_Eusart+1,postdec2
  1005                           
  1006                           ;proceseusart.c: 33:             break;
  1007   0012E0  EF0D  F00A         	goto	l870
  1008   0012E4                     l2945:
  1009                           
  1010                           ;proceseusart.c: 35:             disp -> caso = 3;
  1011   0012E4  EE20 F007          	lfsr	2,7
  1012   0012E8  5003               	movf	recibir_periodo_Eusart@disp^0,w,c
  1013   0012EA  26D9               	addwf	fsr2l,f,c
  1014   0012EC  5004               	movf	(recibir_periodo_Eusart@disp+1)^0,w,c
  1015   0012EE  22DA               	addwfc	fsr2h,f,c
  1016   0012F0  0E03               	movlw	3
  1017   0012F2  6EDE               	movwf	postinc2,c
  1018   0012F4  0E00               	movlw	0
  1019   0012F6  6EDD               	movwf	postdec2,c
  1020                           
  1021                           ;proceseusart.c: 36:             disp -> numero2 = disp -> valor;
  1022   0012F8  0060  F00F  FFD9   	movff	recibir_periodo_Eusart@disp,fsr2l
  1023   0012FE  0060  F013  FFDA   	movff	recibir_periodo_Eusart@disp+1,fsr2h
  1024   001304  50DF               	movf	indf2,w,c
  1025   001306  6E05               	movwf	??_recibir_periodo_Eusart^0,c
  1026   001308  6A06               	clrf	(??_recibir_periodo_Eusart+1)^0,c
  1027   00130A  EE20 F003          	lfsr	2,3
  1028   00130E  5003               	movf	recibir_periodo_Eusart@disp^0,w,c
  1029   001310  26D9               	addwf	fsr2l,f,c
  1030   001312  5004               	movf	(recibir_periodo_Eusart@disp+1)^0,w,c
  1031   001314  22DA               	addwfc	fsr2h,f,c
  1032   001316  0060  F017  FFDE   	movff	??_recibir_periodo_Eusart,postinc2
  1033   00131C  0060  F01B  FFDD   	movff	??_recibir_periodo_Eusart+1,postdec2
  1034                           
  1035                           ;proceseusart.c: 37:             break;
  1036   001322  EF0D  F00A         	goto	l870
  1037   001326                     l2947:
  1038                           
  1039                           ;proceseusart.c: 39:             disp -> caso = 4;
  1040   001326  EE20 F007          	lfsr	2,7
  1041   00132A  5003               	movf	recibir_periodo_Eusart@disp^0,w,c
  1042   00132C  26D9               	addwf	fsr2l,f,c
  1043   00132E  5004               	movf	(recibir_periodo_Eusart@disp+1)^0,w,c
  1044   001330  22DA               	addwfc	fsr2h,f,c
  1045   001332  0E04               	movlw	4
  1046   001334  6EDE               	movwf	postinc2,c
  1047   001336  0E00               	movlw	0
  1048   001338  6EDD               	movwf	postdec2,c
  1049                           
  1050                           ;proceseusart.c: 40:             disp -> numero3 = disp -> valor;
  1051   00133A  0060  F00F  FFD9   	movff	recibir_periodo_Eusart@disp,fsr2l
  1052   001340  0060  F013  FFDA   	movff	recibir_periodo_Eusart@disp+1,fsr2h
  1053   001346  50DF               	movf	indf2,w,c
  1054   001348  6E05               	movwf	??_recibir_periodo_Eusart^0,c
  1055   00134A  6A06               	clrf	(??_recibir_periodo_Eusart+1)^0,c
  1056   00134C  EE20 F005          	lfsr	2,5
  1057   001350  5003               	movf	recibir_periodo_Eusart@disp^0,w,c
  1058   001352  26D9               	addwf	fsr2l,f,c
  1059   001354  5004               	movf	(recibir_periodo_Eusart@disp+1)^0,w,c
  1060   001356  22DA               	addwfc	fsr2h,f,c
  1061   001358  0060  F017  FFDE   	movff	??_recibir_periodo_Eusart,postinc2
  1062   00135E  0060  F01B  FFDD   	movff	??_recibir_periodo_Eusart+1,postdec2
  1063                           
  1064                           ;proceseusart.c: 41:             break;
  1065   001364  EF0D  F00A         	goto	l870
  1066   001368                     l2949:
  1067                           
  1068                           ;proceseusart.c: 43:             if(disp -> valor == 62){
  1069   001368  0060  F00F  FFD9   	movff	recibir_periodo_Eusart@disp,fsr2l
  1070   00136E  0060  F013  FFDA   	movff	recibir_periodo_Eusart@disp+1,fsr2h
  1071   001374  0E3E               	movlw	62
  1072   001376  18DE               	xorwf	postinc2,w,c
  1073   001378  A4D8               	btfss	status,2,c
  1074   00137A  EFC1  F009         	goto	u1221
  1075   00137E  EFC3  F009         	goto	u1220
  1076   001382                     u1221:
  1077   001382  EFD7  F009         	goto	l2953
  1078   001386                     u1220:
  1079   001386                     
  1080                           ;proceseusart.c: 44:                 disp -> recibir_dato_completo = 1;
  1081   001386  EE20 F009          	lfsr	2,9
  1082   00138A  5003               	movf	recibir_periodo_Eusart@disp^0,w,c
  1083   00138C  26D9               	addwf	fsr2l,f,c
  1084   00138E  5004               	movf	(recibir_periodo_Eusart@disp+1)^0,w,c
  1085   001390  22DA               	addwfc	fsr2h,f,c
  1086   001392  0E01               	movlw	1
  1087   001394  6EDF               	movwf	indf2,c
  1088                           
  1089                           ;proceseusart.c: 45:                 disp -> caso = 0;
  1090   001396  EE20 F007          	lfsr	2,7
  1091   00139A  5003               	movf	recibir_periodo_Eusart@disp^0,w,c
  1092   00139C  26D9               	addwf	fsr2l,f,c
  1093   00139E  5004               	movf	(recibir_periodo_Eusart@disp+1)^0,w,c
  1094   0013A0  22DA               	addwfc	fsr2h,f,c
  1095   0013A2  0E00               	movlw	0
  1096   0013A4  6EDE               	movwf	postinc2,c
  1097   0013A6  0E00               	movlw	0
  1098   0013A8  6EDD               	movwf	postdec2,c
  1099                           
  1100                           ;proceseusart.c: 46:             }
  1101   0013AA  EF0D  F00A         	goto	l870
  1102   0013AE                     l2953:
  1103                           
  1104                           ;proceseusart.c: 48:                 disp -> caso = 0;
  1105   0013AE  EE20 F007          	lfsr	2,7
  1106   0013B2  5003               	movf	recibir_periodo_Eusart@disp^0,w,c
  1107   0013B4  26D9               	addwf	fsr2l,f,c
  1108   0013B6  5004               	movf	(recibir_periodo_Eusart@disp+1)^0,w,c
  1109   0013B8  22DA               	addwfc	fsr2h,f,c
  1110   0013BA  0E00               	movlw	0
  1111   0013BC  6EDE               	movwf	postinc2,c
  1112   0013BE  0E00               	movlw	0
  1113   0013C0  6EDD               	movwf	postdec2,c
  1114   0013C2  EF0D  F00A         	goto	l870
  1115   0013C6                     l2955:
  1116   0013C6  EE20 F007          	lfsr	2,7
  1117   0013CA  5003               	movf	recibir_periodo_Eusart@disp^0,w,c
  1118   0013CC  26D9               	addwf	fsr2l,f,c
  1119   0013CE  5004               	movf	(recibir_periodo_Eusart@disp+1)^0,w,c
  1120   0013D0  22DA               	addwfc	fsr2h,f,c
  1121   0013D2  006F FF78  F005    	movff	postinc2,??_recibir_periodo_Eusart
  1122   0013D8  006F FF74  F006    	movff	postdec2,??_recibir_periodo_Eusart+1
  1123                           
  1124                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1125                           ; Switch size 1, requested type "simple"
  1126                           ; Number of cases is 1, Range of values is 0 to 0
  1127                           ; switch strategies available:
  1128                           ; Name         Instructions Cycles
  1129                           ; simple_byte            4     3 (average)
  1130                           ;	Chosen strategy is simple_byte
  1131   0013DE  5006               	movf	(??_recibir_periodo_Eusart+1)^0,w,c
  1132   0013E0  0A00               	xorlw	0	; case 0
  1133   0013E2  B4D8               	btfsc	status,2,c
  1134   0013E4  EFF6  F009         	goto	l3073
  1135   0013E8  EF0D  F00A         	goto	l870
  1136   0013EC                     l3073:
  1137                           
  1138                           ; Switch size 1, requested type "simple"
  1139                           ; Number of cases is 5, Range of values is 0 to 4
  1140                           ; switch strategies available:
  1141                           ; Name         Instructions Cycles
  1142                           ; simple_byte           16     9 (average)
  1143                           ;	Chosen strategy is simple_byte
  1144   0013EC  5005               	movf	??_recibir_periodo_Eusart^0,w,c
  1145   0013EE  0A00               	xorlw	0	; case 0
  1146   0013F0  B4D8               	btfsc	status,2,c
  1147   0013F2  EF2A  F009         	goto	l2937
  1148   0013F6  0A01               	xorlw	1	; case 1
  1149   0013F8  B4D8               	btfsc	status,2,c
  1150   0013FA  EF51  F009         	goto	l2943
  1151   0013FE  0A03               	xorlw	3	; case 2
  1152   001400  B4D8               	btfsc	status,2,c
  1153   001402  EF72  F009         	goto	l2945
  1154   001406  0A01               	xorlw	1	; case 3
  1155   001408  B4D8               	btfsc	status,2,c
  1156   00140A  EF93  F009         	goto	l2947
  1157   00140E  0A07               	xorlw	7	; case 4
  1158   001410  B4D8               	btfsc	status,2,c
  1159   001412  EFB4  F009         	goto	l2949
  1160   001416  EF0D  F00A         	goto	l870
  1161   00141A                     l870:
  1162   00141A  0012               	return		;funcret
  1163   00141C                     __end_of_recibir_periodo_Eusart:
  1164                           	callstack 0
  1165                           
  1166 ;; *************** function _inicie_cola *****************
  1167 ;; Defined at:
  1168 ;;		line 3 in file "cola.c"
  1169 ;; Parameters:    Size  Location     Type
  1170 ;;  c               2    2[COMRAM] PTR struct eCola
  1171 ;;		 -> main@cola(21), 
  1172 ;; Auto vars:     Size  Location     Type
  1173 ;;		None
  1174 ;; Return value:  Size  Location     Type
  1175 ;;                  1    wreg      void 
  1176 ;; Registers used:
  1177 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1178 ;; Tracked objects:
  1179 ;;		On entry : 0/0
  1180 ;;		On exit  : 0/0
  1181 ;;		Unchanged: 0/0
  1182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1183 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1186 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1187 ;;Total ram usage:        2 bytes
  1188 ;; Hardware stack levels used: 1
  1189 ;; Hardware stack levels required when called: 4
  1190 ;; This function calls:
  1191 ;;		Nothing
  1192 ;; This function is called by:
  1193 ;;		_main
  1194 ;; This function uses a non-reentrant model
  1195 ;;
  1196                           
  1197                           	psect	text2
  1198   001C10                     __ptext2:
  1199                           	callstack 0
  1200   001C10                     _inicie_cola:
  1201                           	callstack 26
  1202   001C10                     
  1203                           ;cola.c: 3: void inicie_cola(eCola* c);cola.c: 4: {;cola.c: 5:     c->entrada=0;
  1204   001C10  EE20 F00F          	lfsr	2,15
  1205   001C14  5003               	movf	inicie_cola@c^0,w,c
  1206   001C16  26D9               	addwf	fsr2l,f,c
  1207   001C18  5004               	movf	(inicie_cola@c+1)^0,w,c
  1208   001C1A  22DA               	addwfc	fsr2h,f,c
  1209   001C1C  0E00               	movlw	0
  1210   001C1E  6EDE               	movwf	postinc2,c
  1211   001C20  0E00               	movlw	0
  1212   001C22  6EDD               	movwf	postdec2,c
  1213                           
  1214                           ;cola.c: 6:     c->salida=0;
  1215   001C24  EE20 F011          	lfsr	2,17
  1216   001C28  5003               	movf	inicie_cola@c^0,w,c
  1217   001C2A  26D9               	addwf	fsr2l,f,c
  1218   001C2C  5004               	movf	(inicie_cola@c+1)^0,w,c
  1219   001C2E  22DA               	addwfc	fsr2h,f,c
  1220   001C30  0E00               	movlw	0
  1221   001C32  6EDE               	movwf	postinc2,c
  1222   001C34  0E00               	movlw	0
  1223   001C36  6EDD               	movwf	postdec2,c
  1224                           
  1225                           ;cola.c: 7:     c->peso=0;
  1226   001C38  EE20 F013          	lfsr	2,19
  1227   001C3C  5003               	movf	inicie_cola@c^0,w,c
  1228   001C3E  26D9               	addwf	fsr2l,f,c
  1229   001C40  5004               	movf	(inicie_cola@c+1)^0,w,c
  1230   001C42  22DA               	addwfc	fsr2h,f,c
  1231   001C44  0E00               	movlw	0
  1232   001C46  6EDE               	movwf	postinc2,c
  1233   001C48  0E00               	movlw	0
  1234   001C4A  6EDD               	movwf	postdec2,c
  1235   001C4C  0012               	return		;funcret
  1236   001C4E                     __end_of_inicie_cola:
  1237                           	callstack 0
  1238                           
  1239 ;; *************** function _inicie_SPI *****************
  1240 ;; Defined at:
  1241 ;;		line 8 in file "processpi.c"
  1242 ;; Parameters:    Size  Location     Type
  1243 ;;  spi             2    2[COMRAM] PTR struct structspi
  1244 ;;		 -> main@spi(12), 
  1245 ;; Auto vars:     Size  Location     Type
  1246 ;;		None
  1247 ;; Return value:  Size  Location     Type
  1248 ;;                  1    wreg      void 
  1249 ;; Registers used:
  1250 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1251 ;; Tracked objects:
  1252 ;;		On entry : 0/0
  1253 ;;		On exit  : 0/0
  1254 ;;		Unchanged: 0/0
  1255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1256 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1259 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1260 ;;Total ram usage:        2 bytes
  1261 ;; Hardware stack levels used: 1
  1262 ;; Hardware stack levels required when called: 4
  1263 ;; This function calls:
  1264 ;;		Nothing
  1265 ;; This function is called by:
  1266 ;;		_main
  1267 ;; This function uses a non-reentrant model
  1268 ;;
  1269                           
  1270                           	psect	text3
  1271   001900                     __ptext3:
  1272                           	callstack 0
  1273   001900                     _inicie_SPI:
  1274                           	callstack 26
  1275   001900                     
  1276                           ;processpi.c: 9:     spi -> valor = 0;
  1277   001900  0060  F00F  FFD9   	movff	inicie_SPI@spi,fsr2l
  1278   001906  0060  F013  FFDA   	movff	inicie_SPI@spi+1,fsr2h
  1279   00190C  0E00               	movlw	0
  1280   00190E  6EDE               	movwf	postinc2,c
  1281   001910  0E00               	movlw	0
  1282   001912  6EDD               	movwf	postdec2,c
  1283   001914                     
  1284                           ;processpi.c: 10:     spi -> ganancia = 0;
  1285   001914  EE20 F004          	lfsr	2,4
  1286   001918  5003               	movf	inicie_SPI@spi^0,w,c
  1287   00191A  26D9               	addwf	fsr2l,f,c
  1288   00191C  5004               	movf	(inicie_SPI@spi+1)^0,w,c
  1289   00191E  22DA               	addwfc	fsr2h,f,c
  1290   001920  0E00               	movlw	0
  1291   001922  6EDF               	movwf	indf2,c
  1292   001924                     
  1293                           ;processpi.c: 11:     spi -> canal = 0;
  1294   001924  EE20 F003          	lfsr	2,3
  1295   001928  5003               	movf	inicie_SPI@spi^0,w,c
  1296   00192A  26D9               	addwf	fsr2l,f,c
  1297   00192C  5004               	movf	(inicie_SPI@spi+1)^0,w,c
  1298   00192E  22DA               	addwfc	fsr2h,f,c
  1299   001930  0E00               	movlw	0
  1300   001932  6EDF               	movwf	indf2,c
  1301   001934                     
  1302                           ;processpi.c: 12:     spi -> impedancia = 0;
  1303   001934  EE20 F005          	lfsr	2,5
  1304   001938  5003               	movf	inicie_SPI@spi^0,w,c
  1305   00193A  26D9               	addwf	fsr2l,f,c
  1306   00193C  5004               	movf	(inicie_SPI@spi+1)^0,w,c
  1307   00193E  22DA               	addwfc	fsr2h,f,c
  1308   001940  0E00               	movlw	0
  1309   001942  6EDF               	movwf	indf2,c
  1310   001944                     
  1311                           ;processpi.c: 13:     spi -> valor_enviando = 0;
  1312   001944  EE20 F002          	lfsr	2,2
  1313   001948  5003               	movf	inicie_SPI@spi^0,w,c
  1314   00194A  26D9               	addwf	fsr2l,f,c
  1315   00194C  5004               	movf	(inicie_SPI@spi+1)^0,w,c
  1316   00194E  22DA               	addwfc	fsr2h,f,c
  1317   001950  0E00               	movlw	0
  1318   001952  6EDF               	movwf	indf2,c
  1319   001954                     
  1320                           ;processpi.c: 14:     spi -> estado_registro = 16;
  1321   001954  EE20 F006          	lfsr	2,6
  1322   001958  5003               	movf	inicie_SPI@spi^0,w,c
  1323   00195A  26D9               	addwf	fsr2l,f,c
  1324   00195C  5004               	movf	(inicie_SPI@spi+1)^0,w,c
  1325   00195E  22DA               	addwfc	fsr2h,f,c
  1326   001960  0E10               	movlw	16
  1327   001962  6EDE               	movwf	postinc2,c
  1328   001964  0E00               	movlw	0
  1329   001966  6EDD               	movwf	postdec2,c
  1330   001968                     
  1331                           ;processpi.c: 15:     spi -> caso = 0;
  1332   001968  EE20 F008          	lfsr	2,8
  1333   00196C  5003               	movf	inicie_SPI@spi^0,w,c
  1334   00196E  26D9               	addwf	fsr2l,f,c
  1335   001970  5004               	movf	(inicie_SPI@spi+1)^0,w,c
  1336   001972  22DA               	addwfc	fsr2h,f,c
  1337   001974  0E00               	movlw	0
  1338   001976  6EDE               	movwf	postinc2,c
  1339   001978  0E00               	movlw	0
  1340   00197A  6EDD               	movwf	postdec2,c
  1341   00197C                     
  1342                           ;processpi.c: 16:     spi -> tamano_registro = 16;
  1343   00197C  EE20 F00A          	lfsr	2,10
  1344   001980  5003               	movf	inicie_SPI@spi^0,w,c
  1345   001982  26D9               	addwf	fsr2l,f,c
  1346   001984  5004               	movf	(inicie_SPI@spi+1)^0,w,c
  1347   001986  22DA               	addwfc	fsr2h,f,c
  1348   001988  0E10               	movlw	16
  1349   00198A  6EDE               	movwf	postinc2,c
  1350   00198C  0E00               	movlw	0
  1351   00198E  6EDD               	movwf	postdec2,c
  1352   001990  0012               	return		;funcret
  1353   001992                     __end_of_inicie_SPI:
  1354                           	callstack 0
  1355                           
  1356 ;; *************** function _iniciar_struct_usart *****************
  1357 ;; Defined at:
  1358 ;;		line 7 in file "proceseusart.c"
  1359 ;; Parameters:    Size  Location     Type
  1360 ;;  disp            2    2[COMRAM] PTR struct usart
  1361 ;;		 -> main@disp(11), 
  1362 ;; Auto vars:     Size  Location     Type
  1363 ;;		None
  1364 ;; Return value:  Size  Location     Type
  1365 ;;                  1    wreg      void 
  1366 ;; Registers used:
  1367 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1368 ;; Tracked objects:
  1369 ;;		On entry : 0/0
  1370 ;;		On exit  : 0/0
  1371 ;;		Unchanged: 0/0
  1372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1373 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1376 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1377 ;;Total ram usage:        2 bytes
  1378 ;; Hardware stack levels used: 1
  1379 ;; Hardware stack levels required when called: 4
  1380 ;; This function calls:
  1381 ;;		Nothing
  1382 ;; This function is called by:
  1383 ;;		_main
  1384 ;; This function uses a non-reentrant model
  1385 ;;
  1386                           
  1387                           	psect	text4
  1388   001A1A                     __ptext4:
  1389                           	callstack 0
  1390   001A1A                     _iniciar_struct_usart:
  1391                           	callstack 26
  1392   001A1A                     
  1393                           ;proceseusart.c: 8:     disp -> numero1 = 0;
  1394   001A1A  EE20 F001          	lfsr	2,1
  1395   001A1E  5003               	movf	iniciar_struct_usart@disp^0,w,c
  1396   001A20  26D9               	addwf	fsr2l,f,c
  1397   001A22  5004               	movf	(iniciar_struct_usart@disp+1)^0,w,c
  1398   001A24  22DA               	addwfc	fsr2h,f,c
  1399   001A26  0E00               	movlw	0
  1400   001A28  6EDE               	movwf	postinc2,c
  1401   001A2A  0E00               	movlw	0
  1402   001A2C  6EDD               	movwf	postdec2,c
  1403                           
  1404                           ;proceseusart.c: 9:     disp -> numero2 = 0;
  1405   001A2E  EE20 F003          	lfsr	2,3
  1406   001A32  5003               	movf	iniciar_struct_usart@disp^0,w,c
  1407   001A34  26D9               	addwf	fsr2l,f,c
  1408   001A36  5004               	movf	(iniciar_struct_usart@disp+1)^0,w,c
  1409   001A38  22DA               	addwfc	fsr2h,f,c
  1410   001A3A  0E00               	movlw	0
  1411   001A3C  6EDE               	movwf	postinc2,c
  1412   001A3E  0E00               	movlw	0
  1413   001A40  6EDD               	movwf	postdec2,c
  1414                           
  1415                           ;proceseusart.c: 10:     disp -> numero3 = 0;
  1416   001A42  EE20 F005          	lfsr	2,5
  1417   001A46  5003               	movf	iniciar_struct_usart@disp^0,w,c
  1418   001A48  26D9               	addwf	fsr2l,f,c
  1419   001A4A  5004               	movf	(iniciar_struct_usart@disp+1)^0,w,c
  1420   001A4C  22DA               	addwfc	fsr2h,f,c
  1421   001A4E  0E00               	movlw	0
  1422   001A50  6EDE               	movwf	postinc2,c
  1423   001A52  0E00               	movlw	0
  1424   001A54  6EDD               	movwf	postdec2,c
  1425   001A56                     
  1426                           ;proceseusart.c: 11:     disp -> valor = 0;
  1427   001A56  0060  F00F  FFD9   	movff	iniciar_struct_usart@disp,fsr2l
  1428   001A5C  0060  F013  FFDA   	movff	iniciar_struct_usart@disp+1,fsr2h
  1429   001A62  0E00               	movlw	0
  1430   001A64  6EDF               	movwf	indf2,c
  1431   001A66                     
  1432                           ;proceseusart.c: 12:     disp -> recibir_dato_completo = 0;
  1433   001A66  EE20 F009          	lfsr	2,9
  1434   001A6A  5003               	movf	iniciar_struct_usart@disp^0,w,c
  1435   001A6C  26D9               	addwf	fsr2l,f,c
  1436   001A6E  5004               	movf	(iniciar_struct_usart@disp+1)^0,w,c
  1437   001A70  22DA               	addwfc	fsr2h,f,c
  1438   001A72  0E00               	movlw	0
  1439   001A74  6EDF               	movwf	indf2,c
  1440   001A76                     
  1441                           ;proceseusart.c: 13:     disp -> esperar_datos_eusart = 0;
  1442   001A76  EE20 F00A          	lfsr	2,10
  1443   001A7A  5003               	movf	iniciar_struct_usart@disp^0,w,c
  1444   001A7C  26D9               	addwf	fsr2l,f,c
  1445   001A7E  5004               	movf	(iniciar_struct_usart@disp+1)^0,w,c
  1446   001A80  22DA               	addwfc	fsr2h,f,c
  1447   001A82  0E00               	movlw	0
  1448   001A84  6EDF               	movwf	indf2,c
  1449   001A86                     
  1450                           ;proceseusart.c: 14:     disp -> caso = 0;
  1451   001A86  EE20 F007          	lfsr	2,7
  1452   001A8A  5003               	movf	iniciar_struct_usart@disp^0,w,c
  1453   001A8C  26D9               	addwf	fsr2l,f,c
  1454   001A8E  5004               	movf	(iniciar_struct_usart@disp+1)^0,w,c
  1455   001A90  22DA               	addwfc	fsr2h,f,c
  1456   001A92  0E00               	movlw	0
  1457   001A94  6EDE               	movwf	postinc2,c
  1458   001A96  0E00               	movlw	0
  1459   001A98  6EDD               	movwf	postdec2,c
  1460   001A9A  0012               	return		;funcret
  1461   001A9C                     __end_of_iniciar_struct_usart:
  1462                           	callstack 0
  1463                           
  1464 ;; *************** function _enviar_Eusart *****************
  1465 ;; Defined at:
  1466 ;;		line 61 in file "proceseusart.c"
  1467 ;; Parameters:    Size  Location     Type
  1468 ;;  valor           2   11[COMRAM] int 
  1469 ;; Auto vars:     Size  Location     Type
  1470 ;;		None
  1471 ;; Return value:  Size  Location     Type
  1472 ;;                  1    wreg      void 
  1473 ;; Registers used:
  1474 ;;		None
  1475 ;; Tracked objects:
  1476 ;;		On entry : 0/0
  1477 ;;		On exit  : 0/0
  1478 ;;		Unchanged: 0/0
  1479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1480 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1483 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1484 ;;Total ram usage:        2 bytes
  1485 ;; Hardware stack levels used: 1
  1486 ;; Hardware stack levels required when called: 4
  1487 ;; This function calls:
  1488 ;;		Nothing
  1489 ;; This function is called by:
  1490 ;;		_main
  1491 ;; This function uses a non-reentrant model
  1492 ;;
  1493                           
  1494                           	psect	text5
  1495   001E8A                     __ptext5:
  1496                           	callstack 0
  1497   001E8A                     _enviar_Eusart:
  1498                           	callstack 26
  1499   001E8A                     
  1500                           ;proceseusart.c: 62:     U1TXB = valor;
  1501   001E8A  0060  F033  FDEA   	movff	enviar_Eusart@valor,15850	;volatile
  1502   001E90  0012               	return		;funcret
  1503   001E92                     __end_of_enviar_Eusart:
  1504                           	callstack 0
  1505                           
  1506 ;; *************** function _dato_recibido_completo *****************
  1507 ;; Defined at:
  1508 ;;		line 72 in file "proceseusart.c"
  1509 ;; Parameters:    Size  Location     Type
  1510 ;;  disp            2    2[COMRAM] PTR struct usart
  1511 ;;		 -> main@disp(11), 
  1512 ;; Auto vars:     Size  Location     Type
  1513 ;;		None
  1514 ;; Return value:  Size  Location     Type
  1515 ;;                  1    wreg      _Bool 
  1516 ;; Registers used:
  1517 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1518 ;; Tracked objects:
  1519 ;;		On entry : 0/0
  1520 ;;		On exit  : 0/0
  1521 ;;		Unchanged: 0/0
  1522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1523 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1526 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1527 ;;Total ram usage:        2 bytes
  1528 ;; Hardware stack levels used: 1
  1529 ;; Hardware stack levels required when called: 4
  1530 ;; This function calls:
  1531 ;;		Nothing
  1532 ;; This function is called by:
  1533 ;;		_main
  1534 ;; This function uses a non-reentrant model
  1535 ;;
  1536                           
  1537                           	psect	text6
  1538   001E38                     __ptext6:
  1539                           	callstack 0
  1540   001E38                     _dato_recibido_completo:
  1541                           	callstack 26
  1542   001E38                     
  1543                           ;proceseusart.c: 74:     return disp -> recibir_dato_completo;
  1544   001E38  EE20 F009          	lfsr	2,9
  1545   001E3C  5003               	movf	dato_recibido_completo@disp^0,w,c
  1546   001E3E  26D9               	addwf	fsr2l,f,c
  1547   001E40  5004               	movf	(dato_recibido_completo@disp+1)^0,w,c
  1548   001E42  22DA               	addwfc	fsr2h,f,c
  1549   001E44  50DF               	movf	indf2,w,c
  1550   001E46  0012               	return		;funcret
  1551   001E48                     __end_of_dato_recibido_completo:
  1552                           	callstack 0
  1553                           
  1554 ;; *************** function _cola_get *****************
  1555 ;; Defined at:
  1556 ;;		line 43 in file "cola.c"
  1557 ;; Parameters:    Size  Location     Type
  1558 ;;  c               2    6[COMRAM] PTR struct eCola
  1559 ;;		 -> main@cola(21), 
  1560 ;; Auto vars:     Size  Location     Type
  1561 ;;  temp            1   10[COMRAM] unsigned char 
  1562 ;; Return value:  Size  Location     Type
  1563 ;;                  1    wreg      unsigned char 
  1564 ;; Registers used:
  1565 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1566 ;; Tracked objects:
  1567 ;;		On entry : 0/0
  1568 ;;		On exit  : 0/0
  1569 ;;		Unchanged: 0/0
  1570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1571 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1572 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1573 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1574 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1575 ;;Total ram usage:        5 bytes
  1576 ;; Hardware stack levels used: 1
  1577 ;; Hardware stack levels required when called: 5
  1578 ;; This function calls:
  1579 ;;		_cola_vacia
  1580 ;; This function is called by:
  1581 ;;		_main
  1582 ;; This function uses a non-reentrant model
  1583 ;;
  1584                           
  1585                           	psect	text7
  1586   0015B2                     __ptext7:
  1587                           	callstack 0
  1588   0015B2                     _cola_get:
  1589                           	callstack 25
  1590   0015B2                     
  1591                           ;cola.c: 43: DATOCOLA cola_get(eCola* c);cola.c: 44: {;cola.c: 48:     DATOCOLA temp;;co
      +                          la.c: 49:     if(!cola_vacia(c)){
  1592   0015B2  C007  F003         	movff	cola_get@c,cola_vacia@c
  1593   0015B6  C008  F004         	movff	cola_get@c+1,cola_vacia@c+1
  1594   0015BA  ECE8  F00D         	call	_cola_vacia	;wreg free
  1595   0015BE  5003               	movf	?_cola_vacia^0,w,c
  1596   0015C0  1004               	iorwf	(?_cola_vacia+1)^0,w,c
  1597   0015C2  A4D8               	btfss	status,2,c
  1598   0015C4  EFE6  F00A         	goto	u1191
  1599   0015C8  EFE8  F00A         	goto	u1190
  1600   0015CC                     u1191:
  1601   0015CC  EF10  F00B         	goto	l2921
  1602   0015D0                     u1190:
  1603   0015D0                     
  1604                           ;cola.c: 50:         temp=c->data[c->salida];
  1605   0015D0  EE20 F011          	lfsr	2,17
  1606   0015D4  5007               	movf	cola_get@c^0,w,c
  1607   0015D6  26D9               	addwf	fsr2l,f,c
  1608   0015D8  5008               	movf	(cola_get@c+1)^0,w,c
  1609   0015DA  22DA               	addwfc	fsr2h,f,c
  1610   0015DC  006F FF78  F009    	movff	postinc2,??_cola_get
  1611   0015E2  006F FF74  F00A    	movff	postdec2,??_cola_get+1
  1612   0015E8  5009               	movf	??_cola_get^0,w,c
  1613   0015EA  2407               	addwf	cola_get@c^0,w,c
  1614   0015EC  6ED9               	movwf	fsr2l,c
  1615   0015EE  500A               	movf	(??_cola_get+1)^0,w,c
  1616   0015F0  2008               	addwfc	(cola_get@c+1)^0,w,c
  1617   0015F2  6EDA               	movwf	fsr2h,c
  1618   0015F4  50DF               	movf	indf2,w,c
  1619   0015F6  6E0B               	movwf	cola_get@temp^0,c
  1620                           
  1621                           ;cola.c: 51:         c->salida++;
  1622   0015F8  EE20 F011          	lfsr	2,17
  1623   0015FC  5007               	movf	cola_get@c^0,w,c
  1624   0015FE  26D9               	addwf	fsr2l,f,c
  1625   001600  5008               	movf	(cola_get@c+1)^0,w,c
  1626   001602  22DA               	addwfc	fsr2h,f,c
  1627   001604  2ADE               	incf	postinc2,f,c
  1628   001606  0E00               	movlw	0
  1629   001608  22DD               	addwfc	postdec2,f,c
  1630                           
  1631                           ;cola.c: 52:         c->peso--;
  1632   00160A  EE20 F013          	lfsr	2,19
  1633   00160E  5007               	movf	cola_get@c^0,w,c
  1634   001610  26D9               	addwf	fsr2l,f,c
  1635   001612  5008               	movf	(cola_get@c+1)^0,w,c
  1636   001614  22DA               	addwfc	fsr2h,f,c
  1637   001616  06DE               	decf	postinc2,f,c
  1638   001618  0E00               	movlw	0
  1639   00161A  5ADD               	subwfb	postdec2,f,c
  1640                           
  1641                           ;cola.c: 53:     }
  1642   00161C  EF13  F00B         	goto	l2925
  1643   001620                     l2921:
  1644                           
  1645                           ;cola.c: 55:     {;cola.c: 56:         return 1;
  1646   001620  0E01               	movlw	1
  1647   001622  EF34  F00B         	goto	l792
  1648   001626                     l2925:
  1649                           
  1650                           ;cola.c: 60:     if (c->salida >=15)
  1651   001626  EE20 F011          	lfsr	2,17
  1652   00162A  5007               	movf	cola_get@c^0,w,c
  1653   00162C  26D9               	addwf	fsr2l,f,c
  1654   00162E  5008               	movf	(cola_get@c+1)^0,w,c
  1655   001630  22DA               	addwfc	fsr2h,f,c
  1656   001632  0E01               	movlw	1
  1657   001634  BEDB               	btfsc	plusw2,7,c
  1658   001636  EF27  F00B         	goto	u1201
  1659   00163A  0E01               	movlw	1
  1660   00163C  50DB               	movf	plusw2,w,c
  1661   00163E  E109               	bnz	u1200
  1662   001640  0E0F               	movlw	15
  1663   001642  5CDE               	subwf	postinc2,w,c
  1664   001644  A0D8               	btfss	status,0,c
  1665   001646  EF27  F00B         	goto	u1201
  1666   00164A  EF29  F00B         	goto	u1200
  1667   00164E                     u1201:
  1668   00164E  EF33  F00B         	goto	l2929
  1669   001652                     u1200:
  1670   001652                     
  1671                           ;cola.c: 61:         c->salida=0;
  1672   001652  EE20 F011          	lfsr	2,17
  1673   001656  5007               	movf	cola_get@c^0,w,c
  1674   001658  26D9               	addwf	fsr2l,f,c
  1675   00165A  5008               	movf	(cola_get@c+1)^0,w,c
  1676   00165C  22DA               	addwfc	fsr2h,f,c
  1677   00165E  0E00               	movlw	0
  1678   001660  6EDE               	movwf	postinc2,c
  1679   001662  0E00               	movlw	0
  1680   001664  6EDD               	movwf	postdec2,c
  1681   001666                     l2929:
  1682                           
  1683                           ;cola.c: 62:     return temp;
  1684   001666  500B               	movf	cola_get@temp^0,w,c
  1685   001668                     l792:
  1686   001668  0012               	return		;funcret
  1687   00166A                     __end_of_cola_get:
  1688                           	callstack 0
  1689                           
  1690 ;; *************** function _cola_vacia *****************
  1691 ;; Defined at:
  1692 ;;		line 85 in file "cola.c"
  1693 ;; Parameters:    Size  Location     Type
  1694 ;;  c               2    2[COMRAM] PTR struct eCola
  1695 ;;		 -> main@cola(21), 
  1696 ;; Auto vars:     Size  Location     Type
  1697 ;;		None
  1698 ;; Return value:  Size  Location     Type
  1699 ;;                  2    2[COMRAM] int 
  1700 ;; Registers used:
  1701 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1702 ;; Tracked objects:
  1703 ;;		On entry : 0/0
  1704 ;;		On exit  : 0/0
  1705 ;;		Unchanged: 0/0
  1706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1707 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1709 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1710 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1711 ;;Total ram usage:        4 bytes
  1712 ;; Hardware stack levels used: 1
  1713 ;; Hardware stack levels required when called: 4
  1714 ;; This function calls:
  1715 ;;		Nothing
  1716 ;; This function is called by:
  1717 ;;		_main
  1718 ;;		_cola_get
  1719 ;; This function uses a non-reentrant model
  1720 ;;
  1721                           
  1722                           	psect	text8
  1723   001BD0                     __ptext8:
  1724                           	callstack 0
  1725   001BD0                     _cola_vacia:
  1726                           	callstack 26
  1727   001BD0                     
  1728                           ;cola.c: 85: int cola_vacia(eCola* c);cola.c: 86: {;cola.c: 87:     if (c->peso<=0){
  1729   001BD0  EE20 F013          	lfsr	2,19
  1730   001BD4  5003               	movf	cola_vacia@c^0,w,c
  1731   001BD6  26D9               	addwf	fsr2l,f,c
  1732   001BD8  5004               	movf	(cola_vacia@c+1)^0,w,c
  1733   001BDA  22DA               	addwfc	fsr2h,f,c
  1734   001BDC  0E01               	movlw	1
  1735   001BDE  BEDB               	btfsc	plusw2,7,c
  1736   001BE0  EFFD  F00D         	goto	u1040
  1737   001BE4  0E01               	movlw	1
  1738   001BE6  50DB               	movf	plusw2,w,c
  1739   001BE8  E106               	bnz	u1041
  1740   001BEA  04DE               	decf	postinc2,w,c
  1741   001BEC  B0D8               	btfsc	status,0,c
  1742   001BEE  EFFB  F00D         	goto	u1041
  1743   001BF2  EFFD  F00D         	goto	u1040
  1744   001BF6                     u1041:
  1745   001BF6  EF03  F00E         	goto	l2783
  1746   001BFA                     u1040:
  1747   001BFA                     
  1748                           ;cola.c: 88:         return 1;
  1749   001BFA  0E00               	movlw	0
  1750   001BFC  6E04               	movwf	(?_cola_vacia+1)^0,c
  1751   001BFE  0E01               	movlw	1
  1752   001C00  6E03               	movwf	?_cola_vacia^0,c
  1753   001C02  EF07  F00E         	goto	l805
  1754   001C06                     l2783:
  1755                           
  1756                           ;cola.c: 91:         return 0;
  1757   001C06  0E00               	movlw	0
  1758   001C08  6E04               	movwf	(?_cola_vacia+1)^0,c
  1759   001C0A  0E00               	movlw	0
  1760   001C0C  6E03               	movwf	?_cola_vacia^0,c
  1761   001C0E                     l805:
  1762   001C0E  0012               	return		;funcret
  1763   001C10                     __end_of_cola_vacia:
  1764                           	callstack 0
  1765                           
  1766 ;; *************** function _cola_add *****************
  1767 ;; Defined at:
  1768 ;;		line 18 in file "cola.c"
  1769 ;; Parameters:    Size  Location     Type
  1770 ;;  c               2    6[COMRAM] PTR struct eCola
  1771 ;;		 -> main@cola(21), 
  1772 ;;  dato            1    8[COMRAM] unsigned char 
  1773 ;; Auto vars:     Size  Location     Type
  1774 ;;		None
  1775 ;; Return value:  Size  Location     Type
  1776 ;;                  1    wreg      unsigned char 
  1777 ;; Registers used:
  1778 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1779 ;; Tracked objects:
  1780 ;;		On entry : 0/0
  1781 ;;		On exit  : 0/0
  1782 ;;		Unchanged: 0/0
  1783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1784 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1786 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1787 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1788 ;;Total ram usage:        5 bytes
  1789 ;; Hardware stack levels used: 1
  1790 ;; Hardware stack levels required when called: 5
  1791 ;; This function calls:
  1792 ;;		_cola_llena
  1793 ;; This function is called by:
  1794 ;;		_main
  1795 ;; This function uses a non-reentrant model
  1796 ;;
  1797                           
  1798                           	psect	text9
  1799   00166A                     __ptext9:
  1800                           	callstack 0
  1801   00166A                     _cola_add:
  1802                           	callstack 25
  1803   00166A                     
  1804                           ;cola.c: 18: char cola_add(eCola* c,DATOCOLA dato);cola.c: 19: {;cola.c: 24:     if(!col
      +                          a_llena(c)){
  1805   00166A  C007  F003         	movff	cola_add@c,cola_llena@c
  1806   00166E  C008  F004         	movff	cola_add@c+1,cola_llena@c+1
  1807   001672  ECC7  F00D         	call	_cola_llena	;wreg free
  1808   001676  5003               	movf	?_cola_llena^0,w,c
  1809   001678  1004               	iorwf	(?_cola_llena+1)^0,w,c
  1810   00167A  A4D8               	btfss	status,2,c
  1811   00167C  EF42  F00B         	goto	u1171
  1812   001680  EF44  F00B         	goto	u1170
  1813   001684                     u1171:
  1814   001684  EF8B  F00B         	goto	l786
  1815   001688                     u1170:
  1816   001688                     
  1817                           ;cola.c: 25:         c->data[c->entrada]=dato;
  1818   001688  EE20 F00F          	lfsr	2,15
  1819   00168C  5007               	movf	cola_add@c^0,w,c
  1820   00168E  26D9               	addwf	fsr2l,f,c
  1821   001690  5008               	movf	(cola_add@c+1)^0,w,c
  1822   001692  22DA               	addwfc	fsr2h,f,c
  1823   001694  006F FF78  F00A    	movff	postinc2,??_cola_add
  1824   00169A  006F FF74  F00B    	movff	postdec2,??_cola_add+1
  1825   0016A0  500A               	movf	??_cola_add^0,w,c
  1826   0016A2  2407               	addwf	cola_add@c^0,w,c
  1827   0016A4  6ED9               	movwf	fsr2l,c
  1828   0016A6  500B               	movf	(??_cola_add+1)^0,w,c
  1829   0016A8  2008               	addwfc	(cola_add@c+1)^0,w,c
  1830   0016AA  6EDA               	movwf	fsr2h,c
  1831   0016AC  0060  F027  FFDF   	movff	cola_add@dato,indf2
  1832                           
  1833                           ;cola.c: 26:         c->entrada++;
  1834   0016B2  EE20 F00F          	lfsr	2,15
  1835   0016B6  5007               	movf	cola_add@c^0,w,c
  1836   0016B8  26D9               	addwf	fsr2l,f,c
  1837   0016BA  5008               	movf	(cola_add@c+1)^0,w,c
  1838   0016BC  22DA               	addwfc	fsr2h,f,c
  1839   0016BE  2ADE               	incf	postinc2,f,c
  1840   0016C0  0E00               	movlw	0
  1841   0016C2  22DD               	addwfc	postdec2,f,c
  1842                           
  1843                           ;cola.c: 27:         c->peso++;
  1844   0016C4  EE20 F013          	lfsr	2,19
  1845   0016C8  5007               	movf	cola_add@c^0,w,c
  1846   0016CA  26D9               	addwf	fsr2l,f,c
  1847   0016CC  5008               	movf	(cola_add@c+1)^0,w,c
  1848   0016CE  22DA               	addwfc	fsr2h,f,c
  1849   0016D0  2ADE               	incf	postinc2,f,c
  1850   0016D2  0E00               	movlw	0
  1851   0016D4  22DD               	addwfc	postdec2,f,c
  1852   0016D6                     
  1853                           ;cola.c: 35:     if (c->entrada >=15)
  1854   0016D6  EE20 F00F          	lfsr	2,15
  1855   0016DA  5007               	movf	cola_add@c^0,w,c
  1856   0016DC  26D9               	addwf	fsr2l,f,c
  1857   0016DE  5008               	movf	(cola_add@c+1)^0,w,c
  1858   0016E0  22DA               	addwfc	fsr2h,f,c
  1859   0016E2  0E01               	movlw	1
  1860   0016E4  BEDB               	btfsc	plusw2,7,c
  1861   0016E6  EF7F  F00B         	goto	u1181
  1862   0016EA  0E01               	movlw	1
  1863   0016EC  50DB               	movf	plusw2,w,c
  1864   0016EE  E109               	bnz	u1180
  1865   0016F0  0E0F               	movlw	15
  1866   0016F2  5CDE               	subwf	postinc2,w,c
  1867   0016F4  A0D8               	btfss	status,0,c
  1868   0016F6  EF7F  F00B         	goto	u1181
  1869   0016FA  EF81  F00B         	goto	u1180
  1870   0016FE                     u1181:
  1871   0016FE  EF8B  F00B         	goto	l786
  1872   001702                     u1180:
  1873   001702                     
  1874                           ;cola.c: 36:         c->entrada=0;
  1875   001702  EE20 F00F          	lfsr	2,15
  1876   001706  5007               	movf	cola_add@c^0,w,c
  1877   001708  26D9               	addwf	fsr2l,f,c
  1878   00170A  5008               	movf	(cola_add@c+1)^0,w,c
  1879   00170C  22DA               	addwfc	fsr2h,f,c
  1880   00170E  0E00               	movlw	0
  1881   001710  6EDE               	movwf	postinc2,c
  1882   001712  0E00               	movlw	0
  1883   001714  6EDD               	movwf	postdec2,c
  1884   001716                     l786:
  1885   001716  0012               	return		;funcret
  1886   001718                     __end_of_cola_add:
  1887                           	callstack 0
  1888                           
  1889 ;; *************** function _cola_llena *****************
  1890 ;; Defined at:
  1891 ;;		line 75 in file "cola.c"
  1892 ;; Parameters:    Size  Location     Type
  1893 ;;  c               2    2[COMRAM] PTR struct eCola
  1894 ;;		 -> main@cola(21), 
  1895 ;; Auto vars:     Size  Location     Type
  1896 ;;		None
  1897 ;; Return value:  Size  Location     Type
  1898 ;;                  2    2[COMRAM] int 
  1899 ;; Registers used:
  1900 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1901 ;; Tracked objects:
  1902 ;;		On entry : 0/0
  1903 ;;		On exit  : 0/0
  1904 ;;		Unchanged: 0/0
  1905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1906 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1908 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1909 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1910 ;;Total ram usage:        4 bytes
  1911 ;; Hardware stack levels used: 1
  1912 ;; Hardware stack levels required when called: 4
  1913 ;; This function calls:
  1914 ;;		Nothing
  1915 ;; This function is called by:
  1916 ;;		_cola_add
  1917 ;; This function uses a non-reentrant model
  1918 ;;
  1919                           
  1920                           	psect	text10
  1921   001B8E                     __ptext10:
  1922                           	callstack 0
  1923   001B8E                     _cola_llena:
  1924                           	callstack 25
  1925   001B8E                     
  1926                           ;cola.c: 76:     if (c->peso>=15){
  1927   001B8E  EE20 F013          	lfsr	2,19
  1928   001B92  5003               	movf	cola_llena@c^0,w,c
  1929   001B94  26D9               	addwf	fsr2l,f,c
  1930   001B96  5004               	movf	(cola_llena@c+1)^0,w,c
  1931   001B98  22DA               	addwfc	fsr2h,f,c
  1932   001B9A  0E01               	movlw	1
  1933   001B9C  BEDB               	btfsc	plusw2,7,c
  1934   001B9E  EFDB  F00D         	goto	u1051
  1935   001BA2  0E01               	movlw	1
  1936   001BA4  50DB               	movf	plusw2,w,c
  1937   001BA6  E109               	bnz	u1050
  1938   001BA8  0E0F               	movlw	15
  1939   001BAA  5CDE               	subwf	postinc2,w,c
  1940   001BAC  A0D8               	btfss	status,0,c
  1941   001BAE  EFDB  F00D         	goto	u1051
  1942   001BB2  EFDD  F00D         	goto	u1050
  1943   001BB6                     u1051:
  1944   001BB6  EFE3  F00D         	goto	l2795
  1945   001BBA                     u1050:
  1946   001BBA                     
  1947                           ;cola.c: 77:         return 1;
  1948   001BBA  0E00               	movlw	0
  1949   001BBC  6E04               	movwf	(?_cola_llena+1)^0,c
  1950   001BBE  0E01               	movlw	1
  1951   001BC0  6E03               	movwf	?_cola_llena^0,c
  1952   001BC2  EFE7  F00D         	goto	l800
  1953   001BC6                     l2795:
  1954                           
  1955                           ;cola.c: 80:         return 0;
  1956   001BC6  0E00               	movlw	0
  1957   001BC8  6E04               	movwf	(?_cola_llena+1)^0,c
  1958   001BCA  0E00               	movlw	0
  1959   001BCC  6E03               	movwf	?_cola_llena^0,c
  1960   001BCE                     l800:
  1961   001BCE  0012               	return		;funcret
  1962   001BD0                     __end_of_cola_llena:
  1963                           	callstack 0
  1964                           
  1965 ;; *************** function _actualize_valor *****************
  1966 ;; Defined at:
  1967 ;;		line 29 in file "processpi.c"
  1968 ;; Parameters:    Size  Location     Type
  1969 ;;  spi             2    2[COMRAM] PTR struct structspi
  1970 ;;		 -> main@spi(12), 
  1971 ;;  valorspi        2    4[COMRAM] unsigned int 
  1972 ;; Auto vars:     Size  Location     Type
  1973 ;;		None
  1974 ;; Return value:  Size  Location     Type
  1975 ;;                  1    wreg      void 
  1976 ;; Registers used:
  1977 ;;		fsr2l, fsr2h
  1978 ;; Tracked objects:
  1979 ;;		On entry : 0/0
  1980 ;;		On exit  : 0/0
  1981 ;;		Unchanged: 0/0
  1982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1983 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1986 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1987 ;;Total ram usage:        4 bytes
  1988 ;; Hardware stack levels used: 1
  1989 ;; Hardware stack levels required when called: 4
  1990 ;; This function calls:
  1991 ;;		Nothing
  1992 ;; This function is called by:
  1993 ;;		_main
  1994 ;; This function uses a non-reentrant model
  1995 ;;
  1996                           
  1997                           	psect	text11
  1998   001D88                     __ptext11:
  1999                           	callstack 0
  2000   001D88                     _actualize_valor:
  2001                           	callstack 26
  2002   001D88                     
  2003                           ;processpi.c: 30:     spi -> valor = valorspi;
  2004   001D88  0060  F00F  FFD9   	movff	actualize_valor@spi,fsr2l
  2005   001D8E  0060  F013  FFDA   	movff	actualize_valor@spi+1,fsr2h
  2006   001D94  0060  F017  FFDE   	movff	actualize_valor@valorspi,postinc2
  2007   001D9A  0060  F01B  FFDD   	movff	actualize_valor@valorspi+1,postdec2
  2008   001DA0  0012               	return		;funcret
  2009   001DA2                     __end_of_actualize_valor:
  2010                           	callstack 0
  2011                           
  2012 ;; *************** function _actualizar_recibido_Eusart *****************
  2013 ;; Defined at:
  2014 ;;		line 79 in file "proceseusart.c"
  2015 ;; Parameters:    Size  Location     Type
  2016 ;;  disp            2    8[COMRAM] PTR struct usart
  2017 ;;		 -> main@disp(11), 
  2018 ;; Auto vars:     Size  Location     Type
  2019 ;;		None
  2020 ;; Return value:  Size  Location     Type
  2021 ;;                  2    8[COMRAM] int 
  2022 ;; Registers used:
  2023 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2024 ;; Tracked objects:
  2025 ;;		On entry : 0/0
  2026 ;;		On exit  : 0/0
  2027 ;;		Unchanged: 0/0
  2028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2029 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2031 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2032 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2033 ;;Total ram usage:       10 bytes
  2034 ;; Hardware stack levels used: 1
  2035 ;; Hardware stack levels required when called: 5
  2036 ;; This function calls:
  2037 ;;		___wmul
  2038 ;; This function is called by:
  2039 ;;		_main
  2040 ;; This function uses a non-reentrant model
  2041 ;;
  2042                           
  2043                           	psect	text12
  2044   001862                     __ptext12:
  2045                           	callstack 0
  2046   001862                     _actualizar_recibido_Eusart:
  2047                           	callstack 25
  2048   001862                     
  2049                           ;proceseusart.c: 80:     disp -> recibir_dato_completo = 0;
  2050   001862  EE20 F009          	lfsr	2,9
  2051   001866  5009               	movf	actualizar_recibido_Eusart@disp^0,w,c
  2052   001868  26D9               	addwf	fsr2l,f,c
  2053   00186A  500A               	movf	(actualizar_recibido_Eusart@disp+1)^0,w,c
  2054   00186C  22DA               	addwfc	fsr2h,f,c
  2055   00186E  0E00               	movlw	0
  2056   001870  6EDF               	movwf	indf2,c
  2057   001872                     
  2058                           ;proceseusart.c: 81:     return ((disp -> numero1 - 48)*100 + (disp -> numero2 - 48)*10 
      +                          + (disp -> numero3 - 48));
  2059   001872  EE20 F005          	lfsr	2,5
  2060   001876  5009               	movf	actualizar_recibido_Eusart@disp^0,w,c
  2061   001878  26D9               	addwf	fsr2l,f,c
  2062   00187A  500A               	movf	(actualizar_recibido_Eusart@disp+1)^0,w,c
  2063   00187C  22DA               	addwfc	fsr2h,f,c
  2064   00187E  006F FF78  F00B    	movff	postinc2,??_actualizar_recibido_Eusart
  2065   001884  006F FF74  F00C    	movff	postdec2,??_actualizar_recibido_Eusart+1
  2066   00188A  EE20 F001          	lfsr	2,1
  2067   00188E  5009               	movf	actualizar_recibido_Eusart@disp^0,w,c
  2068   001890  26D9               	addwf	fsr2l,f,c
  2069   001892  500A               	movf	(actualizar_recibido_Eusart@disp+1)^0,w,c
  2070   001894  22DA               	addwfc	fsr2h,f,c
  2071   001896  006F FF78  F003    	movff	postinc2,___wmul@multiplier
  2072   00189C  006F FF74  F004    	movff	postdec2,___wmul@multiplier+1
  2073   0018A2  0E00               	movlw	0
  2074   0018A4  6E06               	movwf	(___wmul@multiplicand+1)^0,c
  2075   0018A6  0E64               	movlw	100
  2076   0018A8  6E05               	movwf	___wmul@multiplicand^0,c
  2077   0018AA  EC68  F00E         	call	___wmul	;wreg free
  2078   0018AE  C003  F00D         	movff	?___wmul,??_actualizar_recibido_Eusart+2
  2079   0018B2  C004  F00E         	movff	?___wmul+1,??_actualizar_recibido_Eusart+3
  2080   0018B6  EE20 F003          	lfsr	2,3
  2081   0018BA  5009               	movf	actualizar_recibido_Eusart@disp^0,w,c
  2082   0018BC  26D9               	addwf	fsr2l,f,c
  2083   0018BE  500A               	movf	(actualizar_recibido_Eusart@disp+1)^0,w,c
  2084   0018C0  22DA               	addwfc	fsr2h,f,c
  2085   0018C2  006F FF78  F003    	movff	postinc2,___wmul@multiplier
  2086   0018C8  006F FF74  F004    	movff	postdec2,___wmul@multiplier+1
  2087   0018CE  0E00               	movlw	0
  2088   0018D0  6E06               	movwf	(___wmul@multiplicand+1)^0,c
  2089   0018D2  0E0A               	movlw	10
  2090   0018D4  6E05               	movwf	___wmul@multiplicand^0,c
  2091   0018D6  EC68  F00E         	call	___wmul	;wreg free
  2092   0018DA  5003               	movf	?___wmul^0,w,c
  2093   0018DC  240D               	addwf	(??_actualizar_recibido_Eusart+2)^0,w,c
  2094   0018DE  6E0F               	movwf	(??_actualizar_recibido_Eusart+4)^0,c
  2095   0018E0  5004               	movf	(?___wmul+1)^0,w,c
  2096   0018E2  200E               	addwfc	(??_actualizar_recibido_Eusart+3)^0,w,c
  2097   0018E4  6E10               	movwf	(??_actualizar_recibido_Eusart+5)^0,c
  2098   0018E6  500B               	movf	??_actualizar_recibido_Eusart^0,w,c
  2099   0018E8  240F               	addwf	(??_actualizar_recibido_Eusart+4)^0,w,c
  2100   0018EA  6E11               	movwf	(??_actualizar_recibido_Eusart+6)^0,c
  2101   0018EC  500C               	movf	(??_actualizar_recibido_Eusart+1)^0,w,c
  2102   0018EE  2010               	addwfc	(??_actualizar_recibido_Eusart+5)^0,w,c
  2103   0018F0  6E12               	movwf	(??_actualizar_recibido_Eusart+7)^0,c
  2104   0018F2  0E30               	movlw	48
  2105   0018F4  2411               	addwf	(??_actualizar_recibido_Eusart+6)^0,w,c
  2106   0018F6  6E09               	movwf	?_actualizar_recibido_Eusart^0,c
  2107   0018F8  0EEB               	movlw	235
  2108   0018FA  2012               	addwfc	(??_actualizar_recibido_Eusart+7)^0,w,c
  2109   0018FC  6E0A               	movwf	(?_actualizar_recibido_Eusart+1)^0,c
  2110   0018FE  0012               	return		;funcret
  2111   001900                     __end_of_actualizar_recibido_Eusart:
  2112                           	callstack 0
  2113                           
  2114 ;; *************** function ___wmul *****************
  2115 ;; Defined at:
  2116 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  2117 ;; Parameters:    Size  Location     Type
  2118 ;;  multiplier      2    2[COMRAM] unsigned int 
  2119 ;;  multiplicand    2    4[COMRAM] unsigned int 
  2120 ;; Auto vars:     Size  Location     Type
  2121 ;;  product         2    6[COMRAM] unsigned int 
  2122 ;; Return value:  Size  Location     Type
  2123 ;;                  2    2[COMRAM] unsigned int 
  2124 ;; Registers used:
  2125 ;;		wreg, status,2, status,0, prodl, prodh
  2126 ;; Tracked objects:
  2127 ;;		On entry : 0/0
  2128 ;;		On exit  : 0/0
  2129 ;;		Unchanged: 0/0
  2130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2131 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2132 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2134 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2135 ;;Total ram usage:        6 bytes
  2136 ;; Hardware stack levels used: 1
  2137 ;; Hardware stack levels required when called: 4
  2138 ;; This function calls:
  2139 ;;		Nothing
  2140 ;; This function is called by:
  2141 ;;		_actualizar_recibido_Eusart
  2142 ;; This function uses a non-reentrant model
  2143 ;;
  2144                           
  2145                           	psect	text13
  2146   001CD0                     __ptext13:
  2147                           	callstack 0
  2148   001CD0                     ___wmul:
  2149                           	callstack 25
  2150   001CD0  5003               	movf	___wmul@multiplier^0,w,c
  2151   001CD2  0205               	mulwf	___wmul@multiplicand^0,c
  2152   001CD4  006F FFCC  F007    	movff	prodl,___wmul@product
  2153   001CDA  006F FFD0  F008    	movff	prodh,___wmul@product+1
  2154   001CE0  5003               	movf	___wmul@multiplier^0,w,c
  2155   001CE2  0206               	mulwf	(___wmul@multiplicand+1)^0,c
  2156   001CE4  50F3               	movf	243,w,c
  2157   001CE6  2608               	addwf	(___wmul@product+1)^0,f,c
  2158   001CE8  5004               	movf	(___wmul@multiplier+1)^0,w,c
  2159   001CEA  0205               	mulwf	___wmul@multiplicand^0,c
  2160   001CEC  50F3               	movf	243,w,c
  2161   001CEE  2608               	addwf	(___wmul@product+1)^0,f,c
  2162   001CF0  C007  F003         	movff	___wmul@product,?___wmul
  2163   001CF4  C008  F004         	movff	___wmul@product+1,?___wmul+1
  2164   001CF8  0012               	return		;funcret
  2165   001CFA                     __end_of___wmul:
  2166                           	callstack 0
  2167                           
  2168 ;; *************** function _UART1_is_tx_ready *****************
  2169 ;; Defined at:
  2170 ;;		line 165 in file "mcc_generated_files/uart1.c"
  2171 ;; Parameters:    Size  Location     Type
  2172 ;;		None
  2173 ;; Auto vars:     Size  Location     Type
  2174 ;;		None
  2175 ;; Return value:  Size  Location     Type
  2176 ;;                  1    wreg      _Bool 
  2177 ;; Registers used:
  2178 ;;		wreg, status,2
  2179 ;; Tracked objects:
  2180 ;;		On entry : 0/0
  2181 ;;		On exit  : 0/0
  2182 ;;		Unchanged: 0/0
  2183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2187 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2188 ;;Total ram usage:        0 bytes
  2189 ;; Hardware stack levels used: 1
  2190 ;; Hardware stack levels required when called: 4
  2191 ;; This function calls:
  2192 ;;		Nothing
  2193 ;; This function is called by:
  2194 ;;		_main
  2195 ;; This function uses a non-reentrant model
  2196 ;;
  2197                           
  2198                           	psect	text14
  2199   001DBC                     __ptext14:
  2200                           	callstack 0
  2201   001DBC                     _UART1_is_tx_ready:
  2202                           	callstack 26
  2203   001DBC                     
  2204                           ;mcc_generated_files/uart1.c: 167:     return (uart1TxBufferRemaining ? 1 : 0);
  2205   001DBC  502A               	movf	_uart1TxBufferRemaining^0,w,c	;volatile
  2206   001DBE  A4D8               	btfss	status,2,c
  2207   001DC0  EFE4  F00E         	goto	u1121
  2208   001DC4  EFE7  F00E         	goto	u1120
  2209   001DC8                     u1121:
  2210   001DC8  0E01               	movlw	1
  2211   001DCA  EFE8  F00E         	goto	u1130
  2212   001DCE                     u1120:
  2213   001DCE  0E00               	movlw	0
  2214   001DD0                     u1130:
  2215   001DD0  0012               	return		;funcret
  2216   001DD2                     __end_of_UART1_is_tx_ready:
  2217                           	callstack 0
  2218                           
  2219 ;; *************** function _UART1_is_rx_ready *****************
  2220 ;; Defined at:
  2221 ;;		line 160 in file "mcc_generated_files/uart1.c"
  2222 ;; Parameters:    Size  Location     Type
  2223 ;;		None
  2224 ;; Auto vars:     Size  Location     Type
  2225 ;;		None
  2226 ;; Return value:  Size  Location     Type
  2227 ;;                  1    wreg      _Bool 
  2228 ;; Registers used:
  2229 ;;		wreg, status,2
  2230 ;; Tracked objects:
  2231 ;;		On entry : 0/0
  2232 ;;		On exit  : 0/0
  2233 ;;		Unchanged: 0/0
  2234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2238 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2239 ;;Total ram usage:        0 bytes
  2240 ;; Hardware stack levels used: 1
  2241 ;; Hardware stack levels required when called: 4
  2242 ;; This function calls:
  2243 ;;		Nothing
  2244 ;; This function is called by:
  2245 ;;		_main
  2246 ;; This function uses a non-reentrant model
  2247 ;;
  2248                           
  2249                           	psect	text15
  2250   001DD2                     __ptext15:
  2251                           	callstack 0
  2252   001DD2                     _UART1_is_rx_ready:
  2253                           	callstack 26
  2254   001DD2                     
  2255                           ;mcc_generated_files/uart1.c: 162:     return (uart1RxCount ? 1 : 0);
  2256   001DD2  5027               	movf	_uart1RxCount^0,w,c	;volatile
  2257   001DD4  A4D8               	btfss	status,2,c
  2258   001DD6  EFEF  F00E         	goto	u1101
  2259   001DDA  EFF2  F00E         	goto	u1100
  2260   001DDE                     u1101:
  2261   001DDE  0E01               	movlw	1
  2262   001DE0  EFF3  F00E         	goto	u1110
  2263   001DE4                     u1100:
  2264   001DE4  0E00               	movlw	0
  2265   001DE6                     u1110:
  2266   001DE6  0012               	return		;funcret
  2267   001DE8                     __end_of_UART1_is_rx_ready:
  2268                           	callstack 0
  2269                           
  2270 ;; *************** function _Tm_Procese_tiempo *****************
  2271 ;; Defined at:
  2272 ;;		line 33 in file "nuestrostimers.c"
  2273 ;; Parameters:    Size  Location     Type
  2274 ;;  ctp             2    2[COMRAM] PTR struct Tm_Periodico
  2275 ;;		 -> main@timer(7), 
  2276 ;; Auto vars:     Size  Location     Type
  2277 ;;		None
  2278 ;; Return value:  Size  Location     Type
  2279 ;;                  1    wreg      void 
  2280 ;; Registers used:
  2281 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2282 ;; Tracked objects:
  2283 ;;		On entry : 0/0
  2284 ;;		On exit  : 0/0
  2285 ;;		Unchanged: 0/0
  2286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2287 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2289 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2290 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2291 ;;Total ram usage:        6 bytes
  2292 ;; Hardware stack levels used: 1
  2293 ;; Hardware stack levels required when called: 4
  2294 ;; This function calls:
  2295 ;;		Nothing
  2296 ;; This function is called by:
  2297 ;;		_main
  2298 ;; This function uses a non-reentrant model
  2299 ;;
  2300                           
  2301                           	psect	text16
  2302   00141C                     __ptext16:
  2303                           	callstack 0
  2304   00141C                     _Tm_Procese_tiempo:
  2305                           	callstack 26
  2306   00141C                     
  2307                           ;nuestrostimers.c: 33: void Tm_Procese_tiempo (Tm_Periodico *ctp);nuestrostimers.c: 35: 
      +                          {;nuestrostimers.c: 41:  if (ctp->banderas & 0x01U)
  2308   00141C  EE20 F006          	lfsr	2,6
  2309   001420  5003               	movf	Tm_Procese_tiempo@ctp^0,w,c
  2310   001422  26D9               	addwf	fsr2l,f,c
  2311   001424  5004               	movf	(Tm_Procese_tiempo@ctp+1)^0,w,c
  2312   001426  22DA               	addwfc	fsr2h,f,c
  2313   001428  A0DF               	btfss	indf2,0,c
  2314   00142A  EF19  F00A         	goto	u1141
  2315   00142E  EF1B  F00A         	goto	u1140
  2316   001432                     u1141:
  2317   001432  EF4D  F00A         	goto	l2897
  2318   001436                     u1140:
  2319   001436                     
  2320                           ;nuestrostimers.c: 43:  {;nuestrostimers.c: 45:   --(ctp->contador);
  2321   001436  0060  F00F  FFD9   	movff	Tm_Procese_tiempo@ctp,fsr2l
  2322   00143C  0060  F013  FFDA   	movff	Tm_Procese_tiempo@ctp+1,fsr2h
  2323   001442  06DE               	decf	postinc2,f,c
  2324   001444  0E00               	movlw	0
  2325   001446  5ADD               	subwfb	postdec2,f,c
  2326                           
  2327                           ;nuestrostimers.c: 47:   if ( !(ctp->contador) )
  2328   001448  0060  F00F  FFD9   	movff	Tm_Procese_tiempo@ctp,fsr2l
  2329   00144E  0060  F013  FFDA   	movff	Tm_Procese_tiempo@ctp+1,fsr2h
  2330   001454  50DE               	movf	postinc2,w,c
  2331   001456  10DE               	iorwf	postinc2,w,c
  2332   001458  A4D8               	btfss	status,2,c
  2333   00145A  EF31  F00A         	goto	u1151
  2334   00145E  EF33  F00A         	goto	u1150
  2335   001462                     u1151:
  2336   001462  EF4D  F00A         	goto	l2897
  2337   001466                     u1150:
  2338   001466                     
  2339                           ;nuestrostimers.c: 49:   {;nuestrostimers.c: 51:    ctp->banderas |= 0x02U;
  2340   001466  EE20 F006          	lfsr	2,6
  2341   00146A  5003               	movf	Tm_Procese_tiempo@ctp^0,w,c
  2342   00146C  26D9               	addwf	fsr2l,f,c
  2343   00146E  5004               	movf	(Tm_Procese_tiempo@ctp+1)^0,w,c
  2344   001470  22DA               	addwfc	fsr2h,f,c
  2345   001472  0E00               	movlw	0
  2346   001474  82DB               	bsf	plusw2,1,c
  2347   001476                     
  2348                           ;nuestrostimers.c: 53:    ctp->contador = ctp->periodo;
  2349   001476  EE20 F002          	lfsr	2,2
  2350   00147A  5003               	movf	Tm_Procese_tiempo@ctp^0,w,c
  2351   00147C  26D9               	addwf	fsr2l,f,c
  2352   00147E  5004               	movf	(Tm_Procese_tiempo@ctp+1)^0,w,c
  2353   001480  22DA               	addwfc	fsr2h,f,c
  2354   001482  0060  F00F  FFE1   	movff	Tm_Procese_tiempo@ctp,fsr1l
  2355   001488  0060  F013  FFE2   	movff	Tm_Procese_tiempo@ctp+1,fsr1h
  2356   00148E  006F FF7B FFE6     	movff	postinc2,postinc1
  2357   001494  006F FF77 FFE5     	movff	postdec2,postdec1
  2358   00149A                     l2897:
  2359                           
  2360                           ;nuestrostimers.c: 59:  if (ctp->banderas & 0x04U)
  2361   00149A  EE20 F006          	lfsr	2,6
  2362   00149E  5003               	movf	Tm_Procese_tiempo@ctp^0,w,c
  2363   0014A0  26D9               	addwf	fsr2l,f,c
  2364   0014A2  5004               	movf	(Tm_Procese_tiempo@ctp+1)^0,w,c
  2365   0014A4  22DA               	addwfc	fsr2h,f,c
  2366   0014A6  A4DF               	btfss	indf2,2,c
  2367   0014A8  EF58  F00A         	goto	u1161
  2368   0014AC  EF5A  F00A         	goto	u1160
  2369   0014B0                     u1161:
  2370   0014B0  EF78  F00A         	goto	l754
  2371   0014B4                     u1160:
  2372   0014B4                     
  2373                           ;nuestrostimers.c: 61:  ctp->timeout=ctp->timeout-1;
  2374   0014B4  EE20 F004          	lfsr	2,4
  2375   0014B8  5003               	movf	Tm_Procese_tiempo@ctp^0,w,c
  2376   0014BA  26D9               	addwf	fsr2l,f,c
  2377   0014BC  5004               	movf	(Tm_Procese_tiempo@ctp+1)^0,w,c
  2378   0014BE  22DA               	addwfc	fsr2h,f,c
  2379   0014C0  006F FF78  F005    	movff	postinc2,??_Tm_Procese_tiempo
  2380   0014C6  006F FF74  F006    	movff	postdec2,??_Tm_Procese_tiempo+1
  2381   0014CC  0EFF               	movlw	255
  2382   0014CE  2405               	addwf	??_Tm_Procese_tiempo^0,w,c
  2383   0014D0  6E07               	movwf	(??_Tm_Procese_tiempo+2)^0,c
  2384   0014D2  0EFF               	movlw	255
  2385   0014D4  2006               	addwfc	(??_Tm_Procese_tiempo+1)^0,w,c
  2386   0014D6  6E08               	movwf	(??_Tm_Procese_tiempo+3)^0,c
  2387   0014D8  EE20 F004          	lfsr	2,4
  2388   0014DC  5003               	movf	Tm_Procese_tiempo@ctp^0,w,c
  2389   0014DE  26D9               	addwf	fsr2l,f,c
  2390   0014E0  5004               	movf	(Tm_Procese_tiempo@ctp+1)^0,w,c
  2391   0014E2  22DA               	addwfc	fsr2h,f,c
  2392   0014E4  0060  F01F  FFDE   	movff	??_Tm_Procese_tiempo+2,postinc2
  2393   0014EA  0060  F023  FFDD   	movff	??_Tm_Procese_tiempo+3,postdec2
  2394   0014F0                     l754:
  2395   0014F0  0012               	return		;funcret
  2396   0014F2                     __end_of_Tm_Procese_tiempo:
  2397                           	callstack 0
  2398                           
  2399 ;; *************** function _Tm_Inicie_periodico *****************
  2400 ;; Defined at:
  2401 ;;		line 21 in file "nuestrostimers.c"
  2402 ;; Parameters:    Size  Location     Type
  2403 ;;  ctp             2   18[COMRAM] PTR struct Tm_Periodico
  2404 ;;		 -> main@timer(7), 
  2405 ;;  periodo         2   20[COMRAM] unsigned int 
  2406 ;; Auto vars:     Size  Location     Type
  2407 ;;		None
  2408 ;; Return value:  Size  Location     Type
  2409 ;;                  1    wreg      void 
  2410 ;; Registers used:
  2411 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2412 ;; Tracked objects:
  2413 ;;		On entry : 0/0
  2414 ;;		On exit  : 0/0
  2415 ;;		Unchanged: 0/0
  2416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2417 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2420 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2421 ;;Total ram usage:        4 bytes
  2422 ;; Hardware stack levels used: 1
  2423 ;; Hardware stack levels required when called: 4
  2424 ;; This function calls:
  2425 ;;		Nothing
  2426 ;; This function is called by:
  2427 ;;		_main
  2428 ;; This function uses a non-reentrant model
  2429 ;;
  2430                           
  2431                           	psect	text17
  2432   001AF8                     __ptext17:
  2433                           	callstack 0
  2434   001AF8                     _Tm_Inicie_periodico:
  2435                           	callstack 26
  2436   001AF8                     
  2437                           ;nuestrostimers.c: 21: void Tm_Inicie_periodico (Tm_Periodico *ctp,unsigned int periodo)
      +                          ;nuestrostimers.c: 23: {;nuestrostimers.c: 25:  ctp->banderas |= 0x01U;
  2438   001AF8  EE20 F006          	lfsr	2,6
  2439   001AFC  5013               	movf	Tm_Inicie_periodico@ctp^0,w,c
  2440   001AFE  26D9               	addwf	fsr2l,f,c
  2441   001B00  5014               	movf	(Tm_Inicie_periodico@ctp+1)^0,w,c
  2442   001B02  22DA               	addwfc	fsr2h,f,c
  2443   001B04  0E00               	movlw	0
  2444   001B06  80DB               	bsf	plusw2,0,c
  2445                           
  2446                           ;nuestrostimers.c: 27:  ctp->banderas &= ~0x02U;
  2447   001B08  EE20 F006          	lfsr	2,6
  2448   001B0C  5013               	movf	Tm_Inicie_periodico@ctp^0,w,c
  2449   001B0E  26D9               	addwf	fsr2l,f,c
  2450   001B10  5014               	movf	(Tm_Inicie_periodico@ctp+1)^0,w,c
  2451   001B12  22DA               	addwfc	fsr2h,f,c
  2452   001B14  0EFD               	movlw	253
  2453   001B16  16DF               	andwf	indf2,f,c
  2454   001B18                     
  2455                           ;nuestrostimers.c: 29:  ctp->contador = ctp->periodo = periodo;
  2456   001B18  EE20 F002          	lfsr	2,2
  2457   001B1C  5013               	movf	Tm_Inicie_periodico@ctp^0,w,c
  2458   001B1E  26D9               	addwf	fsr2l,f,c
  2459   001B20  5014               	movf	(Tm_Inicie_periodico@ctp+1)^0,w,c
  2460   001B22  22DA               	addwfc	fsr2h,f,c
  2461   001B24  0060  F057  FFDE   	movff	Tm_Inicie_periodico@periodo,postinc2
  2462   001B2A  0060  F05B  FFDD   	movff	Tm_Inicie_periodico@periodo+1,postdec2
  2463   001B30  0060  F04F  FFE1   	movff	Tm_Inicie_periodico@ctp,fsr1l
  2464   001B36  0060  F053  FFE2   	movff	Tm_Inicie_periodico@ctp+1,fsr1h
  2465   001B3C  006F FF7B FFE6     	movff	postinc2,postinc1
  2466   001B42  006F FF77 FFE5     	movff	postdec2,postdec1
  2467   001B48  0012               	return		;funcret
  2468   001B4A                     __end_of_Tm_Inicie_periodico:
  2469                           	callstack 0
  2470                           
  2471 ;; *************** function _Tm_Hubo_periodico *****************
  2472 ;; Defined at:
  2473 ;;		line 65 in file "nuestrostimers.c"
  2474 ;; Parameters:    Size  Location     Type
  2475 ;;  ctp             2    2[COMRAM] PTR struct Tm_Periodico
  2476 ;;		 -> main@timer(7), 
  2477 ;; Auto vars:     Size  Location     Type
  2478 ;;		None
  2479 ;; Return value:  Size  Location     Type
  2480 ;;                  1    wreg      unsigned char 
  2481 ;; Registers used:
  2482 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2483 ;; Tracked objects:
  2484 ;;		On entry : 0/0
  2485 ;;		On exit  : 0/0
  2486 ;;		Unchanged: 0/0
  2487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2488 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2491 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2492 ;;Total ram usage:        2 bytes
  2493 ;; Hardware stack levels used: 1
  2494 ;; Hardware stack levels required when called: 4
  2495 ;; This function calls:
  2496 ;;		Nothing
  2497 ;; This function is called by:
  2498 ;;		_main
  2499 ;; This function uses a non-reentrant model
  2500 ;;
  2501                           
  2502                           	psect	text18
  2503   001E14                     __ptext18:
  2504                           	callstack 0
  2505   001E14                     _Tm_Hubo_periodico:
  2506                           	callstack 26
  2507   001E14                     
  2508                           ;nuestrostimers.c: 65: char Tm_Hubo_periodico (Tm_Periodico *ctp);nuestrostimers.c: 67: 
      +                          {;nuestrostimers.c: 69:  return (ctp->banderas & 0x02U);
  2509   001E14  EE20 F006          	lfsr	2,6
  2510   001E18  5003               	movf	Tm_Hubo_periodico@ctp^0,w,c
  2511   001E1A  26D9               	addwf	fsr2l,f,c
  2512   001E1C  5004               	movf	(Tm_Hubo_periodico@ctp+1)^0,w,c
  2513   001E1E  22DA               	addwfc	fsr2h,f,c
  2514   001E20  50DF               	movf	indf2,w,c
  2515   001E22  0B02               	andlw	2
  2516   001E24  0012               	return		;funcret
  2517   001E26                     __end_of_Tm_Hubo_periodico:
  2518                           	callstack 0
  2519                           
  2520 ;; *************** function _Tm_Baje_periodico *****************
  2521 ;; Defined at:
  2522 ;;		line 73 in file "nuestrostimers.c"
  2523 ;; Parameters:    Size  Location     Type
  2524 ;;  ctp             2    2[COMRAM] PTR struct Tm_Periodico
  2525 ;;		 -> main@timer(7), 
  2526 ;; Auto vars:     Size  Location     Type
  2527 ;;		None
  2528 ;; Return value:  Size  Location     Type
  2529 ;;                  1    wreg      void 
  2530 ;; Registers used:
  2531 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2532 ;; Tracked objects:
  2533 ;;		On entry : 0/0
  2534 ;;		On exit  : 0/0
  2535 ;;		Unchanged: 0/0
  2536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2537 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2540 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2541 ;;Total ram usage:        2 bytes
  2542 ;; Hardware stack levels used: 1
  2543 ;; Hardware stack levels required when called: 4
  2544 ;; This function calls:
  2545 ;;		Nothing
  2546 ;; This function is called by:
  2547 ;;		_main
  2548 ;; This function uses a non-reentrant model
  2549 ;;
  2550                           
  2551                           	psect	text19
  2552   001E26                     __ptext19:
  2553                           	callstack 0
  2554   001E26                     _Tm_Baje_periodico:
  2555                           	callstack 26
  2556   001E26                     
  2557                           ;nuestrostimers.c: 73: void Tm_Baje_periodico (Tm_Periodico *ctp);nuestrostimers.c: 75: 
      +                          {;nuestrostimers.c: 77:  ctp->banderas &= ~0x02U;
  2558   001E26  EE20 F006          	lfsr	2,6
  2559   001E2A  5003               	movf	Tm_Baje_periodico@ctp^0,w,c
  2560   001E2C  26D9               	addwf	fsr2l,f,c
  2561   001E2E  5004               	movf	(Tm_Baje_periodico@ctp+1)^0,w,c
  2562   001E30  22DA               	addwfc	fsr2h,f,c
  2563   001E32  0EFD               	movlw	253
  2564   001E34  16DF               	andwf	indf2,f,c
  2565   001E36  0012               	return		;funcret
  2566   001E38                     __end_of_Tm_Baje_periodico:
  2567                           	callstack 0
  2568                           
  2569 ;; *************** function _TMR2_HasOverflowOccured *****************
  2570 ;; Defined at:
  2571 ;;		line 157 in file "mcc_generated_files/tmr2.c"
  2572 ;; Parameters:    Size  Location     Type
  2573 ;;		None
  2574 ;; Auto vars:     Size  Location     Type
  2575 ;;  status          1    2[COMRAM] _Bool 
  2576 ;; Return value:  Size  Location     Type
  2577 ;;                  1    wreg      _Bool 
  2578 ;; Registers used:
  2579 ;;		wreg, status,2
  2580 ;; Tracked objects:
  2581 ;;		On entry : 0/0
  2582 ;;		On exit  : 0/0
  2583 ;;		Unchanged: 0/0
  2584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2586 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2588 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2589 ;;Total ram usage:        1 bytes
  2590 ;; Hardware stack levels used: 1
  2591 ;; Hardware stack levels required when called: 4
  2592 ;; This function calls:
  2593 ;;		Nothing
  2594 ;; This function is called by:
  2595 ;;		_main
  2596 ;; This function uses a non-reentrant model
  2597 ;;
  2598                           
  2599                           	psect	text20
  2600   001C4E                     __ptext20:
  2601                           	callstack 0
  2602   001C4E                     _TMR2_HasOverflowOccured:
  2603                           	callstack 26
  2604   001C4E                     
  2605                           ;mcc_generated_files/tmr2.c: 160:     _Bool status = PIR4bits.TMR2IF;
  2606   001C4E  0139               	movlb	57	; () banked
  2607   001C50  B5A4               	btfsc	164,2,b	;volatile
  2608   001C52  EF2D  F00E         	goto	u1061
  2609   001C56  EF30  F00E         	goto	u1060
  2610   001C5A                     u1061:
  2611   001C5A  0E01               	movlw	1
  2612   001C5C  EF31  F00E         	goto	u1066
  2613   001C60                     u1060:
  2614   001C60  0E00               	movlw	0
  2615   001C62                     u1066:
  2616   001C62  6E03               	movwf	TMR2_HasOverflowOccured@status^0,c
  2617                           
  2618                           ;mcc_generated_files/tmr2.c: 161:     if(status)
  2619   001C64  5003               	movf	TMR2_HasOverflowOccured@status^0,w,c
  2620   001C66  B4D8               	btfsc	status,2,c
  2621   001C68  EF38  F00E         	goto	u1071
  2622   001C6C  EF3A  F00E         	goto	u1070
  2623   001C70                     u1071:
  2624   001C70  EF3B  F00E         	goto	l2827
  2625   001C74                     u1070:
  2626   001C74                     
  2627                           ; BSR set to: 57
  2628                           ;mcc_generated_files/tmr2.c: 162:     {;mcc_generated_files/tmr2.c: 164:         PIR4bit
      +                          s.TMR2IF = 0;
  2629   001C74  95A4               	bcf	164,2,b	;volatile
  2630   001C76                     l2827:
  2631                           
  2632                           ; BSR set to: 57
  2633                           ;mcc_generated_files/tmr2.c: 166:     return status;
  2634   001C76  5003               	movf	TMR2_HasOverflowOccured@status^0,w,c
  2635   001C78                     
  2636                           ; BSR set to: 57
  2637   001C78  0012               	return		;funcret
  2638   001C7A                     __end_of_TMR2_HasOverflowOccured:
  2639                           	callstack 0
  2640                           
  2641 ;; *************** function _SYSTEM_Initialize *****************
  2642 ;; Defined at:
  2643 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2644 ;; Parameters:    Size  Location     Type
  2645 ;;		None
  2646 ;; Auto vars:     Size  Location     Type
  2647 ;;		None
  2648 ;; Return value:  Size  Location     Type
  2649 ;;                  1    wreg      void 
  2650 ;; Registers used:
  2651 ;;		wreg, status,2, status,0, cstack
  2652 ;; Tracked objects:
  2653 ;;		On entry : 0/0
  2654 ;;		On exit  : 0/0
  2655 ;;		Unchanged: 0/0
  2656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2660 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2661 ;;Total ram usage:        0 bytes
  2662 ;; Hardware stack levels used: 1
  2663 ;; Hardware stack levels required when called: 6
  2664 ;; This function calls:
  2665 ;;		_ADCC_Initialize
  2666 ;;		_FVR_Initialize
  2667 ;;		_INTERRUPT_Initialize
  2668 ;;		_OSCILLATOR_Initialize
  2669 ;;		_PIN_MANAGER_Initialize
  2670 ;;		_PMD_Initialize
  2671 ;;		_SPI1_Initialize
  2672 ;;		_TMR2_Initialize
  2673 ;;		_UART1_Initialize
  2674 ;; This function is called by:
  2675 ;;		_main
  2676 ;; This function uses a non-reentrant model
  2677 ;;
  2678                           
  2679                           	psect	text21
  2680   001CFA                     __ptext21:
  2681                           	callstack 0
  2682   001CFA                     _SYSTEM_Initialize:
  2683                           	callstack 24
  2684   001CFA                     
  2685                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
  2686   001CFA  EC54  F00F         	call	_INTERRUPT_Initialize	;wreg free
  2687   001CFE                     
  2688                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  2689   001CFE  ECA3  F00E         	call	_PMD_Initialize	;wreg free
  2690   001D02                     
  2691                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  2692   001D02  EC8C  F00B         	call	_PIN_MANAGER_Initialize	;wreg free
  2693   001D06                     
  2694                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  2695   001D06  EC90  F00E         	call	_OSCILLATOR_Initialize	;wreg free
  2696   001D0A                     
  2697                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
  2698   001D0A  EC49  F00F         	call	_FVR_Initialize	;wreg free
  2699   001D0E                     
  2700                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
  2701   001D0E  EC4E  F00D         	call	_ADCC_Initialize	;wreg free
  2702   001D12                     
  2703                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
  2704   001D12  ECB5  F00E         	call	_TMR2_Initialize	;wreg free
  2705   001D16                     
  2706                           ;mcc_generated_files/mcc.c: 59:     UART1_Initialize();
  2707   001D16  ECDF  F00B         	call	_UART1_Initialize	;wreg free
  2708   001D1A                     
  2709                           ;mcc_generated_files/mcc.c: 60:     SPI1_Initialize();
  2710   001D1A  ECD1  F00E         	call	_SPI1_Initialize	;wreg free
  2711   001D1E  0012               	return		;funcret
  2712   001D20                     __end_of_SYSTEM_Initialize:
  2713                           	callstack 0
  2714                           
  2715 ;; *************** function _UART1_Initialize *****************
  2716 ;; Defined at:
  2717 ;;		line 86 in file "mcc_generated_files/uart1.c"
  2718 ;; Parameters:    Size  Location     Type
  2719 ;;		None
  2720 ;; Auto vars:     Size  Location     Type
  2721 ;;		None
  2722 ;; Return value:  Size  Location     Type
  2723 ;;                  1    wreg      void 
  2724 ;; Registers used:
  2725 ;;		wreg, status,2, status,0, cstack
  2726 ;; Tracked objects:
  2727 ;;		On entry : 0/0
  2728 ;;		On exit  : 0/0
  2729 ;;		Unchanged: 0/0
  2730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2734 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2735 ;;Total ram usage:        0 bytes
  2736 ;; Hardware stack levels used: 1
  2737 ;; Hardware stack levels required when called: 5
  2738 ;; This function calls:
  2739 ;;		_UART1_SetErrorHandler
  2740 ;;		_UART1_SetFramingErrorHandler
  2741 ;;		_UART1_SetOverrunErrorHandler
  2742 ;;		_UART1_SetRxInterruptHandler
  2743 ;;		_UART1_SetTxInterruptHandler
  2744 ;; This function is called by:
  2745 ;;		_SYSTEM_Initialize
  2746 ;;		_main
  2747 ;; This function uses a non-reentrant model
  2748 ;;
  2749                           
  2750                           	psect	text22
  2751   0017BE                     __ptext22:
  2752                           	callstack 0
  2753   0017BE                     _UART1_Initialize:
  2754                           	callstack 25
  2755   0017BE                     
  2756                           ;mcc_generated_files/uart1.c: 89:     PIE3bits.U1RXIE = 0;
  2757   0017BE  0139               	movlb	57	; () banked
  2758   0017C0  9793               	bcf	147,3,b	;volatile
  2759   0017C2                     
  2760                           ; BSR set to: 57
  2761                           ;mcc_generated_files/uart1.c: 90:     UART1_SetRxInterruptHandler(UART1_Receive_ISR);
  2762   0017C2  0EF2               	movlw	low _UART1_Receive_ISR
  2763   0017C4  6E03               	movwf	UART1_SetRxInterruptHandler@InterruptHandler^0,c
  2764   0017C6  0E14               	movlw	high _UART1_Receive_ISR
  2765   0017C8  6E04               	movwf	(UART1_SetRxInterruptHandler@InterruptHandler+1)^0,c
  2766   0017CA  EC31  F00F         	call	_UART1_SetRxInterruptHandler	;wreg free
  2767   0017CE                     
  2768                           ;mcc_generated_files/uart1.c: 91:     PIE3bits.U1TXIE = 0;
  2769   0017CE  0139               	movlb	57	; () banked
  2770   0017D0  9993               	bcf	147,4,b	;volatile
  2771                           
  2772                           ;mcc_generated_files/uart1.c: 92:     UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
  2773   0017D2  0E4A               	movlw	low _UART1_Transmit_ISR
  2774   0017D4  6E03               	movwf	UART1_SetTxInterruptHandler@InterruptHandler^0,c
  2775   0017D6  0E1B               	movlw	high _UART1_Transmit_ISR
  2776   0017D8  6E04               	movwf	(UART1_SetTxInterruptHandler@InterruptHandler+1)^0,c
  2777   0017DA  EC2C  F00F         	call	_UART1_SetTxInterruptHandler	;wreg free
  2778   0017DE                     
  2779                           ;mcc_generated_files/uart1.c: 97:     U1P1L = 0x00;
  2780   0017DE  0E00               	movlw	0
  2781   0017E0  013D               	movlb	61	; () banked
  2782   0017E2  6FEC               	movwf	236,b	;volatile
  2783   0017E4                     
  2784                           ; BSR set to: 61
  2785                           ;mcc_generated_files/uart1.c: 100:     U1P1H = 0x00;
  2786   0017E4  0E00               	movlw	0
  2787   0017E6  6FED               	movwf	237,b	;volatile
  2788   0017E8                     
  2789                           ; BSR set to: 61
  2790                           ;mcc_generated_files/uart1.c: 103:     U1P2L = 0x00;
  2791   0017E8  0E00               	movlw	0
  2792   0017EA  6FEE               	movwf	238,b	;volatile
  2793   0017EC                     
  2794                           ; BSR set to: 61
  2795                           ;mcc_generated_files/uart1.c: 106:     U1P2H = 0x00;
  2796   0017EC  0E00               	movlw	0
  2797   0017EE  6FEF               	movwf	239,b	;volatile
  2798   0017F0                     
  2799                           ; BSR set to: 61
  2800                           ;mcc_generated_files/uart1.c: 109:     U1P3L = 0x00;
  2801   0017F0  0E00               	movlw	0
  2802   0017F2  6FF0               	movwf	240,b	;volatile
  2803   0017F4                     
  2804                           ; BSR set to: 61
  2805                           ;mcc_generated_files/uart1.c: 112:     U1P3H = 0x00;
  2806   0017F4  0E00               	movlw	0
  2807   0017F6  6FF1               	movwf	241,b	;volatile
  2808   0017F8                     
  2809                           ; BSR set to: 61
  2810                           ;mcc_generated_files/uart1.c: 115:     U1CON0 = 0xB0;
  2811   0017F8  0EB0               	movlw	176
  2812   0017FA  6FF2               	movwf	242,b	;volatile
  2813   0017FC                     
  2814                           ; BSR set to: 61
  2815                           ;mcc_generated_files/uart1.c: 118:     U1CON1 = 0x80;
  2816   0017FC  0E80               	movlw	128
  2817   0017FE  6FF3               	movwf	243,b	;volatile
  2818   001800                     
  2819                           ; BSR set to: 61
  2820                           ;mcc_generated_files/uart1.c: 121:     U1CON2 = 0x00;
  2821   001800  0E00               	movlw	0
  2822   001802  6FF4               	movwf	244,b	;volatile
  2823   001804                     
  2824                           ; BSR set to: 61
  2825                           ;mcc_generated_files/uart1.c: 124:     U1BRGL = 0x07;
  2826   001804  0E07               	movlw	7
  2827   001806  6FF5               	movwf	245,b	;volatile
  2828   001808                     
  2829                           ; BSR set to: 61
  2830                           ;mcc_generated_files/uart1.c: 127:     U1BRGH = 0x00;
  2831   001808  0E00               	movlw	0
  2832   00180A  6FF6               	movwf	246,b	;volatile
  2833   00180C                     
  2834                           ; BSR set to: 61
  2835                           ;mcc_generated_files/uart1.c: 130:     U1FIFO = 0x00;
  2836   00180C  0E00               	movlw	0
  2837   00180E  6FF7               	movwf	247,b	;volatile
  2838   001810                     
  2839                           ; BSR set to: 61
  2840                           ;mcc_generated_files/uart1.c: 133:     U1UIR = 0x00;
  2841   001810  0E00               	movlw	0
  2842   001812  6FF8               	movwf	248,b	;volatile
  2843   001814                     
  2844                           ; BSR set to: 61
  2845                           ;mcc_generated_files/uart1.c: 136:     U1ERRIR = 0x00;
  2846   001814  0E00               	movlw	0
  2847   001816  6FF9               	movwf	249,b	;volatile
  2848   001818                     
  2849                           ; BSR set to: 61
  2850                           ;mcc_generated_files/uart1.c: 139:     U1ERRIE = 0x00;
  2851   001818  0E00               	movlw	0
  2852   00181A  6FFA               	movwf	250,b	;volatile
  2853   00181C                     
  2854                           ; BSR set to: 61
  2855                           ;mcc_generated_files/uart1.c: 142:     UART1_SetFramingErrorHandler(UART1_DefaultFraming
      +                          ErrorHandler);
  2856   00181C  0EAE               	movlw	low _UART1_DefaultFramingErrorHandler
  2857   00181E  6E03               	movwf	UART1_SetFramingErrorHandler@interruptHandler^0,c
  2858   001820  0E1E               	movlw	high _UART1_DefaultFramingErrorHandler
  2859   001822  6E04               	movwf	(UART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  2860   001824  EC3B  F00F         	call	_UART1_SetFramingErrorHandler	;wreg free
  2861   001828                     
  2862                           ;mcc_generated_files/uart1.c: 143:     UART1_SetOverrunErrorHandler(UART1_DefaultOverrun
      +                          ErrorHandler);
  2863   001828  0EAC               	movlw	low _UART1_DefaultOverrunErrorHandler
  2864   00182A  6E03               	movwf	UART1_SetOverrunErrorHandler@interruptHandler^0,c
  2865   00182C  0E1E               	movlw	high _UART1_DefaultOverrunErrorHandler
  2866   00182E  6E04               	movwf	(UART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  2867   001830  EC36  F00F         	call	_UART1_SetOverrunErrorHandler	;wreg free
  2868   001834                     
  2869                           ;mcc_generated_files/uart1.c: 144:     UART1_SetErrorHandler(UART1_DefaultErrorHandler);
  2870   001834  0EA2               	movlw	low _UART1_DefaultErrorHandler
  2871   001836  6E03               	movwf	UART1_SetErrorHandler@interruptHandler^0,c
  2872   001838  0E1E               	movlw	high _UART1_DefaultErrorHandler
  2873   00183A  6E04               	movwf	(UART1_SetErrorHandler@interruptHandler+1)^0,c
  2874   00183C  EC40  F00F         	call	_UART1_SetErrorHandler	;wreg free
  2875                           
  2876                           ;mcc_generated_files/uart1.c: 146:     uart1RxLastError.status = 0;
  2877   001840  0E00               	movlw	0
  2878   001842  6E26               	movwf	_uart1RxLastError^0,c	;volatile
  2879                           
  2880                           ;mcc_generated_files/uart1.c: 149:     uart1TxHead = 0;
  2881   001844  0E00               	movlw	0
  2882   001846  6E2C               	movwf	_uart1TxHead^0,c	;volatile
  2883                           
  2884                           ;mcc_generated_files/uart1.c: 150:     uart1TxTail = 0;
  2885   001848  0E00               	movlw	0
  2886   00184A  6E2B               	movwf	_uart1TxTail^0,c	;volatile
  2887                           
  2888                           ;mcc_generated_files/uart1.c: 151:     uart1TxBufferRemaining = sizeof(uart1TxBuffer);
  2889   00184C  0E08               	movlw	8
  2890   00184E  6E2A               	movwf	_uart1TxBufferRemaining^0,c	;volatile
  2891                           
  2892                           ;mcc_generated_files/uart1.c: 152:     uart1RxHead = 0;
  2893   001850  0E00               	movlw	0
  2894   001852  6E29               	movwf	_uart1RxHead^0,c	;volatile
  2895                           
  2896                           ;mcc_generated_files/uart1.c: 153:     uart1RxTail = 0;
  2897   001854  0E00               	movlw	0
  2898   001856  6E28               	movwf	_uart1RxTail^0,c	;volatile
  2899                           
  2900                           ;mcc_generated_files/uart1.c: 154:     uart1RxCount = 0;
  2901   001858  0E00               	movlw	0
  2902   00185A  6E27               	movwf	_uart1RxCount^0,c	;volatile
  2903   00185C                     
  2904                           ;mcc_generated_files/uart1.c: 157:     PIE3bits.U1RXIE = 1;
  2905   00185C  0139               	movlb	57	; () banked
  2906   00185E  8793               	bsf	147,3,b	;volatile
  2907   001860                     
  2908                           ; BSR set to: 57
  2909   001860  0012               	return		;funcret
  2910   001862                     __end_of_UART1_Initialize:
  2911                           	callstack 0
  2912                           
  2913 ;; *************** function _UART1_SetTxInterruptHandler *****************
  2914 ;; Defined at:
  2915 ;;		line 308 in file "mcc_generated_files/uart1.c"
  2916 ;; Parameters:    Size  Location     Type
  2917 ;;  InterruptHan    2    2[COMRAM] PTR FTN()void 
  2918 ;;		 -> UART1_Transmit_ISR(1), 
  2919 ;; Auto vars:     Size  Location     Type
  2920 ;;		None
  2921 ;; Return value:  Size  Location     Type
  2922 ;;                  1    wreg      void 
  2923 ;; Registers used:
  2924 ;;		wreg, status,2, status,0
  2925 ;; Tracked objects:
  2926 ;;		On entry : 0/0
  2927 ;;		On exit  : 0/0
  2928 ;;		Unchanged: 0/0
  2929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2930 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2933 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2934 ;;Total ram usage:        2 bytes
  2935 ;; Hardware stack levels used: 1
  2936 ;; Hardware stack levels required when called: 4
  2937 ;; This function calls:
  2938 ;;		Nothing
  2939 ;; This function is called by:
  2940 ;;		_UART1_Initialize
  2941 ;; This function uses a non-reentrant model
  2942 ;;
  2943                           
  2944                           	psect	text23
  2945   001E58                     __ptext23:
  2946                           	callstack 0
  2947   001E58                     _UART1_SetTxInterruptHandler:
  2948                           	callstack 25
  2949   001E58                     
  2950                           ;mcc_generated_files/uart1.c: 309:     UART1_TxInterruptHandler = InterruptHandler;
  2951   001E58  C003  F01E         	movff	UART1_SetTxInterruptHandler@InterruptHandler,_UART1_TxInterruptHandler
  2952   001E5C  C004  F01F         	movff	UART1_SetTxInterruptHandler@InterruptHandler+1,_UART1_TxInterruptHandler+1
  2953   001E60  0012               	return		;funcret
  2954   001E62                     __end_of_UART1_SetTxInterruptHandler:
  2955                           	callstack 0
  2956                           
  2957 ;; *************** function _UART1_SetRxInterruptHandler *****************
  2958 ;; Defined at:
  2959 ;;		line 304 in file "mcc_generated_files/uart1.c"
  2960 ;; Parameters:    Size  Location     Type
  2961 ;;  InterruptHan    2    2[COMRAM] PTR FTN()void 
  2962 ;;		 -> UART1_Receive_ISR(1), 
  2963 ;; Auto vars:     Size  Location     Type
  2964 ;;		None
  2965 ;; Return value:  Size  Location     Type
  2966 ;;                  1    wreg      void 
  2967 ;; Registers used:
  2968 ;;		wreg, status,2, status,0
  2969 ;; Tracked objects:
  2970 ;;		On entry : 0/0
  2971 ;;		On exit  : 0/0
  2972 ;;		Unchanged: 0/0
  2973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2974 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2977 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2978 ;;Total ram usage:        2 bytes
  2979 ;; Hardware stack levels used: 1
  2980 ;; Hardware stack levels required when called: 4
  2981 ;; This function calls:
  2982 ;;		Nothing
  2983 ;; This function is called by:
  2984 ;;		_UART1_Initialize
  2985 ;; This function uses a non-reentrant model
  2986 ;;
  2987                           
  2988                           	psect	text24
  2989   001E62                     __ptext24:
  2990                           	callstack 0
  2991   001E62                     _UART1_SetRxInterruptHandler:
  2992                           	callstack 25
  2993   001E62                     
  2994                           ;mcc_generated_files/uart1.c: 305:     UART1_RxInterruptHandler = InterruptHandler;
  2995   001E62  C003  F020         	movff	UART1_SetRxInterruptHandler@InterruptHandler,_UART1_RxInterruptHandler
  2996   001E66  C004  F021         	movff	UART1_SetRxInterruptHandler@InterruptHandler+1,_UART1_RxInterruptHandler+1
  2997   001E6A  0012               	return		;funcret
  2998   001E6C                     __end_of_UART1_SetRxInterruptHandler:
  2999                           	callstack 0
  3000                           
  3001 ;; *************** function _UART1_SetOverrunErrorHandler *****************
  3002 ;; Defined at:
  3003 ;;		line 294 in file "mcc_generated_files/uart1.c"
  3004 ;; Parameters:    Size  Location     Type
  3005 ;;  interruptHan    2    2[COMRAM] PTR FTN()void 
  3006 ;;		 -> UART1_DefaultOverrunErrorHandler(1), 
  3007 ;; Auto vars:     Size  Location     Type
  3008 ;;		None
  3009 ;; Return value:  Size  Location     Type
  3010 ;;                  1    wreg      void 
  3011 ;; Registers used:
  3012 ;;		wreg, status,2, status,0
  3013 ;; Tracked objects:
  3014 ;;		On entry : 0/0
  3015 ;;		On exit  : 0/0
  3016 ;;		Unchanged: 0/0
  3017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3018 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3021 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3022 ;;Total ram usage:        2 bytes
  3023 ;; Hardware stack levels used: 1
  3024 ;; Hardware stack levels required when called: 4
  3025 ;; This function calls:
  3026 ;;		Nothing
  3027 ;; This function is called by:
  3028 ;;		_UART1_Initialize
  3029 ;; This function uses a non-reentrant model
  3030 ;;
  3031                           
  3032                           	psect	text25
  3033   001E6C                     __ptext25:
  3034                           	callstack 0
  3035   001E6C                     _UART1_SetOverrunErrorHandler:
  3036                           	callstack 25
  3037   001E6C                     
  3038                           ;mcc_generated_files/uart1.c: 295:     UART1_OverrunErrorHandler = interruptHandler;
  3039   001E6C  C003  F0AD         	movff	UART1_SetOverrunErrorHandler@interruptHandler,_UART1_OverrunErrorHandler
  3040   001E70  C004  F0AE         	movff	UART1_SetOverrunErrorHandler@interruptHandler+1,_UART1_OverrunErrorHandler+1
  3041   001E74  0012               	return		;funcret
  3042   001E76                     __end_of_UART1_SetOverrunErrorHandler:
  3043                           	callstack 0
  3044                           
  3045 ;; *************** function _UART1_SetFramingErrorHandler *****************
  3046 ;; Defined at:
  3047 ;;		line 290 in file "mcc_generated_files/uart1.c"
  3048 ;; Parameters:    Size  Location     Type
  3049 ;;  interruptHan    2    2[COMRAM] PTR FTN()void 
  3050 ;;		 -> UART1_DefaultFramingErrorHandler(1), 
  3051 ;; Auto vars:     Size  Location     Type
  3052 ;;		None
  3053 ;; Return value:  Size  Location     Type
  3054 ;;                  1    wreg      void 
  3055 ;; Registers used:
  3056 ;;		wreg, status,2, status,0
  3057 ;; Tracked objects:
  3058 ;;		On entry : 0/0
  3059 ;;		On exit  : 0/0
  3060 ;;		Unchanged: 0/0
  3061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3062 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3065 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3066 ;;Total ram usage:        2 bytes
  3067 ;; Hardware stack levels used: 1
  3068 ;; Hardware stack levels required when called: 4
  3069 ;; This function calls:
  3070 ;;		Nothing
  3071 ;; This function is called by:
  3072 ;;		_UART1_Initialize
  3073 ;; This function uses a non-reentrant model
  3074 ;;
  3075                           
  3076                           	psect	text26
  3077   001E76                     __ptext26:
  3078                           	callstack 0
  3079   001E76                     _UART1_SetFramingErrorHandler:
  3080                           	callstack 25
  3081   001E76                     
  3082                           ;mcc_generated_files/uart1.c: 291:     UART1_FramingErrorHandler = interruptHandler;
  3083   001E76  C003  F0AF         	movff	UART1_SetFramingErrorHandler@interruptHandler,_UART1_FramingErrorHandler
  3084   001E7A  C004  F0B0         	movff	UART1_SetFramingErrorHandler@interruptHandler+1,_UART1_FramingErrorHandler+1
  3085   001E7E  0012               	return		;funcret
  3086   001E80                     __end_of_UART1_SetFramingErrorHandler:
  3087                           	callstack 0
  3088                           
  3089 ;; *************** function _UART1_SetErrorHandler *****************
  3090 ;; Defined at:
  3091 ;;		line 298 in file "mcc_generated_files/uart1.c"
  3092 ;; Parameters:    Size  Location     Type
  3093 ;;  interruptHan    2    2[COMRAM] PTR FTN()void 
  3094 ;;		 -> UART1_DefaultErrorHandler(1), 
  3095 ;; Auto vars:     Size  Location     Type
  3096 ;;		None
  3097 ;; Return value:  Size  Location     Type
  3098 ;;                  1    wreg      void 
  3099 ;; Registers used:
  3100 ;;		wreg, status,2, status,0
  3101 ;; Tracked objects:
  3102 ;;		On entry : 0/0
  3103 ;;		On exit  : 0/0
  3104 ;;		Unchanged: 0/0
  3105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3106 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3109 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3110 ;;Total ram usage:        2 bytes
  3111 ;; Hardware stack levels used: 1
  3112 ;; Hardware stack levels required when called: 4
  3113 ;; This function calls:
  3114 ;;		Nothing
  3115 ;; This function is called by:
  3116 ;;		_UART1_Initialize
  3117 ;; This function uses a non-reentrant model
  3118 ;;
  3119                           
  3120                           	psect	text27
  3121   001E80                     __ptext27:
  3122                           	callstack 0
  3123   001E80                     _UART1_SetErrorHandler:
  3124                           	callstack 25
  3125   001E80                     
  3126                           ;mcc_generated_files/uart1.c: 299:     UART1_ErrorHandler = interruptHandler;
  3127   001E80  C003  F0AB         	movff	UART1_SetErrorHandler@interruptHandler,_UART1_ErrorHandler
  3128   001E84  C004  F0AC         	movff	UART1_SetErrorHandler@interruptHandler+1,_UART1_ErrorHandler+1
  3129   001E88  0012               	return		;funcret
  3130   001E8A                     __end_of_UART1_SetErrorHandler:
  3131                           	callstack 0
  3132                           
  3133 ;; *************** function _TMR2_Initialize *****************
  3134 ;; Defined at:
  3135 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  3136 ;; Parameters:    Size  Location     Type
  3137 ;;		None
  3138 ;; Auto vars:     Size  Location     Type
  3139 ;;		None
  3140 ;; Return value:  Size  Location     Type
  3141 ;;                  1    wreg      void 
  3142 ;; Registers used:
  3143 ;;		wreg, status,2
  3144 ;; Tracked objects:
  3145 ;;		On entry : 0/0
  3146 ;;		On exit  : 0/0
  3147 ;;		Unchanged: 0/0
  3148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3152 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3153 ;;Total ram usage:        0 bytes
  3154 ;; Hardware stack levels used: 1
  3155 ;; Hardware stack levels required when called: 4
  3156 ;; This function calls:
  3157 ;;		Nothing
  3158 ;; This function is called by:
  3159 ;;		_SYSTEM_Initialize
  3160 ;;		_main
  3161 ;; This function uses a non-reentrant model
  3162 ;;
  3163                           
  3164                           	psect	text28
  3165   001D6A                     __ptext28:
  3166                           	callstack 0
  3167   001D6A                     _TMR2_Initialize:
  3168                           	callstack 26
  3169   001D6A                     
  3170                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x03;
  3171   001D6A  0E03               	movlw	3
  3172   001D6C  6EAE               	movwf	174,c	;volatile
  3173                           
  3174                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
  3175   001D6E  0E00               	movlw	0
  3176   001D70  6EAD               	movwf	173,c	;volatile
  3177                           
  3178                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
  3179   001D72  0E00               	movlw	0
  3180   001D74  6EAF               	movwf	175,c	;volatile
  3181                           
  3182                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0xC7;
  3183   001D76  0EC7               	movlw	199
  3184   001D78  6EAB               	movwf	171,c	;volatile
  3185                           
  3186                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
  3187   001D7A  0E00               	movlw	0
  3188   001D7C  6EAA               	movwf	170,c	;volatile
  3189   001D7E                     
  3190                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
  3191   001D7E  0139               	movlb	57	; () banked
  3192   001D80  95A4               	bcf	164,2,b	;volatile
  3193                           
  3194                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xD0;
  3195   001D82  0ED0               	movlw	208
  3196   001D84  6EAC               	movwf	172,c	;volatile
  3197   001D86                     
  3198                           ; BSR set to: 57
  3199   001D86  0012               	return		;funcret
  3200   001D88                     __end_of_TMR2_Initialize:
  3201                           	callstack 0
  3202                           
  3203 ;; *************** function _SPI1_Initialize *****************
  3204 ;; Defined at:
  3205 ;;		line 64 in file "mcc_generated_files/spi1.c"
  3206 ;; Parameters:    Size  Location     Type
  3207 ;;		None
  3208 ;; Auto vars:     Size  Location     Type
  3209 ;;		None
  3210 ;; Return value:  Size  Location     Type
  3211 ;;                  1    wreg      void 
  3212 ;; Registers used:
  3213 ;;		wreg, status,2
  3214 ;; Tracked objects:
  3215 ;;		On entry : 0/0
  3216 ;;		On exit  : 0/0
  3217 ;;		Unchanged: 0/0
  3218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3222 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3223 ;;Total ram usage:        0 bytes
  3224 ;; Hardware stack levels used: 1
  3225 ;; Hardware stack levels required when called: 4
  3226 ;; This function calls:
  3227 ;;		Nothing
  3228 ;; This function is called by:
  3229 ;;		_SYSTEM_Initialize
  3230 ;;		_main
  3231 ;; This function uses a non-reentrant model
  3232 ;;
  3233                           
  3234                           	psect	text29
  3235   001DA2                     __ptext29:
  3236                           	callstack 0
  3237   001DA2                     _SPI1_Initialize:
  3238                           	callstack 25
  3239   001DA2                     
  3240                           ;mcc_generated_files/spi1.c: 67:     SPI1CON0 = 0x02;
  3241   001DA2  0E02               	movlw	2
  3242   001DA4  013D               	movlb	61	; () banked
  3243   001DA6  6F14               	movwf	20,b	;volatile
  3244                           
  3245                           ;mcc_generated_files/spi1.c: 69:     SPI1CON1 = 0x40;
  3246   001DA8  0E40               	movlw	64
  3247   001DAA  6F15               	movwf	21,b	;volatile
  3248                           
  3249                           ;mcc_generated_files/spi1.c: 71:     SPI1CON2 = 0x00;
  3250   001DAC  0E00               	movlw	0
  3251   001DAE  6F16               	movwf	22,b	;volatile
  3252                           
  3253                           ;mcc_generated_files/spi1.c: 73:     SPI1CLK = 0x00;
  3254   001DB0  0E00               	movlw	0
  3255   001DB2  6F1C               	movwf	28,b	;volatile
  3256                           
  3257                           ;mcc_generated_files/spi1.c: 75:     SPI1BAUD = 0x00;
  3258   001DB4  0E00               	movlw	0
  3259   001DB6  6F19               	movwf	25,b	;volatile
  3260   001DB8                     
  3261                           ; BSR set to: 61
  3262                           ;mcc_generated_files/spi1.c: 76:     TRISCbits.TRISC3 = 0;
  3263   001DB8  96C4               	bcf	196,3,c	;volatile
  3264   001DBA                     
  3265                           ; BSR set to: 61
  3266   001DBA  0012               	return		;funcret
  3267   001DBC                     __end_of_SPI1_Initialize:
  3268                           	callstack 0
  3269                           
  3270 ;; *************** function _PMD_Initialize *****************
  3271 ;; Defined at:
  3272 ;;		line 81 in file "mcc_generated_files/mcc.c"
  3273 ;; Parameters:    Size  Location     Type
  3274 ;;		None
  3275 ;; Auto vars:     Size  Location     Type
  3276 ;;		None
  3277 ;; Return value:  Size  Location     Type
  3278 ;;                  1    wreg      void 
  3279 ;; Registers used:
  3280 ;;		wreg, status,2
  3281 ;; Tracked objects:
  3282 ;;		On entry : 0/0
  3283 ;;		On exit  : 0/0
  3284 ;;		Unchanged: 0/0
  3285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3289 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3290 ;;Total ram usage:        0 bytes
  3291 ;; Hardware stack levels used: 1
  3292 ;; Hardware stack levels required when called: 4
  3293 ;; This function calls:
  3294 ;;		Nothing
  3295 ;; This function is called by:
  3296 ;;		_SYSTEM_Initialize
  3297 ;; This function uses a non-reentrant model
  3298 ;;
  3299                           
  3300                           	psect	text30
  3301   001D46                     __ptext30:
  3302                           	callstack 0
  3303   001D46                     _PMD_Initialize:
  3304                           	callstack 25
  3305   001D46                     
  3306                           ;mcc_generated_files/mcc.c: 84:     PMD0 = 0x00;
  3307   001D46  0E00               	movlw	0
  3308   001D48  0139               	movlb	57	; () banked
  3309   001D4A  6FC0               	movwf	192,b	;volatile
  3310                           
  3311                           ;mcc_generated_files/mcc.c: 86:     PMD1 = 0x00;
  3312   001D4C  0E00               	movlw	0
  3313   001D4E  6FC1               	movwf	193,b	;volatile
  3314                           
  3315                           ;mcc_generated_files/mcc.c: 88:     PMD2 = 0x00;
  3316   001D50  0E00               	movlw	0
  3317   001D52  6FC2               	movwf	194,b	;volatile
  3318                           
  3319                           ;mcc_generated_files/mcc.c: 90:     PMD3 = 0x00;
  3320   001D54  0E00               	movlw	0
  3321   001D56  6FC3               	movwf	195,b	;volatile
  3322                           
  3323                           ;mcc_generated_files/mcc.c: 92:     PMD4 = 0x00;
  3324   001D58  0E00               	movlw	0
  3325   001D5A  6FC4               	movwf	196,b	;volatile
  3326                           
  3327                           ;mcc_generated_files/mcc.c: 94:     PMD5 = 0x00;
  3328   001D5C  0E00               	movlw	0
  3329   001D5E  6FC5               	movwf	197,b	;volatile
  3330                           
  3331                           ;mcc_generated_files/mcc.c: 96:     PMD6 = 0x00;
  3332   001D60  0E00               	movlw	0
  3333   001D62  6FC6               	movwf	198,b	;volatile
  3334                           
  3335                           ;mcc_generated_files/mcc.c: 98:     PMD7 = 0x00;
  3336   001D64  0E00               	movlw	0
  3337   001D66  6FC7               	movwf	199,b	;volatile
  3338   001D68                     
  3339                           ; BSR set to: 57
  3340   001D68  0012               	return		;funcret
  3341   001D6A                     __end_of_PMD_Initialize:
  3342                           	callstack 0
  3343                           
  3344 ;; *************** function _PIN_MANAGER_Initialize *****************
  3345 ;; Defined at:
  3346 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  3347 ;; Parameters:    Size  Location     Type
  3348 ;;		None
  3349 ;; Auto vars:     Size  Location     Type
  3350 ;;		None
  3351 ;; Return value:  Size  Location     Type
  3352 ;;                  1    wreg      void 
  3353 ;; Registers used:
  3354 ;;		wreg, status,2
  3355 ;; Tracked objects:
  3356 ;;		On entry : 0/0
  3357 ;;		On exit  : 0/0
  3358 ;;		Unchanged: 0/0
  3359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3363 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3364 ;;Total ram usage:        0 bytes
  3365 ;; Hardware stack levels used: 1
  3366 ;; Hardware stack levels required when called: 4
  3367 ;; This function calls:
  3368 ;;		Nothing
  3369 ;; This function is called by:
  3370 ;;		_SYSTEM_Initialize
  3371 ;; This function uses a non-reentrant model
  3372 ;;
  3373                           
  3374                           	psect	text31
  3375   001718                     __ptext31:
  3376                           	callstack 0
  3377   001718                     _PIN_MANAGER_Initialize:
  3378                           	callstack 25
  3379   001718                     
  3380                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  3381   001718  0E00               	movlw	0
  3382   00171A  6EBE               	movwf	190,c	;volatile
  3383                           
  3384                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  3385   00171C  0E00               	movlw	0
  3386   00171E  6EBD               	movwf	189,c	;volatile
  3387                           
  3388                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  3389   001720  0E00               	movlw	0
  3390   001722  6EBA               	movwf	186,c	;volatile
  3391                           
  3392                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  3393   001724  0E00               	movlw	0
  3394   001726  6EBB               	movwf	187,c	;volatile
  3395                           
  3396                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  3397   001728  0E00               	movlw	0
  3398   00172A  6EBC               	movwf	188,c	;volatile
  3399                           
  3400                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  3401   00172C  0E07               	movlw	7
  3402   00172E  6EC6               	movwf	198,c	;volatile
  3403   001730                     
  3404                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xFF;
  3405   001730  68C2               	setf	194,c	;volatile
  3406   001732                     
  3407                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
  3408   001732  68C3               	setf	195,c	;volatile
  3409                           
  3410                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0x97;
  3411   001734  0E97               	movlw	151
  3412   001736  6EC4               	movwf	196,c	;volatile
  3413                           
  3414                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xEF;
  3415   001738  0EEF               	movlw	239
  3416   00173A  6EC5               	movwf	197,c	;volatile
  3417   00173C                     
  3418                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
  3419   00173C  013A               	movlb	58	; () banked
  3420   00173E  6970               	setf	112,b	;volatile
  3421                           
  3422                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0x67;
  3423   001740  0E67               	movlw	103
  3424   001742  6F60               	movwf	96,b	;volatile
  3425   001744                     
  3426                           ; BSR set to: 58
  3427                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0xFF;
  3428   001744  6950               	setf	80,b	;volatile
  3429                           
  3430                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
  3431   001746  0E07               	movlw	7
  3432   001748  6F80               	movwf	128,b	;volatile
  3433   00174A                     
  3434                           ; BSR set to: 58
  3435                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0xFF;
  3436   00174A  6940               	setf	64,b	;volatile
  3437                           
  3438                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
  3439   00174C  0E00               	movlw	0
  3440   00174E  6F71               	movwf	113,b	;volatile
  3441                           
  3442                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
  3443   001750  0E00               	movlw	0
  3444   001752  6F81               	movwf	129,b	;volatile
  3445                           
  3446                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
  3447   001754  0E00               	movlw	0
  3448   001756  6F51               	movwf	81,b	;volatile
  3449                           
  3450                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
  3451   001758  0E00               	movlw	0
  3452   00175A  6F41               	movwf	65,b	;volatile
  3453                           
  3454                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
  3455   00175C  0E00               	movlw	0
  3456   00175E  6F61               	movwf	97,b	;volatile
  3457                           
  3458                           ;mcc_generated_files/pin_manager.c: 96:     RB1I2C = 0x00;
  3459   001760  0E00               	movlw	0
  3460   001762  6F5A               	movwf	90,b	;volatile
  3461                           
  3462                           ;mcc_generated_files/pin_manager.c: 97:     RB2I2C = 0x00;
  3463   001764  0E00               	movlw	0
  3464   001766  6F5B               	movwf	91,b	;volatile
  3465                           
  3466                           ;mcc_generated_files/pin_manager.c: 98:     RC3I2C = 0x00;
  3467   001768  0E00               	movlw	0
  3468   00176A  6F6A               	movwf	106,b	;volatile
  3469                           
  3470                           ;mcc_generated_files/pin_manager.c: 99:     RC4I2C = 0x00;
  3471   00176C  0E00               	movlw	0
  3472   00176E  6F6B               	movwf	107,b	;volatile
  3473                           
  3474                           ;mcc_generated_files/pin_manager.c: 100:     RD0I2C = 0x00;
  3475   001770  0E00               	movlw	0
  3476   001772  6F7A               	movwf	122,b	;volatile
  3477                           
  3478                           ;mcc_generated_files/pin_manager.c: 101:     RD1I2C = 0x00;
  3479   001774  0E00               	movlw	0
  3480   001776  6F7B               	movwf	123,b	;volatile
  3481                           
  3482                           ;mcc_generated_files/pin_manager.c: 106:     ODCONE = 0x00;
  3483   001778  0E00               	movlw	0
  3484   00177A  6F82               	movwf	130,b	;volatile
  3485                           
  3486                           ;mcc_generated_files/pin_manager.c: 107:     ODCONA = 0x00;
  3487   00177C  0E00               	movlw	0
  3488   00177E  6F42               	movwf	66,b	;volatile
  3489                           
  3490                           ;mcc_generated_files/pin_manager.c: 108:     ODCONB = 0x00;
  3491   001780  0E00               	movlw	0
  3492   001782  6F52               	movwf	82,b	;volatile
  3493                           
  3494                           ;mcc_generated_files/pin_manager.c: 109:     ODCONC = 0x00;
  3495   001784  0E00               	movlw	0
  3496   001786  6F62               	movwf	98,b	;volatile
  3497                           
  3498                           ;mcc_generated_files/pin_manager.c: 110:     ODCOND = 0x00;
  3499   001788  0E00               	movlw	0
  3500   00178A  6F72               	movwf	114,b	;volatile
  3501   00178C                     
  3502                           ; BSR set to: 58
  3503                           ;mcc_generated_files/pin_manager.c: 115:     SLRCONA = 0xFF;
  3504   00178C  6943               	setf	67,b	;volatile
  3505   00178E                     
  3506                           ; BSR set to: 58
  3507                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONB = 0xFF;
  3508   00178E  6953               	setf	83,b	;volatile
  3509   001790                     
  3510                           ; BSR set to: 58
  3511                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONC = 0xFF;
  3512   001790  6963               	setf	99,b	;volatile
  3513   001792                     
  3514                           ; BSR set to: 58
  3515                           ;mcc_generated_files/pin_manager.c: 118:     SLRCOND = 0xFF;
  3516   001792  6973               	setf	115,b	;volatile
  3517                           
  3518                           ;mcc_generated_files/pin_manager.c: 119:     SLRCONE = 0x07;
  3519   001794  0E07               	movlw	7
  3520   001796  6F83               	movwf	131,b	;volatile
  3521   001798                     
  3522                           ; BSR set to: 58
  3523                           ;mcc_generated_files/pin_manager.c: 124:     INLVLA = 0xFF;
  3524   001798  6944               	setf	68,b	;volatile
  3525   00179A                     
  3526                           ; BSR set to: 58
  3527                           ;mcc_generated_files/pin_manager.c: 125:     INLVLB = 0xFF;
  3528   00179A  6954               	setf	84,b	;volatile
  3529   00179C                     
  3530                           ; BSR set to: 58
  3531                           ;mcc_generated_files/pin_manager.c: 126:     INLVLC = 0xFF;
  3532   00179C  6964               	setf	100,b	;volatile
  3533   00179E                     
  3534                           ; BSR set to: 58
  3535                           ;mcc_generated_files/pin_manager.c: 127:     INLVLD = 0xFF;
  3536   00179E  6974               	setf	116,b	;volatile
  3537                           
  3538                           ;mcc_generated_files/pin_manager.c: 128:     INLVLE = 0x0F;
  3539   0017A0  0E0F               	movlw	15
  3540   0017A2  6F84               	movwf	132,b	;volatile
  3541                           
  3542                           ;mcc_generated_files/pin_manager.c: 137:     SPI1SCKPPS = 0x13;
  3543   0017A4  0E13               	movlw	19
  3544   0017A6  6FDE               	movwf	222,b	;volatile
  3545                           
  3546                           ;mcc_generated_files/pin_manager.c: 138:     RC3PPS = 0x1E;
  3547   0017A8  0E1E               	movlw	30
  3548   0017AA  6F13               	movwf	19,b	;volatile
  3549                           
  3550                           ;mcc_generated_files/pin_manager.c: 139:     RC5PPS = 0x1F;
  3551   0017AC  0E1F               	movlw	31
  3552   0017AE  6F15               	movwf	21,b	;volatile
  3553                           
  3554                           ;mcc_generated_files/pin_manager.c: 140:     RC6PPS = 0x13;
  3555   0017B0  0E13               	movlw	19
  3556   0017B2  6F16               	movwf	22,b	;volatile
  3557                           
  3558                           ;mcc_generated_files/pin_manager.c: 141:     U1RXPPS = 0x17;
  3559   0017B4  0E17               	movlw	23
  3560   0017B6  6FE5               	movwf	229,b	;volatile
  3561                           
  3562                           ;mcc_generated_files/pin_manager.c: 142:     SPI1SDIPPS = 0x14;
  3563   0017B8  0E14               	movlw	20
  3564   0017BA  6FDF               	movwf	223,b	;volatile
  3565   0017BC                     
  3566                           ; BSR set to: 58
  3567   0017BC  0012               	return		;funcret
  3568   0017BE                     __end_of_PIN_MANAGER_Initialize:
  3569                           	callstack 0
  3570                           
  3571 ;; *************** function _OSCILLATOR_Initialize *****************
  3572 ;; Defined at:
  3573 ;;		line 63 in file "mcc_generated_files/mcc.c"
  3574 ;; Parameters:    Size  Location     Type
  3575 ;;		None
  3576 ;; Auto vars:     Size  Location     Type
  3577 ;;		None
  3578 ;; Return value:  Size  Location     Type
  3579 ;;                  1    wreg      void 
  3580 ;; Registers used:
  3581 ;;		wreg, status,2
  3582 ;; Tracked objects:
  3583 ;;		On entry : 0/0
  3584 ;;		On exit  : 0/0
  3585 ;;		Unchanged: 0/0
  3586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3590 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3591 ;;Total ram usage:        0 bytes
  3592 ;; Hardware stack levels used: 1
  3593 ;; Hardware stack levels required when called: 4
  3594 ;; This function calls:
  3595 ;;		Nothing
  3596 ;; This function is called by:
  3597 ;;		_SYSTEM_Initialize
  3598 ;; This function uses a non-reentrant model
  3599 ;;
  3600                           
  3601                           	psect	text32
  3602   001D20                     __ptext32:
  3603                           	callstack 0
  3604   001D20                     _OSCILLATOR_Initialize:
  3605                           	callstack 25
  3606   001D20                     
  3607                           ;mcc_generated_files/mcc.c: 66:     OSCCON1 = 0x20;
  3608   001D20  0E20               	movlw	32
  3609   001D22  0139               	movlb	57	; () banked
  3610   001D24  6FD9               	movwf	217,b	;volatile
  3611                           
  3612                           ;mcc_generated_files/mcc.c: 68:     OSCCON3 = 0x00;
  3613   001D26  0E00               	movlw	0
  3614   001D28  6FDB               	movwf	219,b	;volatile
  3615                           
  3616                           ;mcc_generated_files/mcc.c: 70:     OSCEN = 0x00;
  3617   001D2A  0E00               	movlw	0
  3618   001D2C  6FDD               	movwf	221,b	;volatile
  3619                           
  3620                           ;mcc_generated_files/mcc.c: 72:     OSCFRQ = 0x08;
  3621   001D2E  0E08               	movlw	8
  3622   001D30  6FDF               	movwf	223,b	;volatile
  3623                           
  3624                           ;mcc_generated_files/mcc.c: 74:     OSCTUNE = 0x00;
  3625   001D32  0E00               	movlw	0
  3626   001D34  6FDE               	movwf	222,b	;volatile
  3627   001D36                     l56:
  3628                           
  3629                           ; BSR set to: 57
  3630                           ;mcc_generated_files/mcc.c: 76:     while(PLLR == 0)
  3631   001D36  A1DC               	btfss	220,0,b	;volatile
  3632   001D38  EFA0  F00E         	goto	u1031
  3633   001D3C  EFA2  F00E         	goto	u1030
  3634   001D40                     u1031:
  3635   001D40  EF9B  F00E         	goto	l56
  3636   001D44                     u1030:
  3637   001D44                     
  3638                           ; BSR set to: 57
  3639   001D44  0012               	return		;funcret
  3640   001D46                     __end_of_OSCILLATOR_Initialize:
  3641                           	callstack 0
  3642                           
  3643 ;; *************** function _INTERRUPT_Initialize *****************
  3644 ;; Defined at:
  3645 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  3646 ;; Parameters:    Size  Location     Type
  3647 ;;		None
  3648 ;; Auto vars:     Size  Location     Type
  3649 ;;		None
  3650 ;; Return value:  Size  Location     Type
  3651 ;;                  1    wreg      void 
  3652 ;; Registers used:
  3653 ;;		None
  3654 ;; Tracked objects:
  3655 ;;		On entry : 0/0
  3656 ;;		On exit  : 0/0
  3657 ;;		Unchanged: 0/0
  3658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3662 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3663 ;;Total ram usage:        0 bytes
  3664 ;; Hardware stack levels used: 1
  3665 ;; Hardware stack levels required when called: 4
  3666 ;; This function calls:
  3667 ;;		Nothing
  3668 ;; This function is called by:
  3669 ;;		_SYSTEM_Initialize
  3670 ;; This function uses a non-reentrant model
  3671 ;;
  3672                           
  3673                           	psect	text33
  3674   001EA8                     __ptext33:
  3675                           	callstack 0
  3676   001EA8                     _INTERRUPT_Initialize:
  3677                           	callstack 25
  3678   001EA8                     
  3679                           ;mcc_generated_files/interrupt_manager.c: 55:     INTCON0bits.IPEN = 0;
  3680   001EA8  9AD2               	bcf	210,5,c	;volatile
  3681   001EAA  0012               	return		;funcret
  3682   001EAC                     __end_of_INTERRUPT_Initialize:
  3683                           	callstack 0
  3684                           
  3685 ;; *************** function _FVR_Initialize *****************
  3686 ;; Defined at:
  3687 ;;		line 58 in file "mcc_generated_files/fvr.c"
  3688 ;; Parameters:    Size  Location     Type
  3689 ;;		None
  3690 ;; Auto vars:     Size  Location     Type
  3691 ;;		None
  3692 ;; Return value:  Size  Location     Type
  3693 ;;                  1    wreg      void 
  3694 ;; Registers used:
  3695 ;;		wreg, status,2
  3696 ;; Tracked objects:
  3697 ;;		On entry : 0/0
  3698 ;;		On exit  : 0/0
  3699 ;;		Unchanged: 0/0
  3700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3704 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3705 ;;Total ram usage:        0 bytes
  3706 ;; Hardware stack levels used: 1
  3707 ;; Hardware stack levels required when called: 4
  3708 ;; This function calls:
  3709 ;;		Nothing
  3710 ;; This function is called by:
  3711 ;;		_SYSTEM_Initialize
  3712 ;; This function uses a non-reentrant model
  3713 ;;
  3714                           
  3715                           	psect	text34
  3716   001E92                     __ptext34:
  3717                           	callstack 0
  3718   001E92                     _FVR_Initialize:
  3719                           	callstack 25
  3720   001E92                     
  3721                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0x82;
  3722   001E92  0E82               	movlw	130
  3723   001E94  013E               	movlb	62	; () banked
  3724   001E96  6FC1               	movwf	193,b	;volatile
  3725   001E98                     
  3726                           ; BSR set to: 62
  3727   001E98  0012               	return		;funcret
  3728   001E9A                     __end_of_FVR_Initialize:
  3729                           	callstack 0
  3730                           
  3731 ;; *************** function _ADCC_Initialize *****************
  3732 ;; Defined at:
  3733 ;;		line 62 in file "mcc_generated_files/adcc.c"
  3734 ;; Parameters:    Size  Location     Type
  3735 ;;		None
  3736 ;; Auto vars:     Size  Location     Type
  3737 ;;		None
  3738 ;; Return value:  Size  Location     Type
  3739 ;;                  1    wreg      void 
  3740 ;; Registers used:
  3741 ;;		wreg, status,2
  3742 ;; Tracked objects:
  3743 ;;		On entry : 0/0
  3744 ;;		On exit  : 0/0
  3745 ;;		Unchanged: 0/0
  3746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3750 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3751 ;;Total ram usage:        0 bytes
  3752 ;; Hardware stack levels used: 1
  3753 ;; Hardware stack levels required when called: 4
  3754 ;; This function calls:
  3755 ;;		Nothing
  3756 ;; This function is called by:
  3757 ;;		_SYSTEM_Initialize
  3758 ;;		_main
  3759 ;; This function uses a non-reentrant model
  3760 ;;
  3761                           
  3762                           	psect	text35
  3763   001A9C                     __ptext35:
  3764                           	callstack 0
  3765   001A9C                     _ADCC_Initialize:
  3766                           	callstack 25
  3767   001A9C                     
  3768                           ;mcc_generated_files/adcc.c: 66:     ADLTHL = 0x00;
  3769   001A9C  0E00               	movlw	0
  3770   001A9E  013E               	movlb	62	; () banked
  3771   001AA0  6FDE               	movwf	222,b	;volatile
  3772                           
  3773                           ;mcc_generated_files/adcc.c: 68:     ADLTHH = 0x00;
  3774   001AA2  0E00               	movlw	0
  3775   001AA4  6FDF               	movwf	223,b	;volatile
  3776                           
  3777                           ;mcc_generated_files/adcc.c: 70:     ADUTHL = 0x00;
  3778   001AA6  0E00               	movlw	0
  3779   001AA8  6FE0               	movwf	224,b	;volatile
  3780                           
  3781                           ;mcc_generated_files/adcc.c: 72:     ADUTHH = 0x00;
  3782   001AAA  0E00               	movlw	0
  3783   001AAC  6FE1               	movwf	225,b	;volatile
  3784                           
  3785                           ;mcc_generated_files/adcc.c: 74:     ADSTPTL = 0x00;
  3786   001AAE  0E00               	movlw	0
  3787   001AB0  6FE4               	movwf	228,b	;volatile
  3788                           
  3789                           ;mcc_generated_files/adcc.c: 76:     ADSTPTH = 0x00;
  3790   001AB2  0E00               	movlw	0
  3791   001AB4  6FE5               	movwf	229,b	;volatile
  3792                           
  3793                           ;mcc_generated_files/adcc.c: 78:     ADACCU = 0x00;
  3794   001AB6  0E00               	movlw	0
  3795   001AB8  6FEA               	movwf	234,b	;volatile
  3796                           
  3797                           ;mcc_generated_files/adcc.c: 80:     ADRPT = 0x00;
  3798   001ABA  0E00               	movlw	0
  3799   001ABC  6FEC               	movwf	236,b	;volatile
  3800                           
  3801                           ;mcc_generated_files/adcc.c: 82:     ADPCH = 0x00;
  3802   001ABE  0E00               	movlw	0
  3803   001AC0  6FF1               	movwf	241,b	;volatile
  3804                           
  3805                           ;mcc_generated_files/adcc.c: 84:     ADACQL = 0x00;
  3806   001AC2  0E00               	movlw	0
  3807   001AC4  6FF3               	movwf	243,b	;volatile
  3808                           
  3809                           ;mcc_generated_files/adcc.c: 86:     ADACQH = 0x00;
  3810   001AC6  0E00               	movlw	0
  3811   001AC8  6FF4               	movwf	244,b	;volatile
  3812                           
  3813                           ;mcc_generated_files/adcc.c: 88:     ADCAP = 0x00;
  3814   001ACA  0E00               	movlw	0
  3815   001ACC  6FF5               	movwf	245,b	;volatile
  3816                           
  3817                           ;mcc_generated_files/adcc.c: 90:     ADPREL = 0x00;
  3818   001ACE  0E00               	movlw	0
  3819   001AD0  6FF6               	movwf	246,b	;volatile
  3820                           
  3821                           ;mcc_generated_files/adcc.c: 92:     ADPREH = 0x00;
  3822   001AD2  0E00               	movlw	0
  3823   001AD4  6FF7               	movwf	247,b	;volatile
  3824                           
  3825                           ;mcc_generated_files/adcc.c: 94:     ADCON1 = 0x00;
  3826   001AD6  0E00               	movlw	0
  3827   001AD8  6FF9               	movwf	249,b	;volatile
  3828                           
  3829                           ;mcc_generated_files/adcc.c: 96:     ADCON2 = 0x00;
  3830   001ADA  0E00               	movlw	0
  3831   001ADC  6FFA               	movwf	250,b	;volatile
  3832                           
  3833                           ;mcc_generated_files/adcc.c: 98:     ADCON3 = 0x00;
  3834   001ADE  0E00               	movlw	0
  3835   001AE0  6FFB               	movwf	251,b	;volatile
  3836                           
  3837                           ;mcc_generated_files/adcc.c: 100:     ADSTAT = 0x00;
  3838   001AE2  0E00               	movlw	0
  3839   001AE4  6FFC               	movwf	252,b	;volatile
  3840                           
  3841                           ;mcc_generated_files/adcc.c: 102:     ADREF = 0x00;
  3842   001AE6  0E00               	movlw	0
  3843   001AE8  6FFD               	movwf	253,b	;volatile
  3844                           
  3845                           ;mcc_generated_files/adcc.c: 104:     ADACT = 0x00;
  3846   001AEA  0E00               	movlw	0
  3847   001AEC  6FFE               	movwf	254,b	;volatile
  3848                           
  3849                           ;mcc_generated_files/adcc.c: 106:     ADCLK = 0x1F;
  3850   001AEE  0E1F               	movlw	31
  3851   001AF0  6FFF               	movwf	255,b	;volatile
  3852                           
  3853                           ;mcc_generated_files/adcc.c: 108:     ADCON0 = 0x84;
  3854   001AF2  0E84               	movlw	132
  3855   001AF4  6FF8               	movwf	248,b	;volatile
  3856   001AF6                     
  3857                           ; BSR set to: 62
  3858   001AF6  0012               	return		;funcret
  3859   001AF8                     __end_of_ADCC_Initialize:
  3860                           	callstack 0
  3861                           
  3862 ;; *************** function _ADCC_StartConversion *****************
  3863 ;; Defined at:
  3864 ;;		line 113 in file "mcc_generated_files/adcc.c"
  3865 ;; Parameters:    Size  Location     Type
  3866 ;;  channel         1    wreg     enum E15846
  3867 ;; Auto vars:     Size  Location     Type
  3868 ;;  channel         1    2[COMRAM] enum E15846
  3869 ;; Return value:  Size  Location     Type
  3870 ;;                  1    wreg      void 
  3871 ;; Registers used:
  3872 ;;		wreg
  3873 ;; Tracked objects:
  3874 ;;		On entry : 0/0
  3875 ;;		On exit  : 0/0
  3876 ;;		Unchanged: 0/0
  3877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3879 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3881 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3882 ;;Total ram usage:        1 bytes
  3883 ;; Hardware stack levels used: 1
  3884 ;; Hardware stack levels required when called: 4
  3885 ;; This function calls:
  3886 ;;		Nothing
  3887 ;; This function is called by:
  3888 ;;		_main
  3889 ;; This function uses a non-reentrant model
  3890 ;;
  3891                           
  3892                           	psect	text36
  3893   001E48                     __ptext36:
  3894                           	callstack 0
  3895   001E48                     _ADCC_StartConversion:
  3896                           	callstack 26
  3897                           
  3898                           ; BSR set to: 62
  3899                           ;incstack = 0
  3900                           ;ADCC_StartConversion@channel stored from wreg
  3901   001E48  6E03               	movwf	ADCC_StartConversion@channel^0,c
  3902   001E4A                     
  3903                           ;mcc_generated_files/adcc.c: 113: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 114: {;mcc_generated_files/adcc.c: 116:     ADPCH = channel;
  3904   001E4A  0060  F00F  FEF1   	movff	ADCC_StartConversion@channel,16113	;volatile
  3905   001E50                     
  3906                           ;mcc_generated_files/adcc.c: 119:     ADCON0bits.ADON = 1;
  3907   001E50  013E               	movlb	62	; () banked
  3908   001E52  8FF8               	bsf	248,7,b	;volatile
  3909   001E54                     
  3910                           ; BSR set to: 62
  3911                           ;mcc_generated_files/adcc.c: 122:     ADCON0bits.ADGO = 1;
  3912   001E54  81F8               	bsf	248,0,b	;volatile
  3913   001E56                     
  3914                           ; BSR set to: 62
  3915   001E56  0012               	return		;funcret
  3916   001E58                     __end_of_ADCC_StartConversion:
  3917                           	callstack 0
  3918                           
  3919 ;; *************** function _ADCC_IsConversionDone *****************
  3920 ;; Defined at:
  3921 ;;		line 125 in file "mcc_generated_files/adcc.c"
  3922 ;; Parameters:    Size  Location     Type
  3923 ;;		None
  3924 ;; Auto vars:     Size  Location     Type
  3925 ;;		None
  3926 ;; Return value:  Size  Location     Type
  3927 ;;                  1    wreg      _Bool 
  3928 ;; Registers used:
  3929 ;;		wreg
  3930 ;; Tracked objects:
  3931 ;;		On entry : 0/0
  3932 ;;		On exit  : 0/0
  3933 ;;		Unchanged: 0/0
  3934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3938 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3939 ;;Total ram usage:        0 bytes
  3940 ;; Hardware stack levels used: 1
  3941 ;; Hardware stack levels required when called: 4
  3942 ;; This function calls:
  3943 ;;		Nothing
  3944 ;; This function is called by:
  3945 ;;		_main
  3946 ;; This function uses a non-reentrant model
  3947 ;;
  3948                           
  3949                           	psect	text37
  3950   001DE8                     __ptext37:
  3951                           	callstack 0
  3952   001DE8                     _ADCC_IsConversionDone:
  3953                           	callstack 26
  3954   001DE8                     
  3955                           ;mcc_generated_files/adcc.c: 128:     return ((unsigned char)(!ADCON0bits.ADGO));
  3956   001DE8  013E               	movlb	62	; () banked
  3957   001DEA  A1F8               	btfss	248,0,b	;volatile
  3958   001DEC  EFFA  F00E         	goto	u1081
  3959   001DF0  EFFD  F00E         	goto	u1080
  3960   001DF4                     u1081:
  3961   001DF4  0E01               	movlw	1
  3962   001DF6  EFFE  F00E         	goto	u1090
  3963   001DFA                     u1080:
  3964   001DFA  0E00               	movlw	0
  3965   001DFC                     u1090:
  3966   001DFC                     
  3967                           ; BSR set to: 62
  3968   001DFC  0012               	return		;funcret
  3969   001DFE                     __end_of_ADCC_IsConversionDone:
  3970                           	callstack 0
  3971                           
  3972 ;; *************** function _ADCC_GetConversionResult *****************
  3973 ;; Defined at:
  3974 ;;		line 131 in file "mcc_generated_files/adcc.c"
  3975 ;; Parameters:    Size  Location     Type
  3976 ;;		None
  3977 ;; Auto vars:     Size  Location     Type
  3978 ;;		None
  3979 ;; Return value:  Size  Location     Type
  3980 ;;                  2    2[COMRAM] unsigned short 
  3981 ;; Registers used:
  3982 ;;		wreg, status,2, status,0
  3983 ;; Tracked objects:
  3984 ;;		On entry : 0/0
  3985 ;;		On exit  : 0/0
  3986 ;;		Unchanged: 0/0
  3987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3988 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3990 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3991 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3992 ;;Total ram usage:        4 bytes
  3993 ;; Hardware stack levels used: 1
  3994 ;; Hardware stack levels required when called: 4
  3995 ;; This function calls:
  3996 ;;		Nothing
  3997 ;; This function is called by:
  3998 ;;		_main
  3999 ;; This function uses a non-reentrant model
  4000 ;;
  4001                           
  4002                           	psect	text38
  4003   001DFE                     __ptext38:
  4004                           	callstack 0
  4005   001DFE                     _ADCC_GetConversionResult:
  4006                           	callstack 26
  4007   001DFE                     
  4008                           ;mcc_generated_files/adcc.c: 134:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  4009   001DFE  013E               	movlb	62	; () banked
  4010   001E00  51F0               	movf	240,w,b	;volatile
  4011   001E02  6E06               	movwf	(??_ADCC_GetConversionResult+1)^0,c
  4012   001E04  6A05               	clrf	??_ADCC_GetConversionResult^0,c
  4013   001E06  51EF               	movf	239,w,b	;volatile
  4014   001E08  2405               	addwf	??_ADCC_GetConversionResult^0,w,c
  4015   001E0A  6E03               	movwf	?_ADCC_GetConversionResult^0,c
  4016   001E0C  0E00               	movlw	0
  4017   001E0E  2006               	addwfc	(??_ADCC_GetConversionResult+1)^0,w,c
  4018   001E10  6E04               	movwf	(?_ADCC_GetConversionResult+1)^0,c
  4019   001E12                     
  4020                           ; BSR set to: 62
  4021   001E12  0012               	return		;funcret
  4022   001E14                     __end_of_ADCC_GetConversionResult:
  4023                           	callstack 0
  4024                           
  4025 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
  4026 ;; Defined at:
  4027 ;;		line 174 in file "mcc_generated_files/adcc.c"
  4028 ;; Parameters:    Size  Location     Type
  4029 ;;		None
  4030 ;; Auto vars:     Size  Location     Type
  4031 ;;		None
  4032 ;; Return value:  Size  Location     Type
  4033 ;;                  1    wreg      void 
  4034 ;; Registers used:
  4035 ;;		wreg, status,2
  4036 ;; Tracked objects:
  4037 ;;		On entry : 0/0
  4038 ;;		On exit  : 0/0
  4039 ;;		Unchanged: 0/0
  4040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4044 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4045 ;;Total ram usage:        0 bytes
  4046 ;; Hardware stack levels used: 1
  4047 ;; Hardware stack levels required when called: 4
  4048 ;; This function calls:
  4049 ;;		Nothing
  4050 ;; This function is called by:
  4051 ;;		_main
  4052 ;; This function uses a non-reentrant model
  4053 ;;
  4054                           
  4055                           	psect	text39
  4056   001E9A                     __ptext39:
  4057                           	callstack 0
  4058   001E9A                     _ADCC_DischargeSampleCapacitor:
  4059                           	callstack 26
  4060   001E9A                     
  4061                           ;mcc_generated_files/adcc.c: 177:     ADPCH = 0x3b;
  4062   001E9A  0E3B               	movlw	59
  4063   001E9C  013E               	movlb	62	; () banked
  4064   001E9E  6FF1               	movwf	241,b	;volatile
  4065   001EA0                     
  4066                           ; BSR set to: 62
  4067   001EA0  0012               	return		;funcret
  4068   001EA2                     __end_of_ADCC_DischargeSampleCapacitor:
  4069                           	callstack 0
  4070                           
  4071 ;; *************** function _INTERRUPT_InterruptManager *****************
  4072 ;; Defined at:
  4073 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  4074 ;; Parameters:    Size  Location     Type
  4075 ;;		None
  4076 ;; Auto vars:     Size  Location     Type
  4077 ;;		None
  4078 ;; Return value:  Size  Location     Type
  4079 ;;                  1    wreg      void 
  4080 ;; Registers used:
  4081 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  4082 ;; Tracked objects:
  4083 ;;		On entry : 0/0
  4084 ;;		On exit  : 0/0
  4085 ;;		Unchanged: 0/0
  4086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4089 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4090 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4091 ;;Total ram usage:        2 bytes
  4092 ;; Hardware stack levels used: 1
  4093 ;; Hardware stack levels required when called: 3
  4094 ;; This function calls:
  4095 ;;		Absolute function
  4096 ;;		_UART1_Receive_ISR
  4097 ;;		_UART1_Transmit_ISR
  4098 ;; This function is called by:
  4099 ;;		Interrupt level 2
  4100 ;; This function uses a non-reentrant model
  4101 ;;
  4102                           
  4103                           	psect	text40
  4104   001992                     __ptext40:
  4105                           	callstack 0
  4106   001992                     _INTERRUPT_InterruptManager:
  4107                           	callstack 24
  4108                           
  4109                           ; BSR set to: 62
  4110                           ;incstack = 0
  4111   001992  006F FFE8  F001    	movff	pclath,??_INTERRUPT_InterruptManager
  4112   001998  006F FFEC  F002    	movff	pclatu,??_INTERRUPT_InterruptManager+1
  4113   00199E                     
  4114                           ;mcc_generated_files/interrupt_manager.c: 61:     if(PIE3bits.U1TXIE == 1 && PIR3bits.U1
      +                          TXIF == 1)
  4115   00199E  0139               	movlb	57	; () banked
  4116   0019A0  A993               	btfss	147,4,b	;volatile
  4117   0019A2  EFD5  F00C         	goto	i2u86_41
  4118   0019A6  EFD7  F00C         	goto	i2u86_40
  4119   0019AA                     i2u86_41:
  4120   0019AA  EFEC  F00C         	goto	i2l646
  4121   0019AE                     i2u86_40:
  4122   0019AE                     
  4123                           ; BSR set to: 57
  4124   0019AE  A9A3               	btfss	163,4,b	;volatile
  4125   0019B0  EFDC  F00C         	goto	i2u87_41
  4126   0019B4  EFDE  F00C         	goto	i2u87_40
  4127   0019B8                     i2u87_41:
  4128   0019B8  EFEC  F00C         	goto	i2l646
  4129   0019BC                     i2u87_40:
  4130   0019BC                     
  4131                           ; BSR set to: 57
  4132                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         UART1_TxInterruptHandler();
  4133   0019BC  D802               	call	i2u88_48
  4134   0019BE  EFEA  F00C         	goto	i2u88_49
  4135   0019C2                     i2u88_48:
  4136   0019C2  0005               	push	
  4137   0019C4  6EFA               	movwf	pclath,c
  4138   0019C6  501E               	movf	_UART1_TxInterruptHandler^0,w,c
  4139   0019C8  6EFD               	movwf	tosl,c
  4140   0019CA  501F               	movf	(_UART1_TxInterruptHandler+1)^0,w,c
  4141   0019CC  6EFE               	movwf	tosh,c
  4142   0019CE  6AFF               	clrf	tosu,c
  4143   0019D0  50FA               	movf	pclath,w,c
  4144   0019D2  0012               	return		;indir
  4145   0019D4                     i2u88_49:
  4146                           
  4147                           ;mcc_generated_files/interrupt_manager.c: 64:     }
  4148   0019D4  EF06  F00D         	goto	i2l650
  4149   0019D8                     i2l646:
  4150                           
  4151                           ; BSR set to: 57
  4152   0019D8  A793               	btfss	147,3,b	;volatile
  4153   0019DA  EFF1  F00C         	goto	i2u89_41
  4154   0019DE  EFF3  F00C         	goto	i2u89_40
  4155   0019E2                     i2u89_41:
  4156   0019E2  EF06  F00D         	goto	i2l650
  4157   0019E6                     i2u89_40:
  4158   0019E6                     
  4159                           ; BSR set to: 57
  4160   0019E6  A7A3               	btfss	163,3,b	;volatile
  4161   0019E8  EFF8  F00C         	goto	i2u90_41
  4162   0019EC  EFFA  F00C         	goto	i2u90_40
  4163   0019F0                     i2u90_41:
  4164   0019F0  EF06  F00D         	goto	i2l650
  4165   0019F4                     i2u90_40:
  4166   0019F4                     
  4167                           ; BSR set to: 57
  4168                           ;mcc_generated_files/interrupt_manager.c: 66:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 67:         UART1_RxInterruptHandler();
  4169   0019F4  D802               	call	i2u91_48
  4170   0019F6  EF06  F00D         	goto	i2u91_49
  4171   0019FA                     i2u91_48:
  4172   0019FA  0005               	push	
  4173   0019FC  6EFA               	movwf	pclath,c
  4174   0019FE  5020               	movf	_UART1_RxInterruptHandler^0,w,c
  4175   001A00  6EFD               	movwf	tosl,c
  4176   001A02  5021               	movf	(_UART1_RxInterruptHandler+1)^0,w,c
  4177   001A04  6EFE               	movwf	tosh,c
  4178   001A06  6AFF               	clrf	tosu,c
  4179   001A08  50FA               	movf	pclath,w,c
  4180   001A0A  0012               	return		;indir
  4181   001A0C                     i2u91_49:
  4182   001A0C                     i2l650:
  4183   001A0C  0060  F00B  FFFB   	movff	??_INTERRUPT_InterruptManager+1,pclatu
  4184   001A12  0060  F007  FFFA   	movff	??_INTERRUPT_InterruptManager,pclath
  4185   001A18  0011               	retfie		f
  4186   001A1A                     __end_of_INTERRUPT_InterruptManager:
  4187                           	callstack 0
  4188                           
  4189 ;; *************** function _UART1_Transmit_ISR *****************
  4190 ;; Defined at:
  4191 ;;		line 228 in file "mcc_generated_files/uart1.c"
  4192 ;; Parameters:    Size  Location     Type
  4193 ;;		None
  4194 ;; Auto vars:     Size  Location     Type
  4195 ;;		None
  4196 ;; Return value:  Size  Location     Type
  4197 ;;                  1    wreg      void 
  4198 ;; Registers used:
  4199 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4200 ;; Tracked objects:
  4201 ;;		On entry : 0/0
  4202 ;;		On exit  : 0/0
  4203 ;;		Unchanged: 0/0
  4204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4208 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4209 ;;Total ram usage:        0 bytes
  4210 ;; Hardware stack levels used: 1
  4211 ;; This function calls:
  4212 ;;		Nothing
  4213 ;; This function is called by:
  4214 ;;		_UART1_Initialize
  4215 ;;		_INTERRUPT_InterruptManager
  4216 ;; This function uses a non-reentrant model
  4217 ;;
  4218                           
  4219                           	psect	text41
  4220   001B4A                     __ptext41:
  4221                           	callstack 0
  4222   001B4A                     _UART1_Transmit_ISR:
  4223                           	callstack 26
  4224   001B4A                     
  4225                           ;mcc_generated_files/uart1.c: 231:     if(sizeof(uart1TxBuffer) > uart1TxBufferRemaining
      +                          )
  4226   001B4A  0E08               	movlw	8
  4227   001B4C  602A               	cpfslt	_uart1TxBufferRemaining^0,c	;volatile
  4228   001B4E  EFAB  F00D         	goto	i2u64_41
  4229   001B52  EFAD  F00D         	goto	i2u64_40
  4230   001B56                     i2u64_41:
  4231   001B56  EFC4  F00D         	goto	i2l590
  4232   001B5A                     i2u64_40:
  4233   001B5A                     
  4234                           ;mcc_generated_files/uart1.c: 232:     {;mcc_generated_files/uart1.c: 233:         U1TXB
      +                           = uart1TxBuffer[uart1TxTail++];
  4235   001B5A  0EA3               	movlw	low _uart1TxBuffer
  4236   001B5C  242B               	addwf	_uart1TxTail^0,w,c	;volatile
  4237   001B5E  6ED9               	movwf	fsr2l,c
  4238   001B60  6ADA               	clrf	fsr2h,c
  4239   001B62  0E00               	movlw	high _uart1TxBuffer
  4240   001B64  22DA               	addwfc	fsr2h,f,c
  4241   001B66  50DF               	movf	indf2,w,c
  4242   001B68  013D               	movlb	61	; () banked
  4243   001B6A  6FEA               	movwf	234,b	;volatile
  4244   001B6C                     
  4245                           ; BSR set to: 61
  4246   001B6C  2A2B               	incf	_uart1TxTail^0,f,c	;volatile
  4247   001B6E                     
  4248                           ; BSR set to: 61
  4249                           ;mcc_generated_files/uart1.c: 234:        if(sizeof(uart1TxBuffer) <= uart1TxTail)
  4250   001B6E  0E07               	movlw	7
  4251   001B70  642B               	cpfsgt	_uart1TxTail^0,c	;volatile
  4252   001B72  EFBD  F00D         	goto	i2u65_41
  4253   001B76  EFBF  F00D         	goto	i2u65_40
  4254   001B7A                     i2u65_41:
  4255   001B7A  EFC1  F00D         	goto	i2l2387
  4256   001B7E                     i2u65_40:
  4257   001B7E                     
  4258                           ; BSR set to: 61
  4259                           ;mcc_generated_files/uart1.c: 235:         {;mcc_generated_files/uart1.c: 236:          
      +                             uart1TxTail = 0;
  4260   001B7E  0E00               	movlw	0
  4261   001B80  6E2B               	movwf	_uart1TxTail^0,c	;volatile
  4262   001B82                     i2l2387:
  4263                           
  4264                           ; BSR set to: 61
  4265                           ;mcc_generated_files/uart1.c: 238:         uart1TxBufferRemaining++;
  4266   001B82  2A2A               	incf	_uart1TxBufferRemaining^0,f,c	;volatile
  4267                           
  4268                           ;mcc_generated_files/uart1.c: 239:     }
  4269   001B84  EFC6  F00D         	goto	i2l593
  4270   001B88                     i2l590:
  4271                           
  4272                           ;mcc_generated_files/uart1.c: 241:     {;mcc_generated_files/uart1.c: 242:         PIE3b
      +                          its.U1TXIE = 0;
  4273   001B88  0139               	movlb	57	; () banked
  4274   001B8A  9993               	bcf	147,4,b	;volatile
  4275   001B8C                     i2l593:
  4276   001B8C  0012               	return		;funcret
  4277   001B8E                     __end_of_UART1_Transmit_ISR:
  4278                           	callstack 0
  4279                           
  4280 ;; *************** function _UART1_Receive_ISR *****************
  4281 ;; Defined at:
  4282 ;;		line 248 in file "mcc_generated_files/uart1.c"
  4283 ;; Parameters:    Size  Location     Type
  4284 ;;		None
  4285 ;; Auto vars:     Size  Location     Type
  4286 ;;		None
  4287 ;; Return value:  Size  Location     Type
  4288 ;;                  1    wreg      void 
  4289 ;; Registers used:
  4290 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  4291 ;; Tracked objects:
  4292 ;;		On entry : 0/0
  4293 ;;		On exit  : 0/0
  4294 ;;		Unchanged: 0/0
  4295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4299 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4300 ;;Total ram usage:        0 bytes
  4301 ;; Hardware stack levels used: 1
  4302 ;; Hardware stack levels required when called: 2
  4303 ;; This function calls:
  4304 ;;		Absolute function
  4305 ;;		_UART1_DefaultErrorHandler
  4306 ;;		_UART1_DefaultFramingErrorHandler
  4307 ;;		_UART1_DefaultOverrunErrorHandler
  4308 ;;		_UART1_RxDataHandler
  4309 ;; This function is called by:
  4310 ;;		_UART1_Initialize
  4311 ;;		_INTERRUPT_InterruptManager
  4312 ;; This function uses a non-reentrant model
  4313 ;;
  4314                           
  4315                           	psect	text42
  4316   0014F2                     __ptext42:
  4317                           	callstack 0
  4318   0014F2                     _UART1_Receive_ISR:
  4319                           	callstack 24
  4320   0014F2                     
  4321                           ;mcc_generated_files/uart1.c: 251:     uart1RxStatusBuffer[uart1RxHead].status = 0;
  4322   0014F2  0E93               	movlw	low _uart1RxStatusBuffer
  4323   0014F4  2429               	addwf	_uart1RxHead^0,w,c	;volatile
  4324   0014F6  6ED9               	movwf	fsr2l,c
  4325   0014F8  6ADA               	clrf	fsr2h,c
  4326   0014FA  0E00               	movlw	high _uart1RxStatusBuffer
  4327   0014FC  22DA               	addwfc	fsr2h,f,c
  4328   0014FE  0E00               	movlw	0
  4329   001500  6EDF               	movwf	indf2,c
  4330   001502                     
  4331                           ;mcc_generated_files/uart1.c: 253:     if(U1ERRIRbits.FERIF){
  4332   001502  013D               	movlb	61	; () banked
  4333   001504  A7F9               	btfss	249,3,b	;volatile
  4334   001506  EF87  F00A         	goto	i2u66_41
  4335   00150A  EF89  F00A         	goto	i2u66_40
  4336   00150E                     i2u66_41:
  4337   00150E  EF9D  F00A         	goto	i2l2397
  4338   001512                     i2u66_40:
  4339   001512                     
  4340                           ; BSR set to: 61
  4341                           ;mcc_generated_files/uart1.c: 254:         uart1RxStatusBuffer[uart1RxHead].ferr = 1;
  4342   001512  0E93               	movlw	low _uart1RxStatusBuffer
  4343   001514  2429               	addwf	_uart1RxHead^0,w,c	;volatile
  4344   001516  6ED9               	movwf	fsr2l,c
  4345   001518  6ADA               	clrf	fsr2h,c
  4346   00151A  0E00               	movlw	high _uart1RxStatusBuffer
  4347   00151C  22DA               	addwfc	fsr2h,f,c
  4348   00151E  0100               	movlb	0	; () banked
  4349   001520  82DF               	bsf	indf2,1,c
  4350   001522                     
  4351                           ; BSR set to: 0
  4352                           ;mcc_generated_files/uart1.c: 255:         UART1_FramingErrorHandler();
  4353   001522  D802               	call	i2u67_48
  4354   001524  EF9D  F00A         	goto	i2u67_49
  4355   001528                     i2u67_48:
  4356   001528  0005               	push	
  4357   00152A  6EFA               	movwf	pclath,c
  4358   00152C  51AF               	movf	_UART1_FramingErrorHandler& (0+255),w,b
  4359   00152E  6EFD               	movwf	tosl,c
  4360   001530  51B0               	movf	(_UART1_FramingErrorHandler+1)& (0+255),w,b
  4361   001532  6EFE               	movwf	tosh,c
  4362   001534  6AFF               	clrf	tosu,c
  4363   001536  50FA               	movf	pclath,w,c
  4364   001538  0012               	return		;indir
  4365   00153A                     i2u67_49:
  4366   00153A                     i2l2397:
  4367                           
  4368                           ;mcc_generated_files/uart1.c: 258:     if(U1ERRIRbits.RXFOIF){
  4369   00153A  013D               	movlb	61	; () banked
  4370   00153C  A3F9               	btfss	249,1,b	;volatile
  4371   00153E  EFA3  F00A         	goto	i2u68_41
  4372   001542  EFA5  F00A         	goto	i2u68_40
  4373   001546                     i2u68_41:
  4374   001546  EFB9  F00A         	goto	i2l2403
  4375   00154A                     i2u68_40:
  4376   00154A                     
  4377                           ; BSR set to: 61
  4378                           ;mcc_generated_files/uart1.c: 259:         uart1RxStatusBuffer[uart1RxHead].oerr = 1;
  4379   00154A  0E93               	movlw	low _uart1RxStatusBuffer
  4380   00154C  2429               	addwf	_uart1RxHead^0,w,c	;volatile
  4381   00154E  6ED9               	movwf	fsr2l,c
  4382   001550  6ADA               	clrf	fsr2h,c
  4383   001552  0E00               	movlw	high _uart1RxStatusBuffer
  4384   001554  22DA               	addwfc	fsr2h,f,c
  4385   001556  0100               	movlb	0	; () banked
  4386   001558  84DF               	bsf	indf2,2,c
  4387   00155A                     
  4388                           ; BSR set to: 0
  4389                           ;mcc_generated_files/uart1.c: 260:         UART1_OverrunErrorHandler();
  4390   00155A  D802               	call	i2u69_48
  4391   00155C  EFB9  F00A         	goto	i2u69_49
  4392   001560                     i2u69_48:
  4393   001560  0005               	push	
  4394   001562  6EFA               	movwf	pclath,c
  4395   001564  51AD               	movf	_UART1_OverrunErrorHandler& (0+255),w,b
  4396   001566  6EFD               	movwf	tosl,c
  4397   001568  51AE               	movf	(_UART1_OverrunErrorHandler+1)& (0+255),w,b
  4398   00156A  6EFE               	movwf	tosh,c
  4399   00156C  6AFF               	clrf	tosu,c
  4400   00156E  50FA               	movf	pclath,w,c
  4401   001570  0012               	return		;indir
  4402   001572                     i2u69_49:
  4403   001572                     i2l2403:
  4404                           
  4405                           ;mcc_generated_files/uart1.c: 263:     if(uart1RxStatusBuffer[uart1RxHead].status){
  4406   001572  0E93               	movlw	low _uart1RxStatusBuffer
  4407   001574  2429               	addwf	_uart1RxHead^0,w,c	;volatile
  4408   001576  6ED9               	movwf	fsr2l,c
  4409   001578  6ADA               	clrf	fsr2h,c
  4410   00157A  0E00               	movlw	high _uart1RxStatusBuffer
  4411   00157C  22DA               	addwfc	fsr2h,f,c
  4412   00157E  50DF               	movf	indf2,w,c
  4413   001580  B4D8               	btfsc	status,2,c
  4414   001582  EFC5  F00A         	goto	i2u70_41
  4415   001586  EFC7  F00A         	goto	i2u70_40
  4416   00158A                     i2u70_41:
  4417   00158A  EFD6  F00A         	goto	i2l2407
  4418   00158E                     i2u70_40:
  4419   00158E                     
  4420                           ;mcc_generated_files/uart1.c: 264:         UART1_ErrorHandler();
  4421   00158E  D802               	call	i2u71_48
  4422   001590  EFD4  F00A         	goto	i2u71_49
  4423   001594                     i2u71_48:
  4424   001594  0005               	push	
  4425   001596  6EFA               	movwf	pclath,c
  4426   001598  0100               	movlb	0	; () banked
  4427   00159A  51AB               	movf	_UART1_ErrorHandler& (0+255),w,b
  4428   00159C  6EFD               	movwf	tosl,c
  4429   00159E  51AC               	movf	(_UART1_ErrorHandler+1)& (0+255),w,b
  4430   0015A0  6EFE               	movwf	tosh,c
  4431   0015A2  6AFF               	clrf	tosu,c
  4432   0015A4  50FA               	movf	pclath,w,c
  4433   0015A6  0012               	return		;indir
  4434   0015A8                     i2u71_49:
  4435                           
  4436                           ;mcc_generated_files/uart1.c: 265:     } else {
  4437   0015A8  EFD8  F00A         	goto	i2l600
  4438   0015AC                     i2l2407:
  4439                           
  4440                           ;mcc_generated_files/uart1.c: 266:         UART1_RxDataHandler();
  4441   0015AC  EC3D  F00E         	call	_UART1_RxDataHandler	;wreg free
  4442   0015B0                     i2l600:
  4443   0015B0  0012               	return		;funcret
  4444   0015B2                     __end_of_UART1_Receive_ISR:
  4445                           	callstack 0
  4446                           
  4447 ;; *************** function _UART1_DefaultOverrunErrorHandler *****************
  4448 ;; Defined at:
  4449 ;;		line 284 in file "mcc_generated_files/uart1.c"
  4450 ;; Parameters:    Size  Location     Type
  4451 ;;		None
  4452 ;; Auto vars:     Size  Location     Type
  4453 ;;		None
  4454 ;; Return value:  Size  Location     Type
  4455 ;;                  1    wreg      void 
  4456 ;; Registers used:
  4457 ;;		None
  4458 ;; Tracked objects:
  4459 ;;		On entry : 0/0
  4460 ;;		On exit  : 0/0
  4461 ;;		Unchanged: 0/0
  4462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4466 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4467 ;;Total ram usage:        0 bytes
  4468 ;; Hardware stack levels used: 1
  4469 ;; This function calls:
  4470 ;;		Nothing
  4471 ;; This function is called by:
  4472 ;;		_UART1_Initialize
  4473 ;;		_UART1_Receive_ISR
  4474 ;; This function uses a non-reentrant model
  4475 ;;
  4476                           
  4477                           	psect	text43
  4478   001EAC                     __ptext43:
  4479                           	callstack 0
  4480   001EAC                     _UART1_DefaultOverrunErrorHandler:
  4481                           	callstack 25
  4482   001EAC  0012               	return		;funcret
  4483   001EAE                     __end_of_UART1_DefaultOverrunErrorHandler:
  4484                           	callstack 0
  4485                           
  4486 ;; *************** function _UART1_DefaultFramingErrorHandler *****************
  4487 ;; Defined at:
  4488 ;;		line 282 in file "mcc_generated_files/uart1.c"
  4489 ;; Parameters:    Size  Location     Type
  4490 ;;		None
  4491 ;; Auto vars:     Size  Location     Type
  4492 ;;		None
  4493 ;; Return value:  Size  Location     Type
  4494 ;;                  1    wreg      void 
  4495 ;; Registers used:
  4496 ;;		None
  4497 ;; Tracked objects:
  4498 ;;		On entry : 0/0
  4499 ;;		On exit  : 0/0
  4500 ;;		Unchanged: 0/0
  4501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4505 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4506 ;;Total ram usage:        0 bytes
  4507 ;; Hardware stack levels used: 1
  4508 ;; This function calls:
  4509 ;;		Nothing
  4510 ;; This function is called by:
  4511 ;;		_UART1_Initialize
  4512 ;;		_UART1_Receive_ISR
  4513 ;; This function uses a non-reentrant model
  4514 ;;
  4515                           
  4516                           	psect	text44
  4517   001EAE                     __ptext44:
  4518                           	callstack 0
  4519   001EAE                     _UART1_DefaultFramingErrorHandler:
  4520                           	callstack 25
  4521   001EAE  0012               	return		;funcret
  4522   001EB0                     __end_of_UART1_DefaultFramingErrorHandler:
  4523                           	callstack 0
  4524                           
  4525 ;; *************** function _UART1_DefaultErrorHandler *****************
  4526 ;; Defined at:
  4527 ;;		line 286 in file "mcc_generated_files/uart1.c"
  4528 ;; Parameters:    Size  Location     Type
  4529 ;;		None
  4530 ;; Auto vars:     Size  Location     Type
  4531 ;;		None
  4532 ;; Return value:  Size  Location     Type
  4533 ;;                  1    wreg      void 
  4534 ;; Registers used:
  4535 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4536 ;; Tracked objects:
  4537 ;;		On entry : 0/0
  4538 ;;		On exit  : 0/0
  4539 ;;		Unchanged: 0/0
  4540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4544 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4545 ;;Total ram usage:        0 bytes
  4546 ;; Hardware stack levels used: 1
  4547 ;; Hardware stack levels required when called: 1
  4548 ;; This function calls:
  4549 ;;		_UART1_RxDataHandler
  4550 ;; This function is called by:
  4551 ;;		_UART1_Initialize
  4552 ;;		_UART1_Receive_ISR
  4553 ;; This function uses a non-reentrant model
  4554 ;;
  4555                           
  4556                           	psect	text45
  4557   001EA2                     __ptext45:
  4558                           	callstack 0
  4559   001EA2                     _UART1_DefaultErrorHandler:
  4560                           	callstack 24
  4561   001EA2                     
  4562                           ;mcc_generated_files/uart1.c: 287:     UART1_RxDataHandler();
  4563   001EA2  EC3D  F00E         	call	_UART1_RxDataHandler	;wreg free
  4564   001EA6  0012               	return		;funcret
  4565   001EA8                     __end_of_UART1_DefaultErrorHandler:
  4566                           	callstack 0
  4567                           
  4568 ;; *************** function _UART1_RxDataHandler *****************
  4569 ;; Defined at:
  4570 ;;		line 272 in file "mcc_generated_files/uart1.c"
  4571 ;; Parameters:    Size  Location     Type
  4572 ;;		None
  4573 ;; Auto vars:     Size  Location     Type
  4574 ;;		None
  4575 ;; Return value:  Size  Location     Type
  4576 ;;                  1    wreg      void 
  4577 ;; Registers used:
  4578 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4579 ;; Tracked objects:
  4580 ;;		On entry : 0/0
  4581 ;;		On exit  : 0/0
  4582 ;;		Unchanged: 0/0
  4583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4587 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4588 ;;Total ram usage:        0 bytes
  4589 ;; Hardware stack levels used: 1
  4590 ;; This function calls:
  4591 ;;		Nothing
  4592 ;; This function is called by:
  4593 ;;		_UART1_Receive_ISR
  4594 ;;		_UART1_DefaultErrorHandler
  4595 ;; This function uses a non-reentrant model
  4596 ;;
  4597                           
  4598                           	psect	text46
  4599   001C7A                     __ptext46:
  4600                           	callstack 0
  4601   001C7A                     _UART1_RxDataHandler:
  4602                           	callstack 25
  4603   001C7A                     
  4604                           ;mcc_generated_files/uart1.c: 274:     uart1RxBuffer[uart1RxHead++] = U1RXB;
  4605   001C7A  0E9B               	movlw	low _uart1RxBuffer
  4606   001C7C  2429               	addwf	_uart1RxHead^0,w,c	;volatile
  4607   001C7E  6ED9               	movwf	fsr2l,c
  4608   001C80  6ADA               	clrf	fsr2h,c
  4609   001C82  0E00               	movlw	high _uart1RxBuffer
  4610   001C84  22DA               	addwfc	fsr2h,f,c
  4611   001C86  006F F7A3 FFDF     	movff	15848,indf2	;volatile
  4612   001C8C  2A29               	incf	_uart1RxHead^0,f,c	;volatile
  4613   001C8E                     
  4614                           ;mcc_generated_files/uart1.c: 275:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
  4615   001C8E  0E07               	movlw	7
  4616   001C90  6429               	cpfsgt	_uart1RxHead^0,c	;volatile
  4617   001C92  EF4D  F00E         	goto	i2u61_41
  4618   001C96  EF4F  F00E         	goto	i2u61_40
  4619   001C9A                     i2u61_41:
  4620   001C9A  EF51  F00E         	goto	i2l2277
  4621   001C9E                     i2u61_40:
  4622   001C9E                     
  4623                           ;mcc_generated_files/uart1.c: 276:     {;mcc_generated_files/uart1.c: 277:         uart1
      +                          RxHead = 0;
  4624   001C9E  0E00               	movlw	0
  4625   001CA0  6E29               	movwf	_uart1RxHead^0,c	;volatile
  4626   001CA2                     i2l2277:
  4627                           
  4628                           ;mcc_generated_files/uart1.c: 279:     uart1RxCount++;
  4629   001CA2  2A27               	incf	_uart1RxCount^0,f,c	;volatile
  4630   001CA4  0012               	return		;funcret
  4631   001CA6                     __end_of_UART1_RxDataHandler:
  4632                           	callstack 0
  4633                           
  4634                           ;
  4635                           ; Interrupt Vector Table @ 0x8
  4636                           ;
  4637                           
  4638                           	psect	ivt0x8
  4639   000008                     __pivt0x8:
  4640                           	callstack 0
  4641   000008                     ivt0x8_base:
  4642                           	callstack 0
  4643                           
  4644                           ; high-priority vector
  4645   000008  EFC9  F00C         	goto	_INTERRUPT_InterruptManager
  4646   000018                     	org	16
  4647                           
  4648                           ; low-priority vector
  4649   000018  00FF               	reset	
  4650                           
  4651                           	psect	text47
  4652   000000                     __ptext47:
  4653                           	callstack 0
  4654   000000                     
  4655                           	psect	rparam
  4656   000000                     
  4657                           	psect	idloc
  4658                           
  4659                           ;Config register IDLOC0 @ 0x200000
  4660                           ;	unspecified, using default values
  4661   200000                     	org	2097152
  4662   200000  0FFF               	dw	4095
  4663                           
  4664                           ;Config register IDLOC1 @ 0x200002
  4665                           ;	unspecified, using default values
  4666   200002                     	org	2097154
  4667   200002  0FFF               	dw	4095
  4668                           
  4669                           ;Config register IDLOC2 @ 0x200004
  4670                           ;	unspecified, using default values
  4671   200004                     	org	2097156
  4672   200004  0FFF               	dw	4095
  4673                           
  4674                           ;Config register IDLOC3 @ 0x200006
  4675                           ;	unspecified, using default values
  4676   200006                     	org	2097158
  4677   200006  0FFF               	dw	4095
  4678                           
  4679                           ;Config register IDLOC4 @ 0x200008
  4680                           ;	unspecified, using default values
  4681   200008                     	org	2097160
  4682   200008  0FFF               	dw	4095
  4683                           
  4684                           ;Config register IDLOC5 @ 0x20000A
  4685                           ;	unspecified, using default values
  4686   20000A                     	org	2097162
  4687   20000A  0FFF               	dw	4095
  4688                           
  4689                           ;Config register IDLOC6 @ 0x20000C
  4690                           ;	unspecified, using default values
  4691   20000C                     	org	2097164
  4692   20000C  0FFF               	dw	4095
  4693                           
  4694                           ;Config register IDLOC7 @ 0x20000E
  4695                           ;	unspecified, using default values
  4696   20000E                     	org	2097166
  4697   20000E  0FFF               	dw	4095
  4698                           
  4699                           	psect	config
  4700                           
  4701                           ;Config register CONFIG1L @ 0x300000
  4702                           ;	External Oscillator Selection
  4703                           ;	FEXTOSC = ECH, EC (external clock) above 8 MHz; PFM set to high power
  4704                           ;	Reset Oscillator Selection
  4705                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  4706   300000                     	org	3145728
  4707   300000  AF                 	db	175
  4708                           
  4709                           ;Config register CONFIG1H @ 0x300001
  4710                           ;	Clock out Enable bit
  4711                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  4712                           ;	PRLOCKED One-Way Set Enable bit
  4713                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
  4714                           ;	Clock Switch Enable bit
  4715                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  4716                           ;	Fail-Safe Clock Monitor Enable bit
  4717                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  4718   300001                     	org	3145729
  4719   300001  FF                 	db	255
  4720                           
  4721                           ;Config register CONFIG2L @ 0x300002
  4722                           ;	MCLR Enable bit
  4723                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  4724                           ;	Power-up timer selection bits
  4725                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  4726                           ;	Multi-vector enable bit
  4727                           ;	MVECEN = OFF, Interrupt contoller does not use vector table to prioritze interrupts
  4728                           ;	IVTLOCK bit One-way set enable bit
  4729                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
  4730                           ;	Low Power BOR Enable bit
  4731                           ;	LPBOREN = OFF, ULPBOR disabled
  4732                           ;	Brown-out Reset Enable bits
  4733                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  4734   300002                     	org	3145730
  4735   300002  F7                 	db	247
  4736                           
  4737                           ;Config register CONFIG2H @ 0x300003
  4738                           ;	Brown-out Reset Voltage Selection bits
  4739                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
  4740                           ;	ZCD Disable bit
  4741                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  4742                           ;	PPSLOCK bit One-Way Set Enable bit
  4743                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  4744                           ;	Stack Full/Underflow Reset Enable bit
  4745                           ;	STVREN = ON, Stack full/underflow will cause Reset
  4746                           ;	Debugger Enable bit
  4747                           ;	DEBUG = OFF, Background debugger disabled
  4748                           ;	Extended Instruction Set Enable bit
  4749                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  4750   300003                     	org	3145731
  4751   300003  FF                 	db	255
  4752                           
  4753                           ;Config register CONFIG3L @ 0x300004
  4754                           ;	WDT Period selection bits
  4755                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  4756                           ;	WDT operating mode
  4757                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  4758   300004                     	org	3145732
  4759   300004  9F                 	db	159
  4760                           
  4761                           ;Config register CONFIG3H @ 0x300005
  4762                           ;	WDT Window Select bits
  4763                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  4764                           ;	WDT input clock selector
  4765                           ;	WDTCCS = SC, Software Control
  4766   300005                     	org	3145733
  4767   300005  FF                 	db	255
  4768                           
  4769                           ;Config register CONFIG4L @ 0x300006
  4770                           ;	Boot Block Size selection bits
  4771                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  4772                           ;	Boot Block enable bit
  4773                           ;	BBEN = OFF, Boot block disabled
  4774                           ;	Storage Area Flash enable bit
  4775                           ;	SAFEN = OFF, SAF disabled
  4776                           ;	Application Block write protection bit
  4777                           ;	WRTAPP = OFF, Application Block not write protected
  4778   300006                     	org	3145734
  4779   300006  FF                 	db	255
  4780                           
  4781                           ;Config register CONFIG4H @ 0x300007
  4782                           ;	Boot Block Write Protection bit
  4783                           ;	WRTB = OFF, Boot Block not write-protected
  4784                           ;	Configuration Register Write Protection bit
  4785                           ;	WRTC = OFF, Configuration registers not write-protected
  4786                           ;	Data EEPROM Write Protection bit
  4787                           ;	WRTD = OFF, Data EEPROM not write-protected
  4788                           ;	SAF Write protection bit
  4789                           ;	WRTSAF = OFF, SAF not Write Protected
  4790                           ;	Low Voltage Programming Enable bit
  4791                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  4792   300007                     	org	3145735
  4793   300007  FF                 	db	255
  4794                           
  4795                           ;Config register CONFIG5L @ 0x300008
  4796                           ;	PFM and Data EEPROM Code Protection bit
  4797                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  4798   300008                     	org	3145736
  4799   300008  FF                 	db	255
  4800                           
  4801                           ;Config register CONFIG5H @ 0x300009
  4802                           ;	unspecified, using default values
  4803   300009                     	org	3145737
  4804   300009  FF                 	db	255
  4805                           tosu	equ	0x3FFF
  4806                           tosh	equ	0x3FFE
  4807                           tosl	equ	0x3FFD
  4808                           stkptr	equ	0x3FFC
  4809                           pclatu	equ	0x3FFB
  4810                           pclath	equ	0x3FFA
  4811                           pcl	equ	0x3FF9
  4812                           tblptru	equ	0x3FF8
  4813                           tblptrh	equ	0x3FF7
  4814                           tblptrl	equ	0x3FF6
  4815                           tablat	equ	0x3FF5
  4816                           prodh	equ	0x3FF4
  4817                           prodl	equ	0x3FF3
  4818                           indf0	equ	0x3FEF
  4819                           postinc0	equ	0x3FEE
  4820                           postdec0	equ	0x3FED
  4821                           preinc0	equ	0x3FEC
  4822                           plusw0	equ	0x3FEB
  4823                           fsr0h	equ	0x3FEA
  4824                           fsr0l	equ	0x3FE9
  4825                           wreg	equ	0x3FE8
  4826                           indf1	equ	0x3FE7
  4827                           postinc1	equ	0x3FE6
  4828                           postdec1	equ	0x3FE5
  4829                           preinc1	equ	0x3FE4
  4830                           plusw1	equ	0x3FE3
  4831                           fsr1h	equ	0x3FE2
  4832                           fsr1l	equ	0x3FE1
  4833                           bsr	equ	0x3FE0
  4834                           indf2	equ	0x3FDF
  4835                           postinc2	equ	0x3FDE
  4836                           postdec2	equ	0x3FDD
  4837                           preinc2	equ	0x3FDC
  4838                           plusw2	equ	0x3FDB
  4839                           fsr2h	equ	0x3FDA
  4840                           fsr2l	equ	0x3FD9
  4841                           status	equ	0x3FD8

Data Sizes:
    Strings     0
    Constant    5
    Data        0
    BSS         49
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     25      44
    BANK0           160     51      81
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0

Pointer List with Targets:

    actualizar_recibido_Eusart@disp	PTR struct usart size(2) Largest target is 11
		 -> main@disp(BANK0[11]), 

    dato_recibido_completo@disp	PTR struct usart size(2) Largest target is 11
		 -> main@disp(BANK0[11]), 

    recibir_periodo_Eusart@disp	PTR struct usart size(2) Largest target is 11
		 -> main@disp(BANK0[11]), 

    iniciar_struct_usart@disp	PTR struct usart size(2) Largest target is 11
		 -> main@disp(BANK0[11]), 

    actualize_valor@spi	PTR struct structspi size(2) Largest target is 12
		 -> main@spi(BANK0[12]), 

    inicie_SPI@spi	PTR struct structspi size(2) Largest target is 12
		 -> main@spi(BANK0[12]), 

    cola_vacia@c	PTR struct eCola size(2) Largest target is 21
		 -> main@cola(BANK0[21]), 

    cola_llena@c	PTR struct eCola size(2) Largest target is 21
		 -> main@cola(BANK0[21]), 

    cola_get@c	PTR struct eCola size(2) Largest target is 21
		 -> main@cola(BANK0[21]), 

    cola_add@c	PTR struct eCola size(2) Largest target is 21
		 -> main@cola(BANK0[21]), 

    inicie_cola@c	PTR struct eCola size(2) Largest target is 21
		 -> main@cola(BANK0[21]), 

    Tm_Baje_periodico@ctp	PTR struct Tm_Periodico size(2) Largest target is 7
		 -> main@timer(BANK0[7]), 

    Tm_Hubo_periodico@ctp	PTR struct Tm_Periodico size(2) Largest target is 7
		 -> main@timer(BANK0[7]), 

    Tm_Procese_tiempo@ctp	PTR struct Tm_Periodico size(2) Largest target is 7
		 -> main@timer(BANK0[7]), 

    Tm_Inicie_periodico@ctp	PTR struct Tm_Periodico size(2) Largest target is 7
		 -> main@timer(BANK0[7]), 

    UART1_SetTxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_Transmit_ISR(), 

    UART1_SetRxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_Receive_ISR(), 

    UART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultErrorHandler(), 

    UART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), 

    UART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), 

    UART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultErrorHandler(), 

    UART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultOverrunErrorHandler(), 

    UART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMRAM

    _main->_Tm_Inicie_periodico
    _enviar_Eusart->_cola_get
    _cola_get->_cola_vacia
    _cola_add->_cola_llena
    _actualizar_recibido_Eusart->___wmul
    _Tm_Inicie_periodico->_actualizar_recibido_Eusart
    _UART1_Initialize->_UART1_SetErrorHandler
    _UART1_Initialize->_UART1_SetFramingErrorHandler
    _UART1_Initialize->_UART1_SetOverrunErrorHandler
    _UART1_Initialize->_UART1_SetRxInterruptHandler
    _UART1_Initialize->_UART1_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                55    55      0    7614
                                             22 COMRAM     3     3      0
                                              0 BANK0     51    51      0
      _ADCC_DischargeSampleCapacitor
           _ADCC_GetConversionResult
                    _ADCC_Initialize
              _ADCC_IsConversionDone
               _ADCC_StartConversion
                    _SPI1_Initialize
                  _SYSTEM_Initialize
            _TMR2_HasOverflowOccured
                    _TMR2_Initialize
                  _Tm_Baje_periodico
                  _Tm_Hubo_periodico
                _Tm_Inicie_periodico
                  _Tm_Procese_tiempo
                   _UART1_Initialize
                  _UART1_is_rx_ready
                  _UART1_is_tx_ready
         _actualizar_recibido_Eusart
                    _actualize_valor
                           _cola_add
                           _cola_get
                         _cola_vacia
             _dato_recibido_completo
                      _enviar_Eusart
               _iniciar_struct_usart
                         _inicie_SPI
                        _inicie_cola
             _recibir_periodo_Eusart
 ---------------------------------------------------------------------------------
 (1) _recibir_periodo_Eusart                               4     2      2     648
                                              2 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _inicie_cola                                          2     0      2     183
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _inicie_SPI                                           2     0      2     338
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _iniciar_struct_usart                                 2     0      2     307
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _enviar_Eusart                                        2     0      2     121
                                             11 COMRAM     2     0      2
                           _cola_get (ARG)
 ---------------------------------------------------------------------------------
 (1) _dato_recibido_completo                               2     0      2     121
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _cola_get                                             5     3      2     552
                                              6 COMRAM     5     3      2
                         _cola_vacia
 ---------------------------------------------------------------------------------
 (1) _cola_vacia                                           4     2      2     211
                                              2 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _cola_add                                             5     2      3     909
                                              6 COMRAM     5     2      3
                         _cola_llena
 ---------------------------------------------------------------------------------
 (2) _cola_llena                                           4     2      2     121
                                              2 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _actualize_valor                                      4     0      4     242
                                              2 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _actualizar_recibido_Eusart                          10     8      2     686
                                              8 COMRAM    10     8      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     472
                                              2 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _UART1_is_tx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART1_is_rx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Tm_Procese_tiempo                                    6     4      2     369
                                              2 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _Tm_Inicie_periodico                                  4     0      4     515
                                             18 COMRAM     4     0      4
         _actualizar_recibido_Eusart (ARG)
 ---------------------------------------------------------------------------------
 (1) _Tm_Hubo_periodico                                    2     0      2     121
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _Tm_Baje_periodico                                    2     0      2     121
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _TMR2_HasOverflowOccured                              1     1      0      45
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     605
                    _ADCC_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                   _UART1_Initialize
 ---------------------------------------------------------------------------------
 (1) _UART1_Initialize                                     0     0      0     605
              _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _UART1_SetTxInterruptHandler                          2     0      2     121
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _UART1_SetRxInterruptHandler                          2     0      2     121
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _UART1_SetOverrunErrorHandler                         2     0      2     121
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _UART1_SetFramingErrorHandler                         2     0      2     121
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _UART1_SetErrorHandler                                2     0      2     121
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADCC_StartConversion                                 1     1      0      22
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADCC_IsConversionDone                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADCC_GetConversionResult                             4     2      2       0
                                              2 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _ADCC_DischargeSampleCapacitor                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           2     2      0       0
                                              0 COMRAM     2     2      0
                   Absolute function *
                  _UART1_Receive_ISR *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (5) _UART1_Transmit_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _UART1_Receive_ISR                                    0     0      0       0
                   Absolute function *
          _UART1_DefaultErrorHandler *
   _UART1_DefaultFramingErrorHandler *
   _UART1_DefaultOverrunErrorHandler *
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (6) _UART1_DefaultOverrunErrorHandler                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _UART1_DefaultFramingErrorHandler                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _UART1_DefaultErrorHandler                            0     0      0       0
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (6) _UART1_RxDataHandler                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_DischargeSampleCapacitor
   _ADCC_GetConversionResult
   _ADCC_Initialize
   _ADCC_IsConversionDone
   _ADCC_StartConversion
   _SPI1_Initialize
   _SYSTEM_Initialize
     _ADCC_Initialize
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _UART1_Initialize
       _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
   _TMR2_HasOverflowOccured
   _TMR2_Initialize
   _Tm_Baje_periodico
   _Tm_Hubo_periodico
   _Tm_Inicie_periodico
     _actualizar_recibido_Eusart (ARG)
       ___wmul
   _Tm_Procese_tiempo
   _UART1_Initialize
   _UART1_is_rx_ready
   _UART1_is_tx_ready
   _actualizar_recibido_Eusart
   _actualize_valor
   _cola_add
     _cola_llena
   _cola_get
     _cola_vacia
   _cola_vacia
   _dato_recibido_completo
   _enviar_Eusart
     _cola_get (ARG)
   _iniciar_struct_usart
   _inicie_SPI
   _inicie_cola
   _recibir_periodo_Eusart

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *
     Absolute function(Fake) *
     _UART1_DefaultErrorHandler *
       _UART1_RxDataHandler
     _UART1_DefaultFramingErrorHandler *
     _UART1_DefaultOverrunErrorHandler *
     _UART1_RxDataHandler *
   _UART1_Transmit_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FFF      0       0      69        0.0%
EEDATA             400      0       0       0        0.0%
BITBIGSFRhhhhll    22A      0       0      50        0.0%
BITBIGSFRlllll     193      0       0      67        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBIGSFRhhhhll     CB      0       0      46        0.0%
BITBIGSFRhhhhll     C6      0       0      43        0.0%
BITBIGSFRhhhhll     AA      0       0      40        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     33      51       5       50.6%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     19      2C       1       46.3%
BITBIGSFRhhhhll     59      0       0      52        0.0%
BITBIGSFRhhhhll     33      0       0      62        0.0%
BITBIGSFRhhhhhh     2D      0       0      36        0.0%
BITBIGSFRhhhhll     29      0       0      60        0.0%
BITBIGSFRhhhhll     1C      0       0      42        0.0%
BITBIGSFRllh        1B      0       0      65        0.0%
BITBIGSFRlh         11      0       0      64        0.0%
BITBIGSFRllllh       E      0       0      66        0.0%
BITBIGSFRhhhhll      B      0       0      59        0.0%
BITBIGSFRhhhhhh      B      0       0      37        0.0%
BITBIGSFRhhhhll      A      0       0      39        0.0%
BITBIGSFRhhhhll      5      0       0      51        0.0%
BITBIGSFRhhhhll      5      0       0      58        0.0%
BITBIGSFRhhhhll      5      0       0      56        0.0%
BITBIGSFRhhhhll      5      0       0      54        0.0%
BITBIGSFRhhhhll      4      0       0      53        0.0%
BITBIGSFRhhhhll      4      0       0      55        0.0%
BITBIGSFRhhhhll      4      0       0      57        0.0%
BITBIGSFRhhhhhl      3      0       0      38        0.0%
BITBIGSFRhhhhll      2      0       0      47        0.0%
BITBIGSFRhhhhll      2      0       0      48        0.0%
BITBIGSFRhhhhll      1      0       0      45        0.0%
BITBIGSFRhhhhll      1      0       0      44        0.0%
BITBIGSFRhhhhll      1      0       0      41        0.0%
BITBIGSFRhhhhll      1      0       0      49        0.0%
BITBIGSFRhhhhll      1      0       0      61        0.0%
BITBIGSFRhl          1      0       0      63        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      7D      68        0.0%
DATA                 0      0      7D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Mar 15 12:46:59 2023

                                          l53 1D1E                                            l62 1D68  
                                          l56 1D36                                            l59 1D44  
                      __end_of_FVR_Initialize 1E9A                           ___wmul@multiplicand 0005  
                                         l229 1C78                                           l159 17BC  
                                         l256 1DBA                                           l381 1DFC  
                                         l189 1D86                                           l622 1E88  
                                         l375 1AF6                                           l463 1E98  
                                         l384 1E12                                           l616 1E7E  
                                         l800 1BCE                                           l641 1EAA  
                                         l625 1E6A                                           l378 1E56  
                                         l562 1DE6                                           l619 1E74  
                                         l628 1E60                                           l565 1DD0  
                                         l805 1C0E                                           l399 1EA0  
                                         l559 1860                                           l815 1990  
                                         l760 1E36                                           l737 11F6  
                                         l754 14F0                                           l827 1DA0  
                                         l748 1B48                                           l757 1E24  
                                         l781 1C4C                                           l870 141A  
                                         l792 1668                                           l856 1A9A  
                                         l786 1716                                           l891 18FE  
                                         l885 1E46                                           l894 1CF8  
                                         l879 1E90                                           _PR2 003FAB  
                       ?_iniciar_struct_usart 0003                               _TMR2_Initialize 1D6A  
                                         tosl 003FFD                                           wreg 003FE8  
                          enviar_Eusart@valor 000C                 TMR2_HasOverflowOccured@status 0003  
                          _UART1_Transmit_ISR 1B4A                    recibir_periodo_Eusart@disp 0003  
                                        l3001 10B0                                          l3011 10E0  
                                        l3003 10B2                                          l3021 1108  
                                        l3013 10EC                                          l3005 10B8  
                                        l3031 1138                                          l3023 110C  
                                        l3015 10F0                                          l3007 10BC  
                                        l3033 1144                                          l3041 118C  
                                        l3017 10F6                                          l3009 10D0  
                                        l3025 1110                                          l3051 1212  
                                        l3043 11AA                                          l3035 114C  
                                        l3027 1120                                          l3019 1106  
                                        l3045 11BE                                          l3037 1150  
                                        l3029 1134                                          l3047 11D6  
                                        l3039 1160                                          l3073 13EC  
                                        l3049 11EA               ??_ADCC_DischargeSampleCapacitor 0003  
                                        l2701 178C                                          l2711 179A  
                                        l2703 178E                                          l2721 1A9C  
                                        l2713 179C                                          l2705 1790  
                                        l2801 1CF0                                          l2715 179E  
                                        l2707 1792                                          l2723 1D6A  
                                        l2731 17CE                                          l2811 1D06  
                                        l2717 1D20                                          l2709 1798  
                                        l2725 1D7E                                          l2741 17F0  
                                        l2733 17DE                                          l2821 1D1A  
                                        l2813 1D0A                                          l2805 1CFA  
                                        l2901 1E14                          _ADCC_StartConversion 1E48  
                                        l2831 1E4A                                          l2719 1E92  
                                        l2751 1804                                          l2743 17F4  
                                        l2735 17E4                                          l2727 17BE  
                                        l2815 1D0E                                          l2807 1CFE  
                                        l2823 1C4E                                          l2911 16D6  
                                        l2841 1DFE                                          l2833 1E50  
                                        l2681 1E6C                                          l2761 1818  
                                        l2753 1808                                          l2745 17F8  
                                        l2737 17E8                                          l2729 17C2  
                                        l2817 1D12                                          l2809 1D02  
                                        l2825 1C74                                          l2905 1E26  
                                        l2913 1702                                          l2921 1620  
                                        l2835 1E54                                          l2691 1730  
                                        l2771 1DA2                                          l2683 1E80  
                                        l2675 1E62                                          l2763 181C  
                                        l2755 180C                                          l2747 17FC  
                                        l2739 17EC                                          l2819 1D16  
                                        l2827 1C76                                          l2851 1DBC  
                                        l2907 166A                                          l2845 1E9A  
                                        l2837 1DE8                                          l2685 1EA8  
                                        l2693 1732                                          l2773 1DB8  
                                        l2677 1E58                                          l2765 1828  
                                        l2757 1810                                          l2749 1800  
                                        l2909 1688                                          l2925 1626  
                                        l2917 15B2                                          l2933 1E8A  
                                        l2861 1900                                          l2941 128A  
                                        l2695 173C                                          l2687 1D46  
                                        l2679 1E76                                          l2767 1834  
                                        l2759 1814                                          l2855 1AF8  
                                        l2847 1DD2                                          l2783 1C06  
                                        l2775 1BD0                                          l2927 1652  
                                        l2919 15D0                                          l2871 1954  
                                        l2863 1914                                          l2951 1386  
                                        l2943 12A2                                          l2935 123E  
                                        l2697 1744                                          l2689 1718  
                                        l2769 185C                                          l2857 1B18  
                                        l2777 1BFA                                          l2929 1666  
                                        l2961 1E38                                          l2881 1A56  
                                        l2873 1968                                          l2865 1924  
                                        l2953 13AE                                          l2945 12E4  
                                        l2937 1254                                          l2699 174A  
                                        l2891 1436                                          l2795 1BC6  
                                        l2787 1B8E                                          l2883 1A66  
                                        l2875 197C                                          l2867 1934  
                                        l2859 1C10                                          l2947 1326  
                                        l2939 1272                                          l2955 13C6  
                                        l2971 1008                                          l2893 1466  
                                        l2965 1862                                          l2877 1D88  
                                        l2789 1BBA                                          l2885 1A76  
                                        l2869 1944                                          l2949 1368  
                                        l2981 101C                                          l2973 100C  
                                        l2895 1476                                          l2799 1CD0  
                                        l2967 1872                                          l2887 1A86  
                                        l2879 1A1A                                          l2991 105C  
                                        l2983 101C                                          l2975 1010  
                                        l2897 149A                                          l2889 141C  
                                        l2993 1068                                          l2985 1030  
                                        l2977 1014                                          l2899 14B4  
                                        l2995 107C                                          l2987 103C  
                                        l2979 1018                                          l2997 1088  
                                        l2989 1048                                          l2999 10A4  
                                        u1100 1DE4                                          u1101 1DDE  
                                        u1030 1D44                                          u1110 1DE6  
                                        u1031 1D40                                          u1120 1DCE  
                                        u1040 1BFA                                          u1200 1652  
                                        u1121 1DC8                                          u1041 1BF6  
                                        u1201 164E                                          u1130 1DD0  
                                        u1050 1BBA                                          u1210 1272  
                                        u1051 1BB6                                          u1211 126E  
                                        u1060 1C60                                          u1140 1436  
                                        u1220 1386                                          u1300 11AA  
                                        u1061 1C5A                                          u1141 1432  
                                        u1221 1382                                          u1301 11A6  
                                        u1070 1C74                                          u1150 1466  
                                        u1310 11BE                                          u1230 107C  
                                        u1071 1C70                                          u1151 1462  
                                        u1311 11BA                                          u1231 1078  
                                        u1080 1DFA                                          u1160 14B4  
                                        u1320 11EA                                          u1240 10A4  
                                        u1081 1DF4                                          u1161 14B0  
                                        u1321 11E6                                          u1241 10A0  
                                        u1090 1DFC                                          u1066 1C62  
                                        u1170 1688                                          u1330 1212  
                                        u1250 10D0                                          u1171 1684  
                                        u1331 120E                                          u1251 10CC  
                                        u1180 1702                                          u1260 10E0  
                                        u1181 16FE                                          u1261 10DC  
                                        _LATA 003FBA                                          u1190 15D0  
                                        u1270 1120                                          _LATB 003FBB  
                                        u1191 15CC                                          u1271 111C  
                                        _LATC 003FBC                                          u1280 1134  
                                        _LATD 003FBD                                          u1281 1130  
                                        _LATE 003FBE                                          u1295 1174  
                                        _T2PR 003FAB                                          _PMD0 0039C0  
                                        _PMD1 0039C1                                          _PMD2 0039C2  
                                        _PMD3 0039C3                                          _PMD4 0039C4  
                                        _PMD5 0039C5                                          _PMD6 0039C6  
                                        _PMD7 0039C7                                          _PLLR 01CEE0  
                                        _TMR2 003FAA                                          _WPUA 003A41  
                                        _WPUB 003A51                                          _WPUC 003A61  
                                        _WPUD 003A71                                          _WPUE 003A81  
                         ?_UART1_Transmit_ISR 0001                                          _main 1008  
                                        fsr1h 003FE2                                          fsr2h 003FDA  
                                        indf2 003FDF                                          fsr1l 003FE1  
                                        fsr2l 003FD9                __end_of_recibir_periodo_Eusart 141C  
                                        prodh 003FF4                                          prodl 003FF3  
                                        start 001A                                  ?_inicie_cola 0003  
               ??_UART1_SetTxInterruptHandler 0005                                  ___param_bank 000000  
                             ?_FVR_Initialize 0001                          ??_UART1_Transmit_ISR 0001  
               __end_of_OSCILLATOR_Initialize 1D46                                         _ADACT 003EFE  
                                       _ADCAP 003EF5                                         ?_main 0001  
                                       _ADCLK 003EFF                                         _ADCNT 003EEB  
                                       _ADPCH 003EF1                                         _ADREF 003EFD  
                                       _ADRPT 003EEC                                         _U1P1H 003DED  
                                       _U1P2H 003DEF                                         _U1P3H 003DF1  
                                       _U1P1L 003DEC                                         _U1P2L 003DEE  
                                       _T2CON 003FAC                                         _U1P3L 003DF0  
                                       _T2HLT 003FAD                                         _T2TMR 003FAA  
                                       _U1UIR 003DF8                                         _U1RXB 003DE8  
                                       _T2RST 003FAF                                         _U1TXB 003DEA  
                                       i2l600 15B0                                         i2l610 1EAC  
                                       i2l604 1CA4                                         i2l613 1EA6  
                                       i2l607 1EAE                                         i2l650 1A0C  
                                       i2l590 1B88                                         i2l646 19D8  
                                       i2l593 1B8C                                         _OSCEN 0039DD  
                                       _TRISA 003FC2                                         _TRISB 003FC3  
                                       _TRISC 003FC4                                         _TRISD 003FC5  
                                       _TRISE 003FC6                       ??_ADCC_IsConversionDone 0003  
                       ?_ADCC_StartConversion 0001                                         pclath 003FFA  
                                       pclatu 003FFB                                         plusw2 003FDB  
                                       status 003FD8           __end_of_UART1_SetRxInterruptHandler 1E6C  
                 _UART1_SetRxInterruptHandler 1E62                   __end_of_Tm_Inicie_periodico 1B4A  
         fp__UART1_DefaultFramingErrorHandler 0000      __end_of_UART1_DefaultFramingErrorHandler 1EB0  
          ??_UART1_DefaultFramingErrorHandler 0001             ?_UART1_DefaultFramingErrorHandler 0001  
            _UART1_DefaultFramingErrorHandler 1EAE                               __initialization 1CA6  
                                __end_of_main 123E                        _dato_recibido_completo 1E38  
                 ??_UART1_DefaultErrorHandler 0001                             _Tm_Baje_periodico 1E26  
                     __end_of_TMR2_Initialize 1D88                   ?_INTERRUPT_InterruptManager 0001  
                      ??_iniciar_struct_usart 0005                            ?_Tm_Baje_periodico 0003  
                                      ??_main 0017                                 __activetblptr 000003  
                               _enviar_Eusart 1E8A                              _UART1_Initialize 17BE  
                         ??_Tm_Baje_periodico 0005                                        _ADACCH 003EE9  
                                      _ADACCL 003EE8                                        _ADACCU 003EEA  
                                      _ADACQH 003EF4                                        _ADACQL 003EF3  
                                      _ADCON0 003EF8                                        _ADCON1 003EF9  
                                      _ADCON2 003EFA                                        _ADCON3 003EFB  
                                      _ADERRH 003EE3                                        _ADERRL 003EE2  
                                      _ADLTHH 003EDF                                        _ADLTHL 003EDE  
                                      _ADRESH 003EF0                                        _ADRESL 003EEF  
                                      _ADPREH 003EF7                                        _ADPREL 003EF6  
                                      _ADSTAT 003EFC                                        _ADUTHH 003EE1  
                                      _ADUTHL 003EE0                                        _ANSELA 003A40  
                                      _ANSELB 003A50                                        _ANSELC 003A60  
                                      _ANSELD 003A70                                        _ANSELE 003A80  
                                      _RB1I2C 003A5A                                        _RB2I2C 003A5B  
                                      _RD0I2C 003A7A                                        _U1CON0 003DF2  
                                      _U1CON1 003DF3                                        _U1CON2 003DF4  
                                      _RD1I2C 003A7B                                        _RC3I2C 003A6A  
                                      _RC4I2C 003A6B                                        _U1BRGH 003DF6  
                                      _U1FIFO 003DF7                                        _U1BRGL 003DF5  
                                      _RC3PPS 003A13                                        _RC5PPS 003A15  
                                      _ODCONA 003A42                                        _ODCONB 003A52  
                                      _RC6PPS 003A16                                        _ODCONC 003A62  
                                      _ODCOND 003A72                                        _ODCONE 003A82  
                                      i2l2401 155A                                        i2l2323 1EA2  
                                      i2l2403 1572                                        i2l2405 158E  
                                      i2l2271 1C8C                                        i2l2407 15AC  
                                      i2l2273 1C8E                                        i2l2275 1C9E  
                                      i2l2277 1CA2                                        i2l2269 1C7A  
                                      i2l2381 1B6C                                        i2l2391 1502  
                                      i2l2383 1B6E                                        i2l2393 1512  
                                      i2l2385 1B7E                                        i2l2377 1B4A  
                                      i2l2395 1522                                        i2l2387 1B82  
                                      i2l2379 1B5A                                        i2l2571 19F4  
                                      i2l2563 199E                                        i2l2397 153A  
                                      i2l2389 14F2                                        i2l2565 19AE  
                                      i2l2399 154A                                        i2l2567 19BC  
                                      i2l2569 19E6                                        _INLVLA 003A44  
                                      _INLVLB 003A54                                        _INLVLC 003A64  
                                      _INLVLD 003A74                                        _INLVLE 003A84  
                                      _FVRCON 003EC1                                        _OSCFRQ 0039DF  
                           ??_actualize_valor 0007                         _UART1_SetErrorHandler 1E80  
       __end_of_ADCC_DischargeSampleCapacitor 1EA2                 _ADCC_DischargeSampleCapacitor 1E9A  
                  ??_ADCC_GetConversionResult 0005                              __end_of_cola_add 1718  
                            __end_of_cola_get 166A                     __end_of_Tm_Baje_periodico 1E38  
                          _bandera_ADC1_start 0025                            _bandera_ADC2_start 0024  
                                      ___wmul 1CD0                             _Tm_Hubo_periodico 1E14  
                                      clear_0 1CAC                                        clear_1 1CB8  
                          ?_Tm_Hubo_periodico 0003                                        isa$std 000001  
                    ?_TMR2_HasOverflowOccured 0001                               _ADCC_Initialize 1A9C  
                              ?_enviar_Eusart 000C                                _PMD_Initialize 1D46  
                                __mediumconst 0000                           ??_Tm_Hubo_periodico 0005  
                      ??_ADCC_StartConversion 0003   UART1_SetTxInterruptHandler@InterruptHandler 0003  
 UART1_SetRxInterruptHandler@InterruptHandler 0003          __end_of_UART1_SetOverrunErrorHandler 1E76  
                _UART1_SetOverrunErrorHandler 1E6C                     _UART1_DefaultErrorHandler 1EA2  
                           _SYSTEM_Initialize 1CFA                                    __accesstop 0060  
                     __end_of__initialization 1CCA                            ?_SYSTEM_Initialize 0001  
                               ___rparam_used 000001                     __end_of_Tm_Hubo_periodico 1E26  
                              __pcstackCOMRAM 0001                           ??_SYSTEM_Initialize 0005  
                           ??_SPI1_Initialize 0003                              ?_TMR2_Initialize 0001  
                      __end_of_PMD_Initialize 1D6A                            _spi1_configuration 1001  
                   _UART1_FramingErrorHandler 00AF                   ADCC_StartConversion@channel 0003  
                   __end_of_SYSTEM_Initialize 1D20                                    __pbssBANK0 0093  
               ?_UART1_SetOverrunErrorHandler 0003                        ?_UART1_SetErrorHandler 0003  
                                inicie_cola@c 0003                actualizar_recibido_Eusart@disp 0009  
                                     IVTBASEH 003FD6                                       IVTBASEL 003FD5  
                                     IVTBASEU 003FD7                              ??_FVR_Initialize 0003  
              ?_ADCC_DischargeSampleCapacitor 0001                                       ?___wmul 0003  
                     __end_of_ADCC_Initialize 1AF8               __end_of_TMR2_HasOverflowOccured 1C7A  
                                     _ADFLTRH 003EE7                                       _ADFLTRL 003EE6  
                                     _ADPREVH 003EEE                                       _ADPREVL 003EED  
                                     _ADSTPTH 003EE5                                       _ADSTPTL 003EE4  
                             ??_enviar_Eusart 000E                               ?_PMD_Initialize 0001  
                           _UART1_Receive_ISR 14F2                                    _cola_llena 1B8E  
                                  _cola_vacia 1BD0                                       _U1ERRIE 003DFA  
                                     _U1ERRIR 003DF9                            ?_UART1_Receive_ISR 0001  
                                     _U1RXPPS 003AE5                                       _OSCCON1 0039D9  
                                     _OSCCON3 0039DB                                       _SPI1CLK 003D1C  
                                     _SPI1RXB 003D10                                       _SPI1TXB 003D11  
                                     i2u61_40 1C9E                                       i2u61_41 1C9A  
                                     i2u70_40 158E                                       i2u70_41 158A  
                                     _OSCTUNE 0039DE                                       i2u71_48 1594  
                                     i2u64_40 1B5A                                       i2u71_49 15A8  
                                     i2u64_41 1B56                                       i2u65_40 1B7E  
                                     i2u65_41 1B7A                                       i2u66_40 1512  
                                     i2u90_40 19F4                                       i2u66_41 150E  
                                     i2u90_41 19F0                                       i2u68_40 154A  
                                     i2u67_48 1528                                       i2u91_48 19FA  
                                     i2u68_41 1546                                       i2u67_49 153A  
                                     i2u91_49 1A0C                                       i2u69_48 1560  
                                     i2u86_40 19AE                                       i2u69_49 1572  
                                     i2u86_41 19AA                                       i2u87_40 19BC  
                                     i2u87_41 19B8                                       i2u89_40 19E6  
                                     i2u88_48 19C2                                       i2u89_41 19E2  
                                     i2u88_49 19D4                                       _SLRCONA 003A43  
                                     _SLRCONB 003A53                                       _SLRCONC 003A63  
                                     _SLRCOND 003A73                                       _SLRCONE 003A83  
                                   ?_cola_add 0007                                     ?_cola_get 0007  
               __end_of_ADCC_IsConversionDone 1DFE                             _Tm_Procese_tiempo 141C  
                         ??_UART1_Receive_ISR 0001                       actualize_valor@valorspi 0005  
                          ?_Tm_Procese_tiempo 0003                       ?_dato_recibido_completo 0003  
                                  _inicie_SPI 1900                                       __Hparam 0000  
                         ??_Tm_Procese_tiempo 0005                                       __Lparam 0000  
                         _bandera_ADC1_finish 0023                      __end_of_UART1_Initialize 1862  
                         _bandera_ADC2_finish 0022                     __end_of_UART1_Receive_ISR 15B2  
                                __psmallconst 1000                                       __pcinit 1CA6  
                                     __ramtop 1000                                       __ptext0 1008  
                                     __ptext1 123E                                       __ptext2 1C10  
                                     __ptext3 1900                                       __ptext4 1A1A  
                                     __ptext5 1E8A                                       __ptext6 1E38  
                                     __ptext7 15B2                                       __ptext8 1BD0  
                                     __ptext9 166A                         _OSCILLATOR_Initialize 1D20  
                                   _T2CONbits 003FAC                               _actualize_valor 1D88  
                    ??_PIN_MANAGER_Initialize 0003                                     _T2HLTbits 003FAD  
                   __end_of_Tm_Procese_tiempo 14F2                                    ??_cola_add 000A  
                                  ??_cola_get 0009                                       main@spi 0060  
                        end_of_initialization 1CCA                                     _T2RSTbits 003FAF  
         __end_of_UART1_SetTxInterruptHandler 1E62                   _UART1_SetTxInterruptHandler 1E58  
              __end_of_dato_recibido_completo 1E48                ??_UART1_SetOverrunErrorHandler 0005  
                                   _SPI1TCNTL 003D12                                       postdec1 003FE5  
                                     postdec2 003FDD                                       postinc0 003FEE  
                                     postinc1 003FE6                                       postinc2 003FDE  
                            ?_ADCC_Initialize 0001                           _UART1_RxDataHandler 1C7A  
                          actualize_valor@spi 0003            __end_of_actualizar_recibido_Eusart 1900  
                  _actualizar_recibido_Eusart 1862                                   ?_cola_llena 0003  
                                 ?_cola_vacia 0003                                     _TRISCbits 003FC4  
                    ??_recibir_periodo_Eusart 0005                          ?_UART1_RxDataHandler 0001  
                             _SPI1_Initialize 1DA2                                   ?_inicie_SPI 0003  
                __end_of_INTERRUPT_Initialize 1EAC                       __end_of_actualize_valor 1DA2  
                              __end_of___wmul 1CFA                        ?_OSCILLATOR_Initialize 0001  
                        Tm_Procese_tiempo@ctp 0003                     ?_ADCC_GetConversionResult 0003  
                         start_initialization 1CA6                       ??_UART1_SetErrorHandler 0005  
                       ??_UART1_RxDataHandler 0001                                    ivt0x8_base 0008  
                               _uart1RxBuffer 009B                                 _uart1TxBuffer 00A3  
                               inicie_SPI@spi 0003                                 ??_inicie_cola 0005  
                      Tm_Inicie_periodico@ctp 0013                              ??_PMD_Initialize 0003  
                                    ??___wmul 0007                                   __pbssCOMRAM 001A  
                          _UART1_ErrorHandler 00AB                                 __pcstackBANK0 0060  
                     __end_of_SPI1_Initialize 1DBC                      _UART1_RxInterruptHandler 0020  
                             _primerresultado 001C                  fp__UART1_DefaultErrorHandler 0000  
                ?_UART1_SetRxInterruptHandler 0003                        _PIN_MANAGER_Initialize 1718  
                           ?_UART1_Initialize 0001          __end_of_UART1_SetFramingErrorHandler 1E80  
                _UART1_SetFramingErrorHandler 1E76                            ??_UART1_Initialize 0005  
                         __end_of_inicie_cola 1C4E                              ?_actualize_valor 0003  
                            _uart1RxLastError 0026                  ??_INTERRUPT_InterruptManager 0001  
                                 __smallconst 1000                         __end_of_enviar_Eusart 1E92  
         fp__UART1_DefaultOverrunErrorHandler 0000      __end_of_UART1_DefaultOverrunErrorHandler 1EAE  
          ??_UART1_DefaultOverrunErrorHandler 0001             ?_UART1_DefaultOverrunErrorHandler 0001  
            _UART1_DefaultOverrunErrorHandler 1EAC                  ??_actualizar_recibido_Eusart 000B  
                         _Tm_Inicie_periodico 1AF8                                      _T2CLKCON 003FAE  
                                 _U1ERRIRbits 003DF9                          _INTERRUPT_Initialize 1EA8  
                     _TMR2_HasOverflowOccured 1C4E                         _ADCC_IsConversionDone 1DE8  
                  dato_recibido_completo@disp 0003                                ___wmul@product 0007  
       UART1_SetErrorHandler@interruptHandler 0003                                      _LATDbits 003FBD  
                                    _PIE3bits 003993                                  _SPI1CON0bits 003D14  
               ??_UART1_SetRxInterruptHandler 0005                              _segundoresultado 001A  
                                    _PIR2bits 0039A2                                      _SPI1BAUD 003D19  
                                    _PIR3bits 0039A3                                      _PIR4bits 0039A4  
                                    _SPI1CON0 003D14                                      _SPI1CON1 003D15  
                                    _SPI1CON2 003D16                          ?_Tm_Inicie_periodico 0013  
                                   cola_add@c 0007                    __end_of_UART1_Transmit_ISR 1B8E  
                                   cola_get@c 0007                        _recibir_periodo_Eusart 123E  
               ?_UART1_SetFramingErrorHandler 0003                   ?_actualizar_recibido_Eusart 0009  
                                ??_cola_llena 0005                                    _ADCON0bits 003EF8  
                                  _ADCON1bits 003EF9                                  ??_cola_vacia 0005  
                                  _ADCON2bits 003EFA                                    _ADCON3bits 003EFB  
                           ___wmul@multiplier 0003                                     main@timer 006C  
                            ?_SPI1_Initialize 0001                                   _INTCON0bits 003FD2  
                       ?_INTERRUPT_Initialize 0001                          fp__UART1_Receive_ISR 0000  
                      _uart1TxBufferRemaining 002A                             ??_TMR2_Initialize 0003  
                __end_of_iniciar_struct_usart 1A9C                                  _uart1RxCount 0027  
                                ??_inicie_SPI 0005                                    _ADSTATbits 003EFC  
                          __end_of_cola_llena 1BD0                                   _inicie_cola 1C10  
                          __end_of_cola_vacia 1C10                                      __Hrparam 0000  
            __end_of_ADCC_GetConversionResult 1E14                                      __Lrparam 0000  
                       ??_Tm_Inicie_periodico 0017                       ??_OSCILLATOR_Initialize 0003  
                  Tm_Inicie_periodico@periodo 0015                      iniciar_struct_usart@disp 0003  
                                    __pivt0x8 0008                     ??_TMR2_HasOverflowOccured 0003  
                          __end_of_inicie_SPI 1992                                      __ptext10 1B8E  
                                    __ptext11 1D88                                      __ptext20 1C4E  
                                    __ptext12 1862                                      __ptext21 1CFA  
                                    __ptext13 1CD0                                      __ptext30 1D46  
                                    __ptext22 17BE                                      __ptext14 1DBC  
                                    __ptext31 1718                                      __ptext23 1E58  
                                    __ptext15 1DD2                                      __ptext40 1992  
                                    __ptext32 1D20                                      __ptext24 1E62  
                                    __ptext16 141C                                      _cola_add 166A  
                                    __ptext41 1B4A                                      __ptext33 1EA8  
                                    __ptext25 1E6C                                      __ptext17 1AF8  
                                    __ptext42 14F2                                      __ptext34 1E92  
                                    __ptext26 1E76                                      __ptext18 1E14  
                                    __ptext43 1EAC                                      __ptext35 1A9C  
                                    __ptext27 1E80                                      __ptext19 1E26  
                                    __ptext44 1EAE                                      __ptext36 1E48  
                                    __ptext28 1D6A                                      __ptext45 1EA2  
                                    __ptext37 1DE8                                      __ptext29 1DA2  
                                    __ptext46 1C7A                                      __ptext38 1DFE  
                                    __ptext47 0000                                      __ptext39 1E9A  
                                    _cola_get 15B2                        ?_ADCC_IsConversionDone 0001  
               __end_of_UART1_SetErrorHandler 1E8A                          Tm_Baje_periodico@ctp 0003  
                   _UART1_OverrunErrorHandler 00AD  UART1_SetOverrunErrorHandler@interruptHandler 0003  
                                    isa$xinst 000000                  __end_of_ADCC_StartConversion 1E58  
                  ?_UART1_DefaultErrorHandler 0001            __end_of_INTERRUPT_InterruptManager 1A1A  
                  _INTERRUPT_InterruptManager 1992                                      main@cola 0073  
                                    main@disp 0088                             _UART1_is_rx_ready 1DD2  
                       fp__UART1_Transmit_ISR 0000                             _UART1_is_tx_ready 1DBC  
                          ?_UART1_is_rx_ready 0001                ??_UART1_SetFramingErrorHandler 0005  
                          ?_UART1_is_tx_ready 0001                   __end_of_UART1_RxDataHandler 1CA6  
                                 _uart1RxHead 0029                                   _uart1TxHead 002C  
                                 _uart1RxTail 0028                                   _uart1TxTail 002B  
                                  _FVRCONbits 003EC1                        ??_INTERRUPT_Initialize 0003  
                        Tm_Hubo_periodico@ctp 0003                           ??_UART1_is_rx_ready 0003  
                    ??_dato_recibido_completo 0005                           ??_UART1_is_tx_ready 0003  
                                    intlevel2 0000                       ?_PIN_MANAGER_Initialize 0001  
                                cola_add@dato 0009                           _uart1RxStatusBuffer 0093  
                                  _SPI1SDIPPS 003ADF                                    _SPI1SCKPPS 003ADE  
                   __end_of_UART1_is_rx_ready 1DE8  UART1_SetFramingErrorHandler@interruptHandler 0003  
                   __end_of_UART1_is_tx_ready 1DD2                      _ADCC_GetConversionResult 1DFE  
                                cola_get@temp 000B             __end_of_UART1_DefaultErrorHandler 1EA8  
                              _FVR_Initialize 1E92                          _iniciar_struct_usart 1A1A  
                    _UART1_TxInterruptHandler 001E                __end_of_PIN_MANAGER_Initialize 17BE  
                           ??_ADCC_Initialize 0003                                   cola_llena@c 0003  
                                 cola_vacia@c 0003                  ?_UART1_SetTxInterruptHandler 0003  
                  __end_of_spi1_configuration 1006                       ?_recibir_periodo_Eusart 0003  
