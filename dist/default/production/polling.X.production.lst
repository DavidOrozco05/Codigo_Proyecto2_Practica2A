

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Mon Apr 10 19:46:52 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F46K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1
    53                           	psect	text41,global,reloc=2,class=CODE,delta=1
    54                           	psect	text42,global,reloc=2,class=CODE,delta=1
    55                           	psect	text43,global,reloc=2,class=CODE,delta=1
    56                           	psect	text44,global,reloc=2,class=CODE,delta=1
    57                           	psect	text45,global,reloc=2,class=CODE,delta=1
    58                           	psect	text46,global,reloc=2,class=CODE,delta=1
    59                           	psect	text47,global,reloc=2,class=CODE,delta=1
    60                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
    61                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    64                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    65                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    66  0000                     
    67                           ; Generated 06/04/2022 GMT
    68                           ; 
    69                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    70                           ; All rights reserved.
    71                           ; 
    72                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    73                           ; 
    74                           ; Redistribution and use in source and binary forms, with or without modification, are
    75                           ; permitted provided that the following conditions are met:
    76                           ; 
    77                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    78                           ;        conditions and the following disclaimer.
    79                           ; 
    80                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    81                           ;        of conditions and the following disclaimer in the documentation and/or other
    82                           ;        materials provided with the distribution. Publication is not required when
    83                           ;        this file is used in an embedded application.
    84                           ; 
    85                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    86                           ;        software without specific prior written permission.
    87                           ; 
    88                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    89                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    90                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    91                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    92                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    93                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    94                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    95                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    96                           ; 
    97                           ; 
    98                           ; Code-generator required, PIC18F46K42 Definitions
    99                           ; 
   100                           ; SFR Addresses
   101  0000                     
   102 ;; Function _UART1_DefaultFramingErrorHandler is unused but had its address taken
   103  0000                     
   104 ;; Function _UART1_DefaultOverrunErrorHandler is unused but had its address taken
   105  0000                     
   106 ;; Function _UART1_DefaultErrorHandler is unused but had its address taken
   107  0000                     
   108                           	psect	smallconst
   109  001000                     __psmallconst:
   110                           	callstack 0
   111  001000  00                 	db	0
   112  001001                     _spi1_configuration:
   113                           	callstack 0
   114  001001  83                 	db	131
   115  001002  40                 	db	64
   116  001003  02                 	db	2
   117  001004  20                 	db	32
   118  001005  00                 	db	0
   119  001006                     __end_of_spi1_configuration:
   120                           	callstack 0
   121  0000                     _ADERRL	set	16098
   122  0000                     _ADERRH	set	16099
   123  0000                     _ADPREVL	set	16109
   124  0000                     _ADPREVH	set	16110
   125  0000                     _ADFLTRL	set	16102
   126  0000                     _ADFLTRH	set	16103
   127  0000                     _ADACCL	set	16104
   128  0000                     _ADACCH	set	16105
   129  0000                     _ADCNT	set	16107
   130  0000                     _ADRESL	set	16111
   131  0000                     _ADRESH	set	16112
   132  0000                     _ADCON0	set	16120
   133  0000                     _ADCON1	set	16121
   134  0000                     _ADPREH	set	16119
   135  0000                     _ADPREL	set	16118
   136  0000                     _ADCAP	set	16117
   137  0000                     _ADACQH	set	16116
   138  0000                     _ADPCH	set	16113
   139  0000                     _ADRPT	set	16108
   140  0000                     _ADACCU	set	16106
   141  0000                     _ADSTPTH	set	16101
   142  0000                     _ADSTPTL	set	16100
   143  0000                     _ADUTHH	set	16097
   144  0000                     _ADUTHL	set	16096
   145  0000                     _ADLTHH	set	16095
   146  0000                     _T2CON	set	16300
   147  0000                     _TRISD	set	16325
   148  0000                     _TRISC	set	16324
   149  0000                     _TRISB	set	16323
   150  0000                     _LATC	set	16316
   151  0000                     _LATB	set	16315
   152  0000                     _OSCTUNE	set	14814
   153  0000                     _OSCFRQ	set	14815
   154  001006  00                 	db	0	; dummy byte at the end
   155  0000                     
   156                           	psect	nvCOMRAM
   157  000015                     __pnvCOMRAM:
   158                           	callstack 0
   159  000015                     _UART1_ErrorHandler:
   160                           	callstack 0
   161  000015                     	ds	2
   162  000017                     _UART1_OverrunErrorHandler:
   163                           	callstack 0
   164  000017                     	ds	2
   165  000019                     _UART1_FramingErrorHandler:
   166                           	callstack 0
   167  000019                     	ds	2
   168  00001B                     _UART1_UARTInterruptHandler:
   169                           	callstack 0
   170  00001B                     	ds	2
   171  00001D                     _UART1_FramingErrorInterruptHandler:
   172                           	callstack 0
   173  00001D                     	ds	2
   174  0000                     _SPI1CON0bits	set	15636
   175  0000                     _U1UIRbits	set	15864
   176  0000                     _U1ERRIRbits	set	15865
   177  0000                     _U1CON0bits	set	15858
   178  0000                     _FVRCONbits	set	16065
   179  0000                     _ADCON1bits	set	16121
   180  0000                     _ADSTATbits	set	16124
   181  0000                     _ADCON2bits	set	16122
   182  0000                     _ADCON3bits	set	16123
   183  0000                     _ADCON0bits	set	16120
   184  0000                     _LATBbits	set	16315
   185  0000                     _LATEbits	set	16318
   186  0000                     _TRISCbits	set	16324
   187  0000                     _PR2	set	16299
   188  0000                     _TMR2	set	16298
   189  0000                     _T2CONbits	set	16300
   190  0000                     _T2RSTbits	set	16303
   191  0000                     _T2HLTbits	set	16301
   192  0000                     _PIE3bits	set	14739
   193  0000                     _PIR4bits	set	14756
   194  0000                     _PMD0	set	14784
   195  0000                     _OSCCON1	set	14809
   196  0000                     _OSCCON3	set	14811
   197  0000                     _OSCEN	set	14813
   198  0000                     _RC3PPS	set	14867
   199  0000                     _ANSELA	set	14912
   200  0000                     _ANSELB	set	14928
   201  0000                     _ANSELC	set	14944
   202  0000                     _ANSELD	set	14960
   203  0000                     _LATA	set	16314
   204  0000                     _LATD	set	16317
   205  0000                     _LATE	set	16318
   206  0000                     _PMD7	set	14791
   207  0000                     _PMD6	set	14790
   208  0000                     _PMD5	set	14789
   209  0000                     _PMD4	set	14788
   210  0000                     _PMD3	set	14787
   211  0000                     _PMD2	set	14786
   212  0000                     _PMD1	set	14785
   213  0000                     _TRISA	set	16322
   214  0000                     _TRISE	set	16326
   215  0000                     _INTCON0bits	set	16338
   216  0000                     _INLVLD	set	14964
   217  0000                     _SLRCOND	set	14963
   218  0000                     _ODCOND	set	14962
   219  0000                     _RD0I2C	set	14970
   220  0000                     _WPUD	set	14961
   221  0000                     _ANSELE	set	14976
   222  0000                     _INLVLC	set	14948
   223  0000                     _SLRCONC	set	14947
   224  0000                     _ODCONC	set	14946
   225  0000                     _RC3I2C	set	14954
   226  0000                     _WPUC	set	14945
   227  0000                     _INLVLB	set	14932
   228  0000                     _SLRCONB	set	14931
   229  0000                     _ODCONB	set	14930
   230  0000                     _RB1I2C	set	14938
   231  0000                     _WPUB	set	14929
   232  0000                     _SPI1SCKPPS	set	15070
   233  0000                     _INLVLE	set	14980
   234  0000                     _SLRCONE	set	14979
   235  0000                     _ODCONE	set	14978
   236  0000                     _WPUE	set	14977
   237  0000                     _INLVLA	set	14916
   238  0000                     _SLRCONA	set	14915
   239  0000                     _ODCONA	set	14914
   240  0000                     _WPUA	set	14913
   241  0000                     _RB2I2C	set	14939
   242  0000                     _RC4I2C	set	14955
   243  0000                     _RD1I2C	set	14971
   244  0000                     _SPI1SDIPPS	set	15071
   245  0000                     _U1RXPPS	set	15077
   246  0000                     _RC5PPS	set	14869
   247  0000                     _RC6PPS	set	14870
   248  0000                     _SPI1RXB	set	15632
   249  0000                     _SPI1TXB	set	15633
   250  0000                     _SPI1TCNTL	set	15634
   251  0000                     _SPI1CON0	set	15636
   252  0000                     _U1RXB	set	15848
   253  0000                     _U1P1L	set	15852
   254  0000                     _FVRCON	set	16065
   255  0000                     _ADLTHL	set	16094
   256  0000                     _T2TMR	set	16298
   257  0000                     _T2PR	set	16299
   258  0000                     _T2HLT	set	16301
   259  0000                     _T2CLKCON	set	16302
   260  0000                     _T2RST	set	16303
   261  0000                     _ADACQL	set	16115
   262  0000                     _ADCLK	set	16127
   263  0000                     _ADACT	set	16126
   264  0000                     _ADREF	set	16125
   265  0000                     _ADSTAT	set	16124
   266  0000                     _ADCON3	set	16123
   267  0000                     _ADCON2	set	16122
   268  0000                     _PIR2bits	set	14754
   269  0000                     _PIR3bits	set	14755
   270  0000                     _U1ERRIE	set	15866
   271  0000                     _U1ERRIR	set	15865
   272  0000                     _U1UIR	set	15864
   273  0000                     _U1FIFO	set	15863
   274  0000                     _U1BRGH	set	15862
   275  0000                     _U1BRGL	set	15861
   276  0000                     _U1CON2	set	15860
   277  0000                     _U1CON1	set	15859
   278  0000                     _U1CON0	set	15858
   279  0000                     _U1P3H	set	15857
   280  0000                     _U1P3L	set	15856
   281  0000                     _U1P2H	set	15855
   282  0000                     _U1P2L	set	15854
   283  0000                     _U1P1H	set	15853
   284  0000                     _U1TXB	set	15850
   285  0000                     _SPI1STATUSbits	set	15639
   286  0000                     _SPI1BAUD	set	15641
   287  0000                     _SPI1CLK	set	15644
   288  0000                     _SPI1CON2	set	15638
   289  0000                     _SPI1CON1	set	15637
   290                           
   291                           ; #config settings
   292                           
   293                           	psect	cinit
   294  001DFA                     __pcinit:
   295                           	callstack 0
   296  001DFA                     start_initialization:
   297                           	callstack 0
   298  001DFA                     __initialization:
   299                           	callstack 0
   300                           
   301                           ; Clear objects allocated to BANK0 (10 bytes)
   302  001DFA  EE00  F0AA         	lfsr	0,__pbssBANK0
   303  001DFE  0E0A               	movlw	10
   304  001E00                     clear_0:
   305  001E00  6AEE               	clrf	postinc0,c
   306  001E02  06E8               	decf	wreg,f,c
   307  001E04  E1FD               	bnz	clear_0
   308                           
   309                           ; Clear objects allocated to COMRAM (3 bytes)
   310  001E06  6A21               	clrf	(__pbssCOMRAM+2)& (0+255),c
   311  001E08  6A20               	clrf	(__pbssCOMRAM+1)& (0+255),c
   312  001E0A  6A1F               	clrf	__pbssCOMRAM& (0+255),c
   313                           
   314                           ;
   315                           ; Setup IVTBASE
   316                           ;
   317  001E0C  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   318  001E0E  6ED5               	movwf	213,c
   319  001E10  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   320  001E12  6ED6               	movwf	214,c
   321  001E14  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   322  001E16  6ED7               	movwf	215,c
   323  001E18                     end_of_initialization:
   324                           	callstack 0
   325  001E18                     __end_of__initialization:
   326                           	callstack 0
   327  001E18  0100               	movlb	0
   328  001E1A  EF04  F008         	goto	_main	;jump to C main() function
   329                           
   330                           	psect	bssCOMRAM
   331  00001F                     __pbssCOMRAM:
   332                           	callstack 0
   333  00001F                     _segundobyte:
   334                           	callstack 0
   335  00001F                     	ds	1
   336  000020                     _primerbyte:
   337                           	callstack 0
   338  000020                     	ds	1
   339  000021                     _uart1RxLastError:
   340                           	callstack 0
   341  000021                     	ds	1
   342                           
   343                           	psect	bssBANK0
   344  0000AA                     __pbssBANK0:
   345                           	callstack 0
   346  0000AA                     _data:
   347                           	callstack 0
   348  0000AA                     	ds	2
   349  0000AC                     _ADC2:
   350                           	callstack 0
   351  0000AC                     	ds	2
   352  0000AE                     _ADC1:
   353                           	callstack 0
   354  0000AE                     	ds	2
   355  0000B0                     _f_send2:
   356                           	callstack 0
   357  0000B0                     	ds	1
   358  0000B1                     _f_send1:
   359                           	callstack 0
   360  0000B1                     	ds	1
   361  0000B2                     _conv2:
   362                           	callstack 0
   363  0000B2                     	ds	1
   364  0000B3                     _conv1:
   365                           	callstack 0
   366  0000B3                     	ds	1
   367                           
   368                           	psect	cstackBANK0
   369  000060                     __pcstackBANK0:
   370                           	callstack 0
   371  000060                     main@colarx:
   372                           	callstack 0
   373                           
   374                           ; 21 bytes @ 0x0
   375  000060                     	ds	21
   376  000075                     main@time_out:
   377                           	callstack 0
   378                           
   379                           ; 7 bytes @ 0x15
   380  000075                     	ds	7
   381  00007C                     main@cola:
   382                           	callstack 0
   383                           
   384                           ; 21 bytes @ 0x1C
   385  00007C                     	ds	21
   386  000091                     main@disp:
   387                           	callstack 0
   388                           
   389                           ; 11 bytes @ 0x31
   390  000091                     	ds	11
   391  00009C                     main@spi:
   392                           	callstack 0
   393                           
   394                           ; 14 bytes @ 0x3C
   395  00009C                     	ds	14
   396                           
   397                           	psect	cstackCOMRAM
   398  000001                     __pcstackCOMRAM:
   399                           	callstack 0
   400  000001                     ??_INTERRUPT_InterruptManager:
   401  000001                     
   402                           ; 1 bytes @ 0x0
   403  000001                     	ds	2
   404  000003                     ?_cola_vacia:
   405                           	callstack 0
   406  000003                     ?_cola_llena:
   407                           	callstack 0
   408  000003                     ?_ADCC_GetConversionResult:
   409                           	callstack 0
   410  000003                     ?___wmul:
   411                           	callstack 0
   412  000003                     TMR2_HasOverflowOccured@status:
   413                           	callstack 0
   414  000003                     ADCC_StartConversion@channel:
   415                           	callstack 0
   416  000003                     _UART1_is_tx_ready$1114:
   417                           	callstack 0
   418  000003                     UART1_Write@txData:
   419                           	callstack 0
   420  000003                     SPI1_WriteByte@byte:
   421                           	callstack 0
   422  000003                     UART1_SetFramingErrorHandler@interruptHandler:
   423                           	callstack 0
   424  000003                     UART1_SetOverrunErrorHandler@interruptHandler:
   425                           	callstack 0
   426  000003                     UART1_SetErrorHandler@interruptHandler:
   427                           	callstack 0
   428  000003                     UART1_SetFramingErrorInterruptHandler@InterruptHandler:
   429                           	callstack 0
   430  000003                     UART1_SetUartInterruptHandler@InterruptHandler:
   431                           	callstack 0
   432  000003                     inicie_cola@c:
   433                           	callstack 0
   434  000003                     cola_llena@c:
   435                           	callstack 0
   436  000003                     cola_vacia@c:
   437                           	callstack 0
   438  000003                     inicie_SPI@spi:
   439                           	callstack 0
   440  000003                     selec_channel@spi:
   441                           	callstack 0
   442  000003                     selec_gain@spi:
   443                           	callstack 0
   444  000003                     selec_imp@spi:
   445                           	callstack 0
   446  000003                     actualize_valor@spi:
   447                           	callstack 0
   448  000003                     iniciar_struct_usart@disp:
   449                           	callstack 0
   450  000003                     dato_recibido_completo@disp:
   451                           	callstack 0
   452  000003                     Tm_Procese_tiempo@ctp:
   453                           	callstack 0
   454  000003                     Tm_Hubo_periodico@ctp:
   455                           	callstack 0
   456  000003                     Tm_Baje_periodico@ctp:
   457                           	callstack 0
   458  000003                     ___wmul@multiplier:
   459                           	callstack 0
   460                           
   461                           ; 2 bytes @ 0x2
   462  000003                     	ds	1
   463  000004                     envioSPI@spi:
   464                           	callstack 0
   465  000004                     recibir_periodo_Eusart@disp:
   466                           	callstack 0
   467                           
   468                           ; 2 bytes @ 0x3
   469  000004                     	ds	1
   470  000005                     ??_Tm_Procese_tiempo:
   471  000005                     ??_ADCC_GetConversionResult:
   472  000005                     selec_channel@canalspi:
   473                           	callstack 0
   474  000005                     selec_gain@gananciaspi:
   475                           	callstack 0
   476  000005                     selec_imp@impedanciaspi:
   477                           	callstack 0
   478  000005                     actualize_valor@valorspi:
   479                           	callstack 0
   480  000005                     ___wmul@multiplicand:
   481                           	callstack 0
   482                           
   483                           ; 2 bytes @ 0x4
   484  000005                     	ds	1
   485  000006                     ??_envioSPI:
   486  000006                     recibir_periodo_Eusart@dato:
   487                           	callstack 0
   488                           
   489                           ; 1 bytes @ 0x5
   490  000006                     	ds	1
   491  000007                     ??_recibir_periodo_Eusart:
   492  000007                     cola_add@c:
   493                           	callstack 0
   494  000007                     cola_get@c:
   495                           	callstack 0
   496  000007                     ___wmul@product:
   497                           	callstack 0
   498                           
   499                           ; 2 bytes @ 0x6
   500  000007                     	ds	2
   501  000009                     ??_cola_get:
   502  000009                     ?_actualizar_recibido_Eusart:
   503                           	callstack 0
   504  000009                     cola_add@dato:
   505                           	callstack 0
   506  000009                     actualizar_recibido_Eusart@disp:
   507                           	callstack 0
   508                           
   509                           ; 2 bytes @ 0x8
   510  000009                     	ds	1
   511  00000A                     ??_cola_add:
   512                           
   513                           ; 1 bytes @ 0x9
   514  00000A                     	ds	1
   515  00000B                     ??_actualizar_recibido_Eusart:
   516  00000B                     cola_get@temp:
   517                           	callstack 0
   518                           
   519                           ; 1 bytes @ 0xA
   520  00000B                     	ds	1
   521  00000C                     enviar_Eusart@disp:
   522                           	callstack 0
   523                           
   524                           ; 2 bytes @ 0xB
   525  00000C                     	ds	2
   526  00000E                     
   527                           ; 1 bytes @ 0xD
   528  00000E                     	ds	1
   529  00000F                     Tm_Inicie_periodico@ctp:
   530                           	callstack 0
   531                           
   532                           ; 2 bytes @ 0xE
   533  00000F                     	ds	2
   534  000011                     Tm_Inicie_periodico@periodo:
   535                           	callstack 0
   536                           
   537                           ; 2 bytes @ 0x10
   538  000011                     	ds	2
   539  000013                     ??_main:
   540                           
   541                           ; 1 bytes @ 0x12
   542  000013                     	ds	2
   543                           
   544 ;;
   545 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   546 ;;
   547 ;; *************** function _main *****************
   548 ;; Defined at:
   549 ;;		line 61 in file "main.c"
   550 ;; Parameters:    Size  Location     Type
   551 ;;		None
   552 ;; Auto vars:     Size  Location     Type
   553 ;;  cola           21   28[BANK0 ] struct eCola
   554 ;;  colarx         21    0[BANK0 ] struct eCola
   555 ;;  spi            14   60[BANK0 ] struct spi
   556 ;;  disp           11   49[BANK0 ] struct usart
   557 ;;  time_out        7   21[BANK0 ] struct Tm_Periodico
   558 ;; Return value:  Size  Location     Type
   559 ;;                  1    wreg      void 
   560 ;; Registers used:
   561 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   562 ;; Tracked objects:
   563 ;;		On entry : 0/0
   564 ;;		On exit  : 0/0
   565 ;;		Unchanged: 0/0
   566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   568 ;;      Locals:         0      74       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   569 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   570 ;;      Totals:         2      74       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   571 ;;Total ram usage:       76 bytes
   572 ;; Hardware stack levels required when called: 5
   573 ;; This function calls:
   574 ;;		_ADCC_GetConversionResult
   575 ;;		_ADCC_Initialize
   576 ;;		_ADCC_IsConversionDone
   577 ;;		_ADCC_StartConversion
   578 ;;		_INTERRUPT_Initialize
   579 ;;		_SPI1_Initialize
   580 ;;		_SYSTEM_Initialize
   581 ;;		_TMR2_HasOverflowOccured
   582 ;;		_TMR2_Initialize
   583 ;;		_Tm_Baje_periodico
   584 ;;		_Tm_Hubo_periodico
   585 ;;		_Tm_Inicie_periodico
   586 ;;		_Tm_Procese_tiempo
   587 ;;		_UART1_Initialize
   588 ;;		_UART1_is_rx_ready
   589 ;;		_UART1_is_tx_ready
   590 ;;		_actualizar_recibido_Eusart
   591 ;;		_actualize_valor
   592 ;;		_cola_add
   593 ;;		_cola_get
   594 ;;		_cola_vacia
   595 ;;		_dato_recibido_completo
   596 ;;		_enviar_Eusart
   597 ;;		_envioSPI
   598 ;;		_iniciar_struct_usart
   599 ;;		_inicie_SPI
   600 ;;		_inicie_cola
   601 ;;		_recibir_periodo_Eusart
   602 ;;		_selec_channel
   603 ;;		_selec_gain
   604 ;;		_selec_imp
   605 ;; This function is called by:
   606 ;;		Startup code after reset
   607 ;; This function uses a non-reentrant model
   608 ;;
   609                           
   610                           	psect	text0
   611  001008                     __ptext0:
   612                           	callstack 0
   613  001008                     _main:
   614                           	callstack 26
   615  001008                     
   616                           ;main.c: 63:     SYSTEM_Initialize();
   617  001008  ECEA  F00E         	call	_SYSTEM_Initialize	;wreg free
   618  00100C                     
   619                           ;main.c: 64:     (INTCON0bits.GIE = 0);
   620  00100C  9ED2               	bcf	210,7,c	;volatile
   621  00100E                     
   622                           ;main.c: 66:     TMR2_Initialize();
   623  00100E  EC21  F00F         	call	_TMR2_Initialize	;wreg free
   624  001012                     
   625                           ;main.c: 67:     ADCC_Initialize();
   626  001012  ECF2  F00D         	call	_ADCC_Initialize	;wreg free
   627  001016                     
   628                           ;main.c: 68:     SPI1_Initialize();
   629  001016  EC4A  F00F         	call	_SPI1_Initialize	;wreg free
   630  00101A                     
   631                           ;main.c: 69:     UART1_Initialize();
   632  00101A  EC26  F00D         	call	_UART1_Initialize	;wreg free
   633  00101E                     
   634                           ;main.c: 70:     INTERRUPT_Initialize();
   635  00101E  ECF7  F00F         	call	_INTERRUPT_Initialize	;wreg free
   636  001022                     
   637                           ;main.c: 71:     Tm_Periodico time_out;;main.c: 72:     Tm_Inicie_periodico(&time_out,10
      +                          10);
   638  001022  0E75               	movlw	low main@time_out
   639  001024  6E0F               	movwf	Tm_Inicie_periodico@ctp^0,c
   640  001026  0E00               	movlw	high main@time_out
   641  001028  6E10               	movwf	(Tm_Inicie_periodico@ctp+1)^0,c
   642  00102A  0E03               	movlw	3
   643  00102C  6E12               	movwf	(Tm_Inicie_periodico@periodo+1)^0,c
   644  00102E  0EF2               	movlw	242
   645  001030  6E11               	movwf	Tm_Inicie_periodico@periodo^0,c
   646  001032  EC20  F00E         	call	_Tm_Inicie_periodico	;wreg free
   647  001036                     
   648                           ;main.c: 73:     eCola cola,colarx;;main.c: 74:     inicie_cola(&cola);
   649  001036  0E7C               	movlw	low main@cola
   650  001038  6E03               	movwf	inicie_cola@c^0,c
   651  00103A  0E00               	movlw	high main@cola
   652  00103C  6E04               	movwf	(inicie_cola@c+1)^0,c
   653  00103E  EC8A  F00E         	call	_inicie_cola	;wreg free
   654  001042                     
   655                           ;main.c: 75:     inicie_cola(&colarx);
   656  001042  0E60               	movlw	low main@colarx
   657  001044  6E03               	movwf	inicie_cola@c^0,c
   658  001046  0E00               	movlw	high main@colarx
   659  001048  6E04               	movwf	(inicie_cola@c+1)^0,c
   660  00104A  EC8A  F00E         	call	_inicie_cola	;wreg free
   661  00104E                     
   662                           ;main.c: 76:     spi spi;;main.c: 77:     inicie_SPI(&spi);
   663  00104E  0E9C               	movlw	low main@spi
   664  001050  6E03               	movwf	inicie_SPI@spi^0,c
   665  001052  0E00               	movlw	high main@spi
   666  001054  6E04               	movwf	(inicie_SPI@spi+1)^0,c
   667  001056  EC90  F00C         	call	_inicie_SPI	;wreg free
   668  00105A                     
   669                           ;main.c: 78:     selec_channel(&spi,0x00);
   670  00105A  0E9C               	movlw	low main@spi
   671  00105C  6E03               	movwf	selec_channel@spi^0,c
   672  00105E  0E00               	movlw	high main@spi
   673  001060  6E04               	movwf	(selec_channel@spi+1)^0,c
   674  001062  0E00               	movlw	0
   675  001064  6E05               	movwf	selec_channel@canalspi^0,c
   676  001066  EC98  F00F         	call	_selec_channel	;wreg free
   677  00106A                     
   678                           ;main.c: 79:     selec_gain(&spi,0x01);
   679  00106A  0E9C               	movlw	low main@spi
   680  00106C  6E03               	movwf	selec_gain@spi^0,c
   681  00106E  0E00               	movlw	high main@spi
   682  001070  6E04               	movwf	(selec_gain@spi+1)^0,c
   683  001072  0E01               	movlw	1
   684  001074  6E05               	movwf	selec_gain@gananciaspi^0,c
   685  001076  EC8E  F00F         	call	_selec_gain	;wreg free
   686  00107A                     
   687                           ;main.c: 80:     selec_imp(&spi,0x01);
   688  00107A  0E9C               	movlw	low main@spi
   689  00107C  6E03               	movwf	selec_imp@spi^0,c
   690  00107E  0E00               	movlw	high main@spi
   691  001080  6E04               	movwf	(selec_imp@spi+1)^0,c
   692  001082  0E01               	movlw	1
   693  001084  6E05               	movwf	selec_imp@impedanciaspi^0,c
   694  001086  EC84  F00F         	call	_selec_imp	;wreg free
   695  00108A                     
   696                           ;main.c: 81:     usart disp;;main.c: 82:     iniciar_struct_usart(&disp);
   697  00108A  0E91               	movlw	low main@disp
   698  00108C  6E03               	movwf	iniciar_struct_usart@disp^0,c
   699  00108E  0E00               	movlw	high main@disp
   700  001090  6E04               	movwf	(iniciar_struct_usart@disp+1)^0,c
   701  001092  ECB1  F00D         	call	_iniciar_struct_usart	;wreg free
   702  001096                     
   703                           ;main.c: 83:     SPI1CON0bits.EN = 1;
   704  001096  013D               	movlb	61	; () banked
   705  001098  8F14               	bsf	20,7,b	;volatile
   706  00109A                     l2622:
   707                           
   708                           ;main.c: 85:     {;main.c: 86:         if(TMR2_HasOverflowOccured()){
   709  00109A  ECBF  F00E         	call	_TMR2_HasOverflowOccured	;wreg free
   710  00109E  0900               	iorlw	0
   711  0010A0  B4D8               	btfsc	status,2,c
   712  0010A2  EF55  F008         	goto	u751
   713  0010A6  EF57  F008         	goto	u750
   714  0010AA                     u751:
   715  0010AA  EF5D  F008         	goto	l2626
   716  0010AE                     u750:
   717  0010AE                     
   718                           ;main.c: 87:             Tm_Procese_tiempo(&time_out);
   719  0010AE  0E75               	movlw	low main@time_out
   720  0010B0  6E03               	movwf	Tm_Procese_tiempo@ctp^0,c
   721  0010B2  0E00               	movlw	high main@time_out
   722  0010B4  6E04               	movwf	(Tm_Procese_tiempo@ctp+1)^0,c
   723  0010B6  ECB2  F00A         	call	_Tm_Procese_tiempo	;wreg free
   724  0010BA                     l2626:
   725                           
   726                           ;main.c: 89:         if(Tm_Hubo_periodico(&time_out)){
   727  0010BA  0E75               	movlw	low main@time_out
   728  0010BC  6E03               	movwf	Tm_Hubo_periodico@ctp^0,c
   729  0010BE  0E00               	movlw	high main@time_out
   730  0010C0  6E04               	movwf	(Tm_Hubo_periodico@ctp+1)^0,c
   731  0010C2  ECAC  F00F         	call	_Tm_Hubo_periodico	;wreg free
   732  0010C6  0900               	iorlw	0
   733  0010C8  B4D8               	btfsc	status,2,c
   734  0010CA  EF69  F008         	goto	u761
   735  0010CE  EF6B  F008         	goto	u760
   736  0010D2                     u761:
   737  0010D2  EF7D  F008         	goto	l2636
   738  0010D6                     u760:
   739  0010D6                     
   740                           ;main.c: 90:             Tm_Baje_periodico(&time_out);
   741  0010D6  0E75               	movlw	low main@time_out
   742  0010D8  6E03               	movwf	Tm_Baje_periodico@ctp^0,c
   743  0010DA  0E00               	movlw	high main@time_out
   744  0010DC  6E04               	movwf	(Tm_Baje_periodico@ctp+1)^0,c
   745  0010DE  ECB5  F00F         	call	_Tm_Baje_periodico	;wreg free
   746  0010E2                     
   747                           ;main.c: 91:             ADCC_StartConversion(primerADC);
   748  0010E2  0E18               	movlw	24
   749  0010E4  ECC6  F00F         	call	_ADCC_StartConversion
   750  0010E8                     
   751                           ;main.c: 92:             conv1 = 1;
   752  0010E8  0E01               	movlw	1
   753  0010EA  0100               	movlb	0	; () banked
   754  0010EC  6FB3               	movwf	_conv1& (0+255),b
   755  0010EE                     
   756                           ; BSR set to: 0
   757                           ;main.c: 93:             envioSPI(&spi);
   758  0010EE  0E9C               	movlw	low main@spi
   759  0010F0  6E04               	movwf	envioSPI@spi^0,c
   760  0010F2  0E00               	movlw	high main@spi
   761  0010F4  6E05               	movwf	(envioSPI@spi+1)^0,c
   762  0010F6  EC1F  F00B         	call	_envioSPI	;wreg free
   763  0010FA                     l2636:
   764                           
   765                           ;main.c: 96:         if(ADCC_IsConversionDone() && conv1){
   766  0010FA  EC6E  F00F         	call	_ADCC_IsConversionDone	;wreg free
   767  0010FE  0900               	iorlw	0
   768  001100  B4D8               	btfsc	status,2,c
   769  001102  EF85  F008         	goto	u771
   770  001106  EF87  F008         	goto	u770
   771  00110A                     u771:
   772  00110A  EFBB  F008         	goto	l2656
   773  00110E                     u770:
   774  00110E  0100               	movlb	0	; () banked
   775  001110  51B3               	movf	_conv1& (0+255),w,b
   776  001112  B4D8               	btfsc	status,2,c
   777  001114  EF8E  F008         	goto	u781
   778  001118  EF90  F008         	goto	u780
   779  00111C                     u781:
   780  00111C  EFBB  F008         	goto	l2656
   781  001120                     u780:
   782  001120                     
   783                           ; BSR set to: 0
   784                           ;main.c: 97:             ADC1 = ADCC_GetConversionResult();
   785  001120  EC79  F00F         	call	_ADCC_GetConversionResult	;wreg free
   786  001124  C003  F0AE         	movff	?_ADCC_GetConversionResult,_ADC1
   787  001128  C004  F0AF         	movff	?_ADCC_GetConversionResult+1,_ADC1+1
   788  00112C                     
   789                           ;main.c: 98:             f_send1=1;
   790  00112C  0E01               	movlw	1
   791  00112E  0100               	movlb	0	; () banked
   792  001130  6FB1               	movwf	_f_send1& (0+255),b
   793  001132                     
   794                           ; BSR set to: 0
   795                           ;main.c: 99:             cola_add(&cola,(char)((ADC1 & 0x0F00) >> 8));
   796  001132  0E7C               	movlw	low main@cola
   797  001134  6E07               	movwf	cola_add@c^0,c
   798  001136  0E00               	movlw	high main@cola
   799  001138  6E08               	movwf	(cola_add@c+1)^0,c
   800  00113A  51AF               	movf	(_ADC1+1)& (0+255),w,b
   801  00113C  0B0F               	andlw	15
   802  00113E  6E09               	movwf	cola_add@dato^0,c
   803  001140  ECE5  F00B         	call	_cola_add	;wreg free
   804  001144                     
   805                           ;main.c: 100:             cola_add(&cola,(char)(ADC1 & 0x00FF));
   806  001144  0E7C               	movlw	low main@cola
   807  001146  6E07               	movwf	cola_add@c^0,c
   808  001148  0E00               	movlw	high main@cola
   809  00114A  6E08               	movwf	(cola_add@c+1)^0,c
   810  00114C  C0AE  F009         	movff	_ADC1,cola_add@dato
   811  001150  ECE5  F00B         	call	_cola_add	;wreg free
   812  001154                     
   813                           ;main.c: 101:             cola_add(&cola,(char)(0x2C));
   814  001154  0E7C               	movlw	low main@cola
   815  001156  6E07               	movwf	cola_add@c^0,c
   816  001158  0E00               	movlw	high main@cola
   817  00115A  6E08               	movwf	(cola_add@c+1)^0,c
   818  00115C  0E2C               	movlw	44
   819  00115E  6E09               	movwf	cola_add@dato^0,c
   820  001160  ECE5  F00B         	call	_cola_add	;wreg free
   821  001164                     
   822                           ;main.c: 106:             conv1 = 0;
   823  001164  0E00               	movlw	0
   824  001166  0100               	movlb	0	; () banked
   825  001168  6FB3               	movwf	_conv1& (0+255),b
   826  00116A                     
   827                           ; BSR set to: 0
   828                           ;main.c: 107:             ADCC_StartConversion(segundoADC);
   829  00116A  0E1B               	movlw	27
   830  00116C  ECC6  F00F         	call	_ADCC_StartConversion
   831  001170                     
   832                           ;main.c: 108:             conv2=1;
   833  001170  0E01               	movlw	1
   834  001172  0100               	movlb	0	; () banked
   835  001174  6FB2               	movwf	_conv2& (0+255),b
   836  001176                     l2656:
   837                           
   838                           ;main.c: 112:         if(f_send1 && SPI1STATUSbits.TXBE){
   839  001176  0100               	movlb	0	; () banked
   840  001178  51B1               	movf	_f_send1& (0+255),w,b
   841  00117A  B4D8               	btfsc	status,2,c
   842  00117C  EFC2  F008         	goto	u791
   843  001180  EFC4  F008         	goto	u790
   844  001184                     u791:
   845  001184  EFED  F008         	goto	l2676
   846  001188                     u790:
   847  001188                     
   848                           ; BSR set to: 0
   849  001188  013D               	movlb	61	; () banked
   850  00118A  AB17               	btfss	23,5,b	;volatile
   851  00118C  EFCA  F008         	goto	u801
   852  001190  EFCC  F008         	goto	u800
   853  001194                     u801:
   854  001194  EFED  F008         	goto	l2676
   855  001198                     u800:
   856  001198                     
   857                           ; BSR set to: 61
   858                           ;main.c: 113:             f_send1=0;
   859  001198  0E00               	movlw	0
   860  00119A  0100               	movlb	0	; () banked
   861  00119C  6FB1               	movwf	_f_send1& (0+255),b
   862  00119E                     
   863                           ; BSR set to: 0
   864  00119E  80BE               	bsf	190,0,c	;volatile
   865  0011A0                     
   866                           ; BSR set to: 0
   867  0011A0  98BB               	bcf	187,4,c	;volatile
   868  0011A2                     
   869                           ; BSR set to: 0
   870  0011A2  98BB               	bcf	187,4,c	;volatile
   871  0011A4                     
   872                           ; BSR set to: 0
   873  0011A4  88BB               	bsf	187,4,c	;volatile
   874  0011A6                     
   875                           ; BSR set to: 0
   876                           ;main.c: 119:             f_send2=1;
   877  0011A6  0E01               	movlw	1
   878  0011A8  6FB0               	movwf	_f_send2& (0+255),b
   879  0011AA                     
   880                           ; BSR set to: 0
   881                           ;main.c: 120:             selec_channel(&spi,0x00);
   882  0011AA  0E9C               	movlw	low main@spi
   883  0011AC  6E03               	movwf	selec_channel@spi^0,c
   884  0011AE  0E00               	movlw	high main@spi
   885  0011B0  6E04               	movwf	(selec_channel@spi+1)^0,c
   886  0011B2  0E00               	movlw	0
   887  0011B4  6E05               	movwf	selec_channel@canalspi^0,c
   888  0011B6  EC98  F00F         	call	_selec_channel	;wreg free
   889  0011BA                     
   890                           ;main.c: 121:             actualize_valor(&spi,ADC1);
   891  0011BA  0E9C               	movlw	low main@spi
   892  0011BC  6E03               	movwf	actualize_valor@spi^0,c
   893  0011BE  0E00               	movlw	high main@spi
   894  0011C0  6E04               	movwf	(actualize_valor@spi+1)^0,c
   895  0011C2  C0AE  F005         	movff	_ADC1,actualize_valor@valorspi
   896  0011C6  C0AF  F006         	movff	_ADC1+1,actualize_valor@valorspi+1
   897  0011CA  EC3D  F00F         	call	_actualize_valor	;wreg free
   898  0011CE                     
   899                           ;main.c: 122:             envioSPI(&spi);
   900  0011CE  0E9C               	movlw	low main@spi
   901  0011D0  6E04               	movwf	envioSPI@spi^0,c
   902  0011D2  0E00               	movlw	high main@spi
   903  0011D4  6E05               	movwf	(envioSPI@spi+1)^0,c
   904  0011D6  EC1F  F00B         	call	_envioSPI	;wreg free
   905  0011DA                     l2676:
   906                           
   907                           ;main.c: 126:         if(ADCC_IsConversionDone() && conv2){
   908  0011DA  EC6E  F00F         	call	_ADCC_IsConversionDone	;wreg free
   909  0011DE  0900               	iorlw	0
   910  0011E0  B4D8               	btfsc	status,2,c
   911  0011E2  EFF5  F008         	goto	u811
   912  0011E6  EFF7  F008         	goto	u810
   913  0011EA                     u811:
   914  0011EA  EF2B  F009         	goto	l2692
   915  0011EE                     u810:
   916  0011EE  0100               	movlb	0	; () banked
   917  0011F0  51B2               	movf	_conv2& (0+255),w,b
   918  0011F2  B4D8               	btfsc	status,2,c
   919  0011F4  EFFE  F008         	goto	u821
   920  0011F8  EF00  F009         	goto	u820
   921  0011FC                     u821:
   922  0011FC  EF2B  F009         	goto	l2692
   923  001200                     u820:
   924  001200                     
   925                           ; BSR set to: 0
   926                           ;main.c: 127:             ADC2 = ADCC_GetConversionResult();
   927  001200  EC79  F00F         	call	_ADCC_GetConversionResult	;wreg free
   928  001204  C003  F0AC         	movff	?_ADCC_GetConversionResult,_ADC2
   929  001208  C004  F0AD         	movff	?_ADCC_GetConversionResult+1,_ADC2+1
   930  00120C                     
   931                           ;main.c: 128:             cola_add(&cola,(char)((ADC2 & 0x0F00) >> 8));
   932  00120C  0E7C               	movlw	low main@cola
   933  00120E  6E07               	movwf	cola_add@c^0,c
   934  001210  0E00               	movlw	high main@cola
   935  001212  6E08               	movwf	(cola_add@c+1)^0,c
   936  001214  0100               	movlb	0	; () banked
   937  001216  51AD               	movf	(_ADC2+1)& (0+255),w,b
   938  001218  0B0F               	andlw	15
   939  00121A  6E09               	movwf	cola_add@dato^0,c
   940  00121C  ECE5  F00B         	call	_cola_add	;wreg free
   941  001220                     
   942                           ;main.c: 129:             cola_add(&cola,(char)(ADC2 & 0x00FF));
   943  001220  0E7C               	movlw	low main@cola
   944  001222  6E07               	movwf	cola_add@c^0,c
   945  001224  0E00               	movlw	high main@cola
   946  001226  6E08               	movwf	(cola_add@c+1)^0,c
   947  001228  C0AC  F009         	movff	_ADC2,cola_add@dato
   948  00122C  ECE5  F00B         	call	_cola_add	;wreg free
   949  001230                     
   950                           ;main.c: 130:             cola_add(&cola,(char)(0x13));
   951  001230  0E7C               	movlw	low main@cola
   952  001232  6E07               	movwf	cola_add@c^0,c
   953  001234  0E00               	movlw	high main@cola
   954  001236  6E08               	movwf	(cola_add@c+1)^0,c
   955  001238  0E13               	movlw	19
   956  00123A  6E09               	movwf	cola_add@dato^0,c
   957  00123C  ECE5  F00B         	call	_cola_add	;wreg free
   958  001240                     
   959                           ;main.c: 131:             cola_add(&cola,(char)(0x10));
   960  001240  0E7C               	movlw	low main@cola
   961  001242  6E07               	movwf	cola_add@c^0,c
   962  001244  0E00               	movlw	high main@cola
   963  001246  6E08               	movwf	(cola_add@c+1)^0,c
   964  001248  0E10               	movlw	16
   965  00124A  6E09               	movwf	cola_add@dato^0,c
   966  00124C  ECE5  F00B         	call	_cola_add	;wreg free
   967  001250                     
   968                           ;main.c: 135:             conv2=0;
   969  001250  0E00               	movlw	0
   970  001252  0100               	movlb	0	; () banked
   971  001254  6FB2               	movwf	_conv2& (0+255),b
   972  001256                     l2692:
   973                           
   974                           ;main.c: 138:         if(f_send2 && SPI1STATUSbits.TXBE){
   975  001256  0100               	movlb	0	; () banked
   976  001258  51B0               	movf	_f_send2& (0+255),w,b
   977  00125A  B4D8               	btfsc	status,2,c
   978  00125C  EF32  F009         	goto	u831
   979  001260  EF34  F009         	goto	u830
   980  001264                     u831:
   981  001264  EF5D  F009         	goto	l2712
   982  001268                     u830:
   983  001268                     
   984                           ; BSR set to: 0
   985  001268  013D               	movlb	61	; () banked
   986  00126A  AB17               	btfss	23,5,b	;volatile
   987  00126C  EF3A  F009         	goto	u841
   988  001270  EF3C  F009         	goto	u840
   989  001274                     u841:
   990  001274  EF5D  F009         	goto	l2712
   991  001278                     u840:
   992  001278                     
   993                           ; BSR set to: 61
   994                           ;main.c: 140:             f_send2=0;
   995  001278  0E00               	movlw	0
   996  00127A  0100               	movlb	0	; () banked
   997  00127C  6FB0               	movwf	_f_send2& (0+255),b
   998  00127E                     
   999                           ; BSR set to: 0
  1000  00127E  80BE               	bsf	190,0,c	;volatile
  1001  001280                     
  1002                           ; BSR set to: 0
  1003  001280  98BB               	bcf	187,4,c	;volatile
  1004  001282                     
  1005                           ; BSR set to: 0
  1006  001282  98BB               	bcf	187,4,c	;volatile
  1007  001284                     
  1008                           ; BSR set to: 0
  1009  001284  88BB               	bsf	187,4,c	;volatile
  1010  001286                     
  1011                           ; BSR set to: 0
  1012                           ;main.c: 146:             f_send1=1;
  1013  001286  0E01               	movlw	1
  1014  001288  6FB1               	movwf	_f_send1& (0+255),b
  1015  00128A                     
  1016                           ; BSR set to: 0
  1017                           ;main.c: 147:             selec_channel(&spi,0x01);
  1018  00128A  0E9C               	movlw	low main@spi
  1019  00128C  6E03               	movwf	selec_channel@spi^0,c
  1020  00128E  0E00               	movlw	high main@spi
  1021  001290  6E04               	movwf	(selec_channel@spi+1)^0,c
  1022  001292  0E01               	movlw	1
  1023  001294  6E05               	movwf	selec_channel@canalspi^0,c
  1024  001296  EC98  F00F         	call	_selec_channel	;wreg free
  1025  00129A                     
  1026                           ;main.c: 148:             actualize_valor(&spi,ADC2);
  1027  00129A  0E9C               	movlw	low main@spi
  1028  00129C  6E03               	movwf	actualize_valor@spi^0,c
  1029  00129E  0E00               	movlw	high main@spi
  1030  0012A0  6E04               	movwf	(actualize_valor@spi+1)^0,c
  1031  0012A2  C0AC  F005         	movff	_ADC2,actualize_valor@valorspi
  1032  0012A6  C0AD  F006         	movff	_ADC2+1,actualize_valor@valorspi+1
  1033  0012AA  EC3D  F00F         	call	_actualize_valor	;wreg free
  1034  0012AE                     
  1035                           ;main.c: 149:             envioSPI(&spi);
  1036  0012AE  0E9C               	movlw	low main@spi
  1037  0012B0  6E04               	movwf	envioSPI@spi^0,c
  1038  0012B2  0E00               	movlw	high main@spi
  1039  0012B4  6E05               	movwf	(envioSPI@spi+1)^0,c
  1040  0012B6  EC1F  F00B         	call	_envioSPI	;wreg free
  1041  0012BA                     l2712:
  1042                           
  1043                           ;main.c: 153:         if(UART1_is_tx_ready() && (!cola_vacia(&cola))){
  1044  0012BA  ECA9  F00E         	call	_UART1_is_tx_ready	;wreg free
  1045  0012BE  0900               	iorlw	0
  1046  0012C0  B4D8               	btfsc	status,2,c
  1047  0012C2  EF65  F009         	goto	u851
  1048  0012C6  EF67  F009         	goto	u850
  1049  0012CA                     u851:
  1050  0012CA  EF84  F009         	goto	l2718
  1051  0012CE                     u850:
  1052  0012CE  0E7C               	movlw	low main@cola
  1053  0012D0  6E03               	movwf	cola_vacia@c^0,c
  1054  0012D2  0E00               	movlw	high main@cola
  1055  0012D4  6E04               	movwf	(cola_vacia@c+1)^0,c
  1056  0012D6  EC6A  F00E         	call	_cola_vacia	;wreg free
  1057  0012DA  5003               	movf	?_cola_vacia^0,w,c
  1058  0012DC  1004               	iorwf	(?_cola_vacia+1)^0,w,c
  1059  0012DE  A4D8               	btfss	status,2,c
  1060  0012E0  EF74  F009         	goto	u861
  1061  0012E4  EF76  F009         	goto	u860
  1062  0012E8                     u861:
  1063  0012E8  EF84  F009         	goto	l2718
  1064  0012EC                     u860:
  1065  0012EC                     
  1066                           ;main.c: 154:             enviar_Eusart(cola_get(&cola));
  1067  0012EC  0E7C               	movlw	low main@cola
  1068  0012EE  6E07               	movwf	cola_get@c^0,c
  1069  0012F0  0E00               	movlw	high main@cola
  1070  0012F2  6E08               	movwf	(cola_get@c+1)^0,c
  1071  0012F4  EC89  F00B         	call	_cola_get	;wreg free
  1072  0012F8  6E13               	movwf	??_main^0,c
  1073  0012FA  6A14               	clrf	(??_main+1)^0,c
  1074  0012FC  C013  F00C         	movff	??_main,enviar_Eusart@disp
  1075  001300  C014  F00D         	movff	??_main+1,enviar_Eusart@disp+1
  1076  001304  ECA2  F00F         	call	_enviar_Eusart	;wreg free
  1077  001308                     l2718:
  1078                           
  1079                           ;main.c: 157:         if(UART1_is_rx_ready()){
  1080  001308  EC63  F00F         	call	_UART1_is_rx_ready	;wreg free
  1081  00130C  0900               	iorlw	0
  1082  00130E  B4D8               	btfsc	status,2,c
  1083  001310  EF8C  F009         	goto	u871
  1084  001314  EF8E  F009         	goto	u870
  1085  001318                     u871:
  1086  001318  EF96  F009         	goto	l740
  1087  00131C                     u870:
  1088  00131C                     
  1089                           ;main.c: 158:             recibir_periodo_Eusart(&disp, data);
  1090  00131C  0E91               	movlw	low main@disp
  1091  00131E  6E04               	movwf	recibir_periodo_Eusart@disp^0,c
  1092  001320  0E00               	movlw	high main@disp
  1093  001322  6E05               	movwf	(recibir_periodo_Eusart@disp+1)^0,c
  1094  001324  0E00               	movlw	0
  1095  001326  6E06               	movwf	recibir_periodo_Eusart@dato^0,c
  1096  001328  ECBA  F009         	call	_recibir_periodo_Eusart	;wreg free
  1097  00132C                     l740:
  1098                           
  1099                           ;main.c: 160:         if(dato_recibido_completo(&disp)){
  1100  00132C  0E91               	movlw	low main@disp
  1101  00132E  6E03               	movwf	dato_recibido_completo@disp^0,c
  1102  001330  0E00               	movlw	high main@disp
  1103  001332  6E04               	movwf	(dato_recibido_completo@disp+1)^0,c
  1104  001334  ECBE  F00F         	call	_dato_recibido_completo	;wreg free
  1105  001338  0900               	iorlw	0
  1106  00133A  B4D8               	btfsc	status,2,c
  1107  00133C  EFA2  F009         	goto	u881
  1108  001340  EFA4  F009         	goto	u880
  1109  001344                     u881:
  1110  001344  EF4D  F008         	goto	l2622
  1111  001348                     u880:
  1112  001348                     
  1113                           ;main.c: 161:             Tm_Inicie_periodico(&time_out,1 + actualizar_recibido_Eusart(&
      +                          disp));
  1114  001348  0E75               	movlw	low main@time_out
  1115  00134A  6E0F               	movwf	Tm_Inicie_periodico@ctp^0,c
  1116  00134C  0E00               	movlw	high main@time_out
  1117  00134E  6E10               	movwf	(Tm_Inicie_periodico@ctp+1)^0,c
  1118  001350  0E91               	movlw	low main@disp
  1119  001352  6E09               	movwf	actualizar_recibido_Eusart@disp^0,c
  1120  001354  0E00               	movlw	high main@disp
  1121  001356  6E0A               	movwf	(actualizar_recibido_Eusart@disp+1)^0,c
  1122  001358  ECDB  F00C         	call	_actualizar_recibido_Eusart	;wreg free
  1123  00135C  0E01               	movlw	1
  1124  00135E  2409               	addwf	?_actualizar_recibido_Eusart^0,w,c
  1125  001360  6E11               	movwf	Tm_Inicie_periodico@periodo^0,c
  1126  001362  0E00               	movlw	0
  1127  001364  200A               	addwfc	(?_actualizar_recibido_Eusart+1)^0,w,c
  1128  001366  6E12               	movwf	(Tm_Inicie_periodico@periodo+1)^0,c
  1129  001368  EC20  F00E         	call	_Tm_Inicie_periodico	;wreg free
  1130  00136C  EF4D  F008         	goto	l2622
  1131  001370  EF0D  F000         	goto	start
  1132  001374                     __end_of_main:
  1133                           	callstack 0
  1134                           
  1135 ;; *************** function _selec_imp *****************
  1136 ;; Defined at:
  1137 ;;		line 29 in file "nuestrospi.c"
  1138 ;; Parameters:    Size  Location     Type
  1139 ;;  spi             2    2[COMRAM] PTR struct spi
  1140 ;;		 -> main@spi(14), 
  1141 ;;  impedanciasp    1    4[COMRAM] unsigned char 
  1142 ;; Auto vars:     Size  Location     Type
  1143 ;;		None
  1144 ;; Return value:  Size  Location     Type
  1145 ;;                  1    wreg      void 
  1146 ;; Registers used:
  1147 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1148 ;; Tracked objects:
  1149 ;;		On entry : 0/0
  1150 ;;		On exit  : 0/0
  1151 ;;		Unchanged: 0/0
  1152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1153 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1156 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1157 ;;Total ram usage:        3 bytes
  1158 ;; Hardware stack levels used: 1
  1159 ;; Hardware stack levels required when called: 2
  1160 ;; This function calls:
  1161 ;;		Nothing
  1162 ;; This function is called by:
  1163 ;;		_main
  1164 ;; This function uses a non-reentrant model
  1165 ;;
  1166                           
  1167                           	psect	text1
  1168  001F08                     __ptext1:
  1169                           	callstack 0
  1170  001F08                     _selec_imp:
  1171                           	callstack 28
  1172  001F08                     
  1173                           ;nuestrospi.c: 30:     spi -> impedancia = impedanciaspi;
  1174  001F08  EE20 F005          	lfsr	2,5
  1175  001F0C  5003               	movf	selec_imp@spi^0,w,c
  1176  001F0E  26D9               	addwf	fsr2l,f,c
  1177  001F10  5004               	movf	(selec_imp@spi+1)^0,w,c
  1178  001F12  22DA               	addwfc	fsr2h,f,c
  1179  001F14  0060  F017  FFDF   	movff	selec_imp@impedanciaspi,indf2
  1180  001F1A  0012               	return		;funcret
  1181  001F1C                     __end_of_selec_imp:
  1182                           	callstack 0
  1183                           
  1184 ;; *************** function _selec_gain *****************
  1185 ;; Defined at:
  1186 ;;		line 26 in file "nuestrospi.c"
  1187 ;; Parameters:    Size  Location     Type
  1188 ;;  spi             2    2[COMRAM] PTR struct spi
  1189 ;;		 -> main@spi(14), 
  1190 ;;  gananciaspi     1    4[COMRAM] unsigned char 
  1191 ;; Auto vars:     Size  Location     Type
  1192 ;;		None
  1193 ;; Return value:  Size  Location     Type
  1194 ;;                  1    wreg      void 
  1195 ;; Registers used:
  1196 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1197 ;; Tracked objects:
  1198 ;;		On entry : 0/0
  1199 ;;		On exit  : 0/0
  1200 ;;		Unchanged: 0/0
  1201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1202 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1205 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1206 ;;Total ram usage:        3 bytes
  1207 ;; Hardware stack levels used: 1
  1208 ;; Hardware stack levels required when called: 2
  1209 ;; This function calls:
  1210 ;;		Nothing
  1211 ;; This function is called by:
  1212 ;;		_main
  1213 ;; This function uses a non-reentrant model
  1214 ;;
  1215                           
  1216                           	psect	text2
  1217  001F1C                     __ptext2:
  1218                           	callstack 0
  1219  001F1C                     _selec_gain:
  1220                           	callstack 28
  1221  001F1C                     
  1222                           ;nuestrospi.c: 27:     spi -> ganancia = gananciaspi;
  1223  001F1C  EE20 F004          	lfsr	2,4
  1224  001F20  5003               	movf	selec_gain@spi^0,w,c
  1225  001F22  26D9               	addwf	fsr2l,f,c
  1226  001F24  5004               	movf	(selec_gain@spi+1)^0,w,c
  1227  001F26  22DA               	addwfc	fsr2h,f,c
  1228  001F28  0060  F017  FFDF   	movff	selec_gain@gananciaspi,indf2
  1229  001F2E  0012               	return		;funcret
  1230  001F30                     __end_of_selec_gain:
  1231                           	callstack 0
  1232                           
  1233 ;; *************** function _selec_channel *****************
  1234 ;; Defined at:
  1235 ;;		line 23 in file "nuestrospi.c"
  1236 ;; Parameters:    Size  Location     Type
  1237 ;;  spi             2    2[COMRAM] PTR struct spi
  1238 ;;		 -> main@spi(14), 
  1239 ;;  canalspi        1    4[COMRAM] unsigned char 
  1240 ;; Auto vars:     Size  Location     Type
  1241 ;;		None
  1242 ;; Return value:  Size  Location     Type
  1243 ;;                  1    wreg      void 
  1244 ;; Registers used:
  1245 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1246 ;; Tracked objects:
  1247 ;;		On entry : 0/0
  1248 ;;		On exit  : 0/0
  1249 ;;		Unchanged: 0/0
  1250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1251 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1254 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1255 ;;Total ram usage:        3 bytes
  1256 ;; Hardware stack levels used: 1
  1257 ;; Hardware stack levels required when called: 2
  1258 ;; This function calls:
  1259 ;;		Nothing
  1260 ;; This function is called by:
  1261 ;;		_main
  1262 ;; This function uses a non-reentrant model
  1263 ;;
  1264                           
  1265                           	psect	text3
  1266  001F30                     __ptext3:
  1267                           	callstack 0
  1268  001F30                     _selec_channel:
  1269                           	callstack 28
  1270  001F30                     
  1271                           ;nuestrospi.c: 24:     spi -> canal = canalspi;
  1272  001F30  EE20 F003          	lfsr	2,3
  1273  001F34  5003               	movf	selec_channel@spi^0,w,c
  1274  001F36  26D9               	addwf	fsr2l,f,c
  1275  001F38  5004               	movf	(selec_channel@spi+1)^0,w,c
  1276  001F3A  22DA               	addwfc	fsr2h,f,c
  1277  001F3C  0060  F017  FFDF   	movff	selec_channel@canalspi,indf2
  1278  001F42  0012               	return		;funcret
  1279  001F44                     __end_of_selec_channel:
  1280                           	callstack 0
  1281                           
  1282 ;; *************** function _recibir_periodo_Eusart *****************
  1283 ;; Defined at:
  1284 ;;		line 17 in file "nuestrausart.c"
  1285 ;; Parameters:    Size  Location     Type
  1286 ;;  disp            2    3[COMRAM] PTR struct usart
  1287 ;;		 -> main@disp(11), 
  1288 ;;  dato            1    5[COMRAM] unsigned char 
  1289 ;; Auto vars:     Size  Location     Type
  1290 ;;		None
  1291 ;; Return value:  Size  Location     Type
  1292 ;;                  1    wreg      void 
  1293 ;; Registers used:
  1294 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1295 ;; Tracked objects:
  1296 ;;		On entry : 0/0
  1297 ;;		On exit  : 0/0
  1298 ;;		Unchanged: 0/0
  1299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1300 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1302 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1303 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1304 ;;Total ram usage:        5 bytes
  1305 ;; Hardware stack levels used: 1
  1306 ;; Hardware stack levels required when called: 3
  1307 ;; This function calls:
  1308 ;;		_UART1_Write
  1309 ;; This function is called by:
  1310 ;;		_main
  1311 ;; This function uses a non-reentrant model
  1312 ;;
  1313                           
  1314                           	psect	text4
  1315  001374                     __ptext4:
  1316                           	callstack 0
  1317  001374                     _recibir_periodo_Eusart:
  1318                           	callstack 27
  1319  001374                     
  1320                           ;nuestrausart.c: 18:     disp -> valor = U1RXB;
  1321  001374  0060  F013  FFD9   	movff	recibir_periodo_Eusart@disp,fsr2l
  1322  00137A  0060  F017  FFDA   	movff	recibir_periodo_Eusart@disp+1,fsr2h
  1323  001380  006F F7A3 FFDF     	movff	15848,indf2	;volatile
  1324  001386                     
  1325                           ;nuestrausart.c: 19:     UART1_Write(disp-> valor);
  1326  001386  0060  F013  FFD9   	movff	recibir_periodo_Eusart@disp,fsr2l
  1327  00138C  0060  F017  FFDA   	movff	recibir_periodo_Eusart@disp+1,fsr2h
  1328  001392  50DF               	movf	indf2,w,c
  1329  001394  EC30  F00F         	call	_UART1_Write
  1330                           
  1331                           ;nuestrausart.c: 20:     switch(disp -> caso)
  1332  001398  EF87  F00A         	goto	l2574
  1333  00139C                     l2556:
  1334                           
  1335                           ;nuestrausart.c: 23:             if(disp -> valor == 60){
  1336  00139C  0060  F013  FFD9   	movff	recibir_periodo_Eusart@disp,fsr2l
  1337  0013A2  0060  F017  FFDA   	movff	recibir_periodo_Eusart@disp+1,fsr2h
  1338  0013A8  0E3C               	movlw	60
  1339  0013AA  18DE               	xorwf	postinc2,w,c
  1340  0013AC  A4D8               	btfss	status,2,c
  1341  0013AE  EFDB  F009         	goto	u731
  1342  0013B2  EFDD  F009         	goto	u730
  1343  0013B6                     u731:
  1344  0013B6  EFE9  F009         	goto	l2560
  1345  0013BA                     u730:
  1346  0013BA                     
  1347                           ;nuestrausart.c: 24:                 disp -> caso = 1;
  1348  0013BA  EE20 F007          	lfsr	2,7
  1349  0013BE  5004               	movf	recibir_periodo_Eusart@disp^0,w,c
  1350  0013C0  26D9               	addwf	fsr2l,f,c
  1351  0013C2  5005               	movf	(recibir_periodo_Eusart@disp+1)^0,w,c
  1352  0013C4  22DA               	addwfc	fsr2h,f,c
  1353  0013C6  0E01               	movlw	1
  1354  0013C8  6EDE               	movwf	postinc2,c
  1355  0013CA  0E00               	movlw	0
  1356  0013CC  6EDD               	movwf	postdec2,c
  1357                           
  1358                           ;nuestrausart.c: 25:             }
  1359  0013CE  EFB1  F00A         	goto	l841
  1360  0013D2                     l2560:
  1361                           
  1362                           ;nuestrausart.c: 27:             {;nuestrausart.c: 28:                 disp -> caso = 0;
  1363  0013D2  EE20 F007          	lfsr	2,7
  1364  0013D6  5004               	movf	recibir_periodo_Eusart@disp^0,w,c
  1365  0013D8  26D9               	addwf	fsr2l,f,c
  1366  0013DA  5005               	movf	(recibir_periodo_Eusart@disp+1)^0,w,c
  1367  0013DC  22DA               	addwfc	fsr2h,f,c
  1368  0013DE  0E00               	movlw	0
  1369  0013E0  6EDE               	movwf	postinc2,c
  1370  0013E2  0E00               	movlw	0
  1371  0013E4  6EDD               	movwf	postdec2,c
  1372  0013E6  EFB1  F00A         	goto	l841
  1373  0013EA                     l2562:
  1374                           
  1375                           ;nuestrausart.c: 33:             disp -> caso = 2;
  1376  0013EA  EE20 F007          	lfsr	2,7
  1377  0013EE  5004               	movf	recibir_periodo_Eusart@disp^0,w,c
  1378  0013F0  26D9               	addwf	fsr2l,f,c
  1379  0013F2  5005               	movf	(recibir_periodo_Eusart@disp+1)^0,w,c
  1380  0013F4  22DA               	addwfc	fsr2h,f,c
  1381  0013F6  0E02               	movlw	2
  1382  0013F8  6EDE               	movwf	postinc2,c
  1383  0013FA  0E00               	movlw	0
  1384  0013FC  6EDD               	movwf	postdec2,c
  1385                           
  1386                           ;nuestrausart.c: 34:             disp -> numero1 = disp -> valor;
  1387  0013FE  0060  F013  FFD9   	movff	recibir_periodo_Eusart@disp,fsr2l
  1388  001404  0060  F017  FFDA   	movff	recibir_periodo_Eusart@disp+1,fsr2h
  1389  00140A  50DF               	movf	indf2,w,c
  1390  00140C  6E07               	movwf	??_recibir_periodo_Eusart^0,c
  1391  00140E  6A08               	clrf	(??_recibir_periodo_Eusart+1)^0,c
  1392  001410  EE20 F001          	lfsr	2,1
  1393  001414  5004               	movf	recibir_periodo_Eusart@disp^0,w,c
  1394  001416  26D9               	addwf	fsr2l,f,c
  1395  001418  5005               	movf	(recibir_periodo_Eusart@disp+1)^0,w,c
  1396  00141A  22DA               	addwfc	fsr2h,f,c
  1397  00141C  0060  F01F  FFDE   	movff	??_recibir_periodo_Eusart,postinc2
  1398  001422  0060  F023  FFDD   	movff	??_recibir_periodo_Eusart+1,postdec2
  1399                           
  1400                           ;nuestrausart.c: 35:             break;
  1401  001428  EFB1  F00A         	goto	l841
  1402  00142C                     l2564:
  1403                           
  1404                           ;nuestrausart.c: 42:             disp -> caso = 3;
  1405  00142C  EE20 F007          	lfsr	2,7
  1406  001430  5004               	movf	recibir_periodo_Eusart@disp^0,w,c
  1407  001432  26D9               	addwf	fsr2l,f,c
  1408  001434  5005               	movf	(recibir_periodo_Eusart@disp+1)^0,w,c
  1409  001436  22DA               	addwfc	fsr2h,f,c
  1410  001438  0E03               	movlw	3
  1411  00143A  6EDE               	movwf	postinc2,c
  1412  00143C  0E00               	movlw	0
  1413  00143E  6EDD               	movwf	postdec2,c
  1414                           
  1415                           ;nuestrausart.c: 43:             disp -> numero2 = disp -> valor;
  1416  001440  0060  F013  FFD9   	movff	recibir_periodo_Eusart@disp,fsr2l
  1417  001446  0060  F017  FFDA   	movff	recibir_periodo_Eusart@disp+1,fsr2h
  1418  00144C  50DF               	movf	indf2,w,c
  1419  00144E  6E07               	movwf	??_recibir_periodo_Eusart^0,c
  1420  001450  6A08               	clrf	(??_recibir_periodo_Eusart+1)^0,c
  1421  001452  EE20 F003          	lfsr	2,3
  1422  001456  5004               	movf	recibir_periodo_Eusart@disp^0,w,c
  1423  001458  26D9               	addwf	fsr2l,f,c
  1424  00145A  5005               	movf	(recibir_periodo_Eusart@disp+1)^0,w,c
  1425  00145C  22DA               	addwfc	fsr2h,f,c
  1426  00145E  0060  F01F  FFDE   	movff	??_recibir_periodo_Eusart,postinc2
  1427  001464  0060  F023  FFDD   	movff	??_recibir_periodo_Eusart+1,postdec2
  1428                           
  1429                           ;nuestrausart.c: 44:             break;
  1430  00146A  EFB1  F00A         	goto	l841
  1431  00146E                     l2566:
  1432                           
  1433                           ;nuestrausart.c: 51:             disp -> caso = 4;
  1434  00146E  EE20 F007          	lfsr	2,7
  1435  001472  5004               	movf	recibir_periodo_Eusart@disp^0,w,c
  1436  001474  26D9               	addwf	fsr2l,f,c
  1437  001476  5005               	movf	(recibir_periodo_Eusart@disp+1)^0,w,c
  1438  001478  22DA               	addwfc	fsr2h,f,c
  1439  00147A  0E04               	movlw	4
  1440  00147C  6EDE               	movwf	postinc2,c
  1441  00147E  0E00               	movlw	0
  1442  001480  6EDD               	movwf	postdec2,c
  1443                           
  1444                           ;nuestrausart.c: 52:             disp -> numero3 = disp -> valor;
  1445  001482  0060  F013  FFD9   	movff	recibir_periodo_Eusart@disp,fsr2l
  1446  001488  0060  F017  FFDA   	movff	recibir_periodo_Eusart@disp+1,fsr2h
  1447  00148E  50DF               	movf	indf2,w,c
  1448  001490  6E07               	movwf	??_recibir_periodo_Eusart^0,c
  1449  001492  6A08               	clrf	(??_recibir_periodo_Eusart+1)^0,c
  1450  001494  EE20 F005          	lfsr	2,5
  1451  001498  5004               	movf	recibir_periodo_Eusart@disp^0,w,c
  1452  00149A  26D9               	addwf	fsr2l,f,c
  1453  00149C  5005               	movf	(recibir_periodo_Eusart@disp+1)^0,w,c
  1454  00149E  22DA               	addwfc	fsr2h,f,c
  1455  0014A0  0060  F01F  FFDE   	movff	??_recibir_periodo_Eusart,postinc2
  1456  0014A6  0060  F023  FFDD   	movff	??_recibir_periodo_Eusart+1,postdec2
  1457                           
  1458                           ;nuestrausart.c: 53:             break;
  1459  0014AC  EFB1  F00A         	goto	l841
  1460  0014B0                     l2568:
  1461                           
  1462                           ;nuestrausart.c: 59:             if(disp -> valor == 62){
  1463  0014B0  0060  F013  FFD9   	movff	recibir_periodo_Eusart@disp,fsr2l
  1464  0014B6  0060  F017  FFDA   	movff	recibir_periodo_Eusart@disp+1,fsr2h
  1465  0014BC  0E3E               	movlw	62
  1466  0014BE  18DE               	xorwf	postinc2,w,c
  1467  0014C0  A4D8               	btfss	status,2,c
  1468  0014C2  EF65  F00A         	goto	u741
  1469  0014C6  EF67  F00A         	goto	u740
  1470  0014CA                     u741:
  1471  0014CA  EF7B  F00A         	goto	l2572
  1472  0014CE                     u740:
  1473  0014CE                     
  1474                           ;nuestrausart.c: 60:                 disp -> recibir_dato_completo = 1;
  1475  0014CE  EE20 F009          	lfsr	2,9
  1476  0014D2  5004               	movf	recibir_periodo_Eusart@disp^0,w,c
  1477  0014D4  26D9               	addwf	fsr2l,f,c
  1478  0014D6  5005               	movf	(recibir_periodo_Eusart@disp+1)^0,w,c
  1479  0014D8  22DA               	addwfc	fsr2h,f,c
  1480  0014DA  0E01               	movlw	1
  1481  0014DC  6EDF               	movwf	indf2,c
  1482                           
  1483                           ;nuestrausart.c: 61:                 disp -> caso = 0;
  1484  0014DE  EE20 F007          	lfsr	2,7
  1485  0014E2  5004               	movf	recibir_periodo_Eusart@disp^0,w,c
  1486  0014E4  26D9               	addwf	fsr2l,f,c
  1487  0014E6  5005               	movf	(recibir_periodo_Eusart@disp+1)^0,w,c
  1488  0014E8  22DA               	addwfc	fsr2h,f,c
  1489  0014EA  0E00               	movlw	0
  1490  0014EC  6EDE               	movwf	postinc2,c
  1491  0014EE  0E00               	movlw	0
  1492  0014F0  6EDD               	movwf	postdec2,c
  1493                           
  1494                           ;nuestrausart.c: 62:             }
  1495  0014F2  EFB1  F00A         	goto	l841
  1496  0014F6                     l2572:
  1497                           
  1498                           ;nuestrausart.c: 64:                 disp -> caso = 0;
  1499  0014F6  EE20 F007          	lfsr	2,7
  1500  0014FA  5004               	movf	recibir_periodo_Eusart@disp^0,w,c
  1501  0014FC  26D9               	addwf	fsr2l,f,c
  1502  0014FE  5005               	movf	(recibir_periodo_Eusart@disp+1)^0,w,c
  1503  001500  22DA               	addwfc	fsr2h,f,c
  1504  001502  0E00               	movlw	0
  1505  001504  6EDE               	movwf	postinc2,c
  1506  001506  0E00               	movlw	0
  1507  001508  6EDD               	movwf	postdec2,c
  1508  00150A  EFB1  F00A         	goto	l841
  1509  00150E                     l2574:
  1510  00150E  EE20 F007          	lfsr	2,7
  1511  001512  5004               	movf	recibir_periodo_Eusart@disp^0,w,c
  1512  001514  26D9               	addwf	fsr2l,f,c
  1513  001516  5005               	movf	(recibir_periodo_Eusart@disp+1)^0,w,c
  1514  001518  22DA               	addwfc	fsr2h,f,c
  1515  00151A  006F FF78  F007    	movff	postinc2,??_recibir_periodo_Eusart
  1516  001520  006F FF74  F008    	movff	postdec2,??_recibir_periodo_Eusart+1
  1517                           
  1518                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1519                           ; Switch size 1, requested type "simple"
  1520                           ; Number of cases is 1, Range of values is 0 to 0
  1521                           ; switch strategies available:
  1522                           ; Name         Instructions Cycles
  1523                           ; simple_byte            4     3 (average)
  1524                           ;	Chosen strategy is simple_byte
  1525  001526  5008               	movf	(??_recibir_periodo_Eusart+1)^0,w,c
  1526  001528  0A00               	xorlw	0	; case 0
  1527  00152A  B4D8               	btfsc	status,2,c
  1528  00152C  EF9A  F00A         	goto	l2744
  1529  001530  EFB1  F00A         	goto	l841
  1530  001534                     l2744:
  1531                           
  1532                           ; Switch size 1, requested type "simple"
  1533                           ; Number of cases is 5, Range of values is 0 to 4
  1534                           ; switch strategies available:
  1535                           ; Name         Instructions Cycles
  1536                           ; simple_byte           16     9 (average)
  1537                           ;	Chosen strategy is simple_byte
  1538  001534  5007               	movf	??_recibir_periodo_Eusart^0,w,c
  1539  001536  0A00               	xorlw	0	; case 0
  1540  001538  B4D8               	btfsc	status,2,c
  1541  00153A  EFCE  F009         	goto	l2556
  1542  00153E  0A01               	xorlw	1	; case 1
  1543  001540  B4D8               	btfsc	status,2,c
  1544  001542  EFF5  F009         	goto	l2562
  1545  001546  0A03               	xorlw	3	; case 2
  1546  001548  B4D8               	btfsc	status,2,c
  1547  00154A  EF16  F00A         	goto	l2564
  1548  00154E  0A01               	xorlw	1	; case 3
  1549  001550  B4D8               	btfsc	status,2,c
  1550  001552  EF37  F00A         	goto	l2566
  1551  001556  0A07               	xorlw	7	; case 4
  1552  001558  B4D8               	btfsc	status,2,c
  1553  00155A  EF58  F00A         	goto	l2568
  1554  00155E  EFB1  F00A         	goto	l841
  1555  001562                     l841:
  1556  001562  0012               	return		;funcret
  1557  001564                     __end_of_recibir_periodo_Eusart:
  1558                           	callstack 0
  1559                           
  1560 ;; *************** function _UART1_Write *****************
  1561 ;; Defined at:
  1562 ;;		line 178 in file "mcc_generated_files/uart1.c"
  1563 ;; Parameters:    Size  Location     Type
  1564 ;;  txData          1    wreg     unsigned char 
  1565 ;; Auto vars:     Size  Location     Type
  1566 ;;  txData          1    2[COMRAM] unsigned char 
  1567 ;; Return value:  Size  Location     Type
  1568 ;;                  1    wreg      void 
  1569 ;; Registers used:
  1570 ;;		wreg
  1571 ;; Tracked objects:
  1572 ;;		On entry : 0/0
  1573 ;;		On exit  : 0/0
  1574 ;;		Unchanged: 0/0
  1575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1577 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1579 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1580 ;;Total ram usage:        1 bytes
  1581 ;; Hardware stack levels used: 1
  1582 ;; Hardware stack levels required when called: 2
  1583 ;; This function calls:
  1584 ;;		Nothing
  1585 ;; This function is called by:
  1586 ;;		_recibir_periodo_Eusart
  1587 ;; This function uses a non-reentrant model
  1588 ;;
  1589                           
  1590                           	psect	text5
  1591  001E60                     __ptext5:
  1592                           	callstack 0
  1593  001E60                     _UART1_Write:
  1594                           	callstack 27
  1595                           
  1596                           ;incstack = 0
  1597                           ;UART1_Write@txData stored from wreg
  1598  001E60  6E03               	movwf	UART1_Write@txData^0,c
  1599  001E62                     l499:
  1600                           
  1601                           ;mcc_generated_files/uart1.c: 180:     while(0 == PIR3bits.U1TXIF)
  1602  001E62  0139               	movlb	57	; () banked
  1603  001E64  A9A3               	btfss	163,4,b	;volatile
  1604  001E66  EF37  F00F         	goto	u551
  1605  001E6A  EF39  F00F         	goto	u550
  1606  001E6E                     u551:
  1607  001E6E  EF31  F00F         	goto	l499
  1608  001E72                     u550:
  1609  001E72                     
  1610                           ; BSR set to: 57
  1611                           ;mcc_generated_files/uart1.c: 184:     U1TXB = txData;
  1612  001E72  0060  F00F  FDEA   	movff	UART1_Write@txData,15850	;volatile
  1613  001E78                     
  1614                           ; BSR set to: 57
  1615  001E78  0012               	return		;funcret
  1616  001E7A                     __end_of_UART1_Write:
  1617                           	callstack 0
  1618                           
  1619 ;; *************** function _inicie_cola *****************
  1620 ;; Defined at:
  1621 ;;		line 3 in file "cola.c"
  1622 ;; Parameters:    Size  Location     Type
  1623 ;;  c               2    2[COMRAM] PTR struct eCola
  1624 ;;		 -> main@colarx(21), main@cola(21), 
  1625 ;; Auto vars:     Size  Location     Type
  1626 ;;		None
  1627 ;; Return value:  Size  Location     Type
  1628 ;;                  1    wreg      void 
  1629 ;; Registers used:
  1630 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1631 ;; Tracked objects:
  1632 ;;		On entry : 0/0
  1633 ;;		On exit  : 0/0
  1634 ;;		Unchanged: 0/0
  1635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1636 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1639 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1640 ;;Total ram usage:        2 bytes
  1641 ;; Hardware stack levels used: 1
  1642 ;; Hardware stack levels required when called: 2
  1643 ;; This function calls:
  1644 ;;		Nothing
  1645 ;; This function is called by:
  1646 ;;		_main
  1647 ;; This function uses a non-reentrant model
  1648 ;;
  1649                           
  1650                           	psect	text6
  1651  001D14                     __ptext6:
  1652                           	callstack 0
  1653  001D14                     _inicie_cola:
  1654                           	callstack 28
  1655  001D14                     
  1656                           ;cola.c: 3: void inicie_cola(eCola* c);cola.c: 4: {;cola.c: 5:     c->entrada=0;
  1657  001D14  EE20 F00F          	lfsr	2,15
  1658  001D18  5003               	movf	inicie_cola@c^0,w,c
  1659  001D1A  26D9               	addwf	fsr2l,f,c
  1660  001D1C  5004               	movf	(inicie_cola@c+1)^0,w,c
  1661  001D1E  22DA               	addwfc	fsr2h,f,c
  1662  001D20  0E00               	movlw	0
  1663  001D22  6EDE               	movwf	postinc2,c
  1664  001D24  0E00               	movlw	0
  1665  001D26  6EDD               	movwf	postdec2,c
  1666                           
  1667                           ;cola.c: 6:     c->salida=0;
  1668  001D28  EE20 F011          	lfsr	2,17
  1669  001D2C  5003               	movf	inicie_cola@c^0,w,c
  1670  001D2E  26D9               	addwf	fsr2l,f,c
  1671  001D30  5004               	movf	(inicie_cola@c+1)^0,w,c
  1672  001D32  22DA               	addwfc	fsr2h,f,c
  1673  001D34  0E00               	movlw	0
  1674  001D36  6EDE               	movwf	postinc2,c
  1675  001D38  0E00               	movlw	0
  1676  001D3A  6EDD               	movwf	postdec2,c
  1677                           
  1678                           ;cola.c: 7:     c->peso=0;
  1679  001D3C  EE20 F013          	lfsr	2,19
  1680  001D40  5003               	movf	inicie_cola@c^0,w,c
  1681  001D42  26D9               	addwf	fsr2l,f,c
  1682  001D44  5004               	movf	(inicie_cola@c+1)^0,w,c
  1683  001D46  22DA               	addwfc	fsr2h,f,c
  1684  001D48  0E00               	movlw	0
  1685  001D4A  6EDE               	movwf	postinc2,c
  1686  001D4C  0E00               	movlw	0
  1687  001D4E  6EDD               	movwf	postdec2,c
  1688  001D50  0012               	return		;funcret
  1689  001D52                     __end_of_inicie_cola:
  1690                           	callstack 0
  1691                           
  1692 ;; *************** function _inicie_SPI *****************
  1693 ;; Defined at:
  1694 ;;		line 10 in file "nuestrospi.c"
  1695 ;; Parameters:    Size  Location     Type
  1696 ;;  spi             2    2[COMRAM] PTR struct spi
  1697 ;;		 -> main@spi(14), 
  1698 ;; Auto vars:     Size  Location     Type
  1699 ;;		None
  1700 ;; Return value:  Size  Location     Type
  1701 ;;                  1    wreg      void 
  1702 ;; Registers used:
  1703 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1704 ;; Tracked objects:
  1705 ;;		On entry : 0/0
  1706 ;;		On exit  : 0/0
  1707 ;;		Unchanged: 0/0
  1708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1709 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1712 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1713 ;;Total ram usage:        2 bytes
  1714 ;; Hardware stack levels used: 1
  1715 ;; Hardware stack levels required when called: 2
  1716 ;; This function calls:
  1717 ;;		Nothing
  1718 ;; This function is called by:
  1719 ;;		_main
  1720 ;; This function uses a non-reentrant model
  1721 ;;
  1722                           
  1723                           	psect	text7
  1724  001920                     __ptext7:
  1725                           	callstack 0
  1726  001920                     _inicie_SPI:
  1727                           	callstack 28
  1728  001920                     
  1729                           ;nuestrospi.c: 11:     spi -> valor = 0;
  1730  001920  0060  F00F  FFD9   	movff	inicie_SPI@spi,fsr2l
  1731  001926  0060  F013  FFDA   	movff	inicie_SPI@spi+1,fsr2h
  1732  00192C  0E00               	movlw	0
  1733  00192E  6EDE               	movwf	postinc2,c
  1734  001930  0E00               	movlw	0
  1735  001932  6EDD               	movwf	postdec2,c
  1736  001934                     
  1737                           ;nuestrospi.c: 12:     spi -> ganancia = 0;
  1738  001934  EE20 F004          	lfsr	2,4
  1739  001938  5003               	movf	inicie_SPI@spi^0,w,c
  1740  00193A  26D9               	addwf	fsr2l,f,c
  1741  00193C  5004               	movf	(inicie_SPI@spi+1)^0,w,c
  1742  00193E  22DA               	addwfc	fsr2h,f,c
  1743  001940  0E00               	movlw	0
  1744  001942  6EDF               	movwf	indf2,c
  1745  001944                     
  1746                           ;nuestrospi.c: 13:     spi -> canal = 0;
  1747  001944  EE20 F003          	lfsr	2,3
  1748  001948  5003               	movf	inicie_SPI@spi^0,w,c
  1749  00194A  26D9               	addwf	fsr2l,f,c
  1750  00194C  5004               	movf	(inicie_SPI@spi+1)^0,w,c
  1751  00194E  22DA               	addwfc	fsr2h,f,c
  1752  001950  0E00               	movlw	0
  1753  001952  6EDF               	movwf	indf2,c
  1754  001954                     
  1755                           ;nuestrospi.c: 14:     spi -> impedancia = 0;
  1756  001954  EE20 F005          	lfsr	2,5
  1757  001958  5003               	movf	inicie_SPI@spi^0,w,c
  1758  00195A  26D9               	addwf	fsr2l,f,c
  1759  00195C  5004               	movf	(inicie_SPI@spi+1)^0,w,c
  1760  00195E  22DA               	addwfc	fsr2h,f,c
  1761  001960  0E00               	movlw	0
  1762  001962  6EDF               	movwf	indf2,c
  1763  001964                     
  1764                           ;nuestrospi.c: 15:     spi -> valor_enviando = 0;
  1765  001964  EE20 F002          	lfsr	2,2
  1766  001968  5003               	movf	inicie_SPI@spi^0,w,c
  1767  00196A  26D9               	addwf	fsr2l,f,c
  1768  00196C  5004               	movf	(inicie_SPI@spi+1)^0,w,c
  1769  00196E  22DA               	addwfc	fsr2h,f,c
  1770  001970  0E00               	movlw	0
  1771  001972  6EDF               	movwf	indf2,c
  1772  001974                     
  1773                           ;nuestrospi.c: 16:     spi -> estado_registro = 16;
  1774  001974  EE20 F006          	lfsr	2,6
  1775  001978  5003               	movf	inicie_SPI@spi^0,w,c
  1776  00197A  26D9               	addwf	fsr2l,f,c
  1777  00197C  5004               	movf	(inicie_SPI@spi+1)^0,w,c
  1778  00197E  22DA               	addwfc	fsr2h,f,c
  1779  001980  0E10               	movlw	16
  1780  001982  6EDE               	movwf	postinc2,c
  1781  001984  0E00               	movlw	0
  1782  001986  6EDD               	movwf	postdec2,c
  1783  001988                     
  1784                           ;nuestrospi.c: 17:     spi -> caso = 0;
  1785  001988  EE20 F008          	lfsr	2,8
  1786  00198C  5003               	movf	inicie_SPI@spi^0,w,c
  1787  00198E  26D9               	addwf	fsr2l,f,c
  1788  001990  5004               	movf	(inicie_SPI@spi+1)^0,w,c
  1789  001992  22DA               	addwfc	fsr2h,f,c
  1790  001994  0E00               	movlw	0
  1791  001996  6EDE               	movwf	postinc2,c
  1792  001998  0E00               	movlw	0
  1793  00199A  6EDD               	movwf	postdec2,c
  1794  00199C                     
  1795                           ;nuestrospi.c: 18:     spi -> tamano_registro = 16;
  1796  00199C  EE20 F00A          	lfsr	2,10
  1797  0019A0  5003               	movf	inicie_SPI@spi^0,w,c
  1798  0019A2  26D9               	addwf	fsr2l,f,c
  1799  0019A4  5004               	movf	(inicie_SPI@spi+1)^0,w,c
  1800  0019A6  22DA               	addwfc	fsr2h,f,c
  1801  0019A8  0E10               	movlw	16
  1802  0019AA  6EDE               	movwf	postinc2,c
  1803  0019AC  0E00               	movlw	0
  1804  0019AE  6EDD               	movwf	postdec2,c
  1805  0019B0  80BE               	bsf	190,0,c	;volatile
  1806  0019B2  88BB               	bsf	187,4,c	;volatile
  1807  0019B4  0012               	return		;funcret
  1808  0019B6                     __end_of_inicie_SPI:
  1809                           	callstack 0
  1810                           
  1811 ;; *************** function _iniciar_struct_usart *****************
  1812 ;; Defined at:
  1813 ;;		line 7 in file "nuestrausart.c"
  1814 ;; Parameters:    Size  Location     Type
  1815 ;;  disp            2    2[COMRAM] PTR struct usart
  1816 ;;		 -> main@disp(11), 
  1817 ;; Auto vars:     Size  Location     Type
  1818 ;;		None
  1819 ;; Return value:  Size  Location     Type
  1820 ;;                  1    wreg      void 
  1821 ;; Registers used:
  1822 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1823 ;; Tracked objects:
  1824 ;;		On entry : 0/0
  1825 ;;		On exit  : 0/0
  1826 ;;		Unchanged: 0/0
  1827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1828 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1831 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1832 ;;Total ram usage:        2 bytes
  1833 ;; Hardware stack levels used: 1
  1834 ;; Hardware stack levels required when called: 2
  1835 ;; This function calls:
  1836 ;;		Nothing
  1837 ;; This function is called by:
  1838 ;;		_main
  1839 ;; This function uses a non-reentrant model
  1840 ;;
  1841                           
  1842                           	psect	text8
  1843  001B62                     __ptext8:
  1844                           	callstack 0
  1845  001B62                     _iniciar_struct_usart:
  1846                           	callstack 28
  1847  001B62                     
  1848                           ;nuestrausart.c: 8:     disp -> numero1 = 0;
  1849  001B62  EE20 F001          	lfsr	2,1
  1850  001B66  5003               	movf	iniciar_struct_usart@disp^0,w,c
  1851  001B68  26D9               	addwf	fsr2l,f,c
  1852  001B6A  5004               	movf	(iniciar_struct_usart@disp+1)^0,w,c
  1853  001B6C  22DA               	addwfc	fsr2h,f,c
  1854  001B6E  0E00               	movlw	0
  1855  001B70  6EDE               	movwf	postinc2,c
  1856  001B72  0E00               	movlw	0
  1857  001B74  6EDD               	movwf	postdec2,c
  1858                           
  1859                           ;nuestrausart.c: 9:     disp -> numero2 = 0;
  1860  001B76  EE20 F003          	lfsr	2,3
  1861  001B7A  5003               	movf	iniciar_struct_usart@disp^0,w,c
  1862  001B7C  26D9               	addwf	fsr2l,f,c
  1863  001B7E  5004               	movf	(iniciar_struct_usart@disp+1)^0,w,c
  1864  001B80  22DA               	addwfc	fsr2h,f,c
  1865  001B82  0E00               	movlw	0
  1866  001B84  6EDE               	movwf	postinc2,c
  1867  001B86  0E00               	movlw	0
  1868  001B88  6EDD               	movwf	postdec2,c
  1869                           
  1870                           ;nuestrausart.c: 10:     disp -> numero3 = 0;
  1871  001B8A  EE20 F005          	lfsr	2,5
  1872  001B8E  5003               	movf	iniciar_struct_usart@disp^0,w,c
  1873  001B90  26D9               	addwf	fsr2l,f,c
  1874  001B92  5004               	movf	(iniciar_struct_usart@disp+1)^0,w,c
  1875  001B94  22DA               	addwfc	fsr2h,f,c
  1876  001B96  0E00               	movlw	0
  1877  001B98  6EDE               	movwf	postinc2,c
  1878  001B9A  0E00               	movlw	0
  1879  001B9C  6EDD               	movwf	postdec2,c
  1880  001B9E                     
  1881                           ;nuestrausart.c: 11:     disp -> valor = 0;
  1882  001B9E  0060  F00F  FFD9   	movff	iniciar_struct_usart@disp,fsr2l
  1883  001BA4  0060  F013  FFDA   	movff	iniciar_struct_usart@disp+1,fsr2h
  1884  001BAA  0E00               	movlw	0
  1885  001BAC  6EDF               	movwf	indf2,c
  1886  001BAE                     
  1887                           ;nuestrausart.c: 12:     disp -> recibir_dato_completo = 0;
  1888  001BAE  EE20 F009          	lfsr	2,9
  1889  001BB2  5003               	movf	iniciar_struct_usart@disp^0,w,c
  1890  001BB4  26D9               	addwf	fsr2l,f,c
  1891  001BB6  5004               	movf	(iniciar_struct_usart@disp+1)^0,w,c
  1892  001BB8  22DA               	addwfc	fsr2h,f,c
  1893  001BBA  0E00               	movlw	0
  1894  001BBC  6EDF               	movwf	indf2,c
  1895  001BBE                     
  1896                           ;nuestrausart.c: 13:     disp -> esperar_datos_eusart = 0;
  1897  001BBE  EE20 F00A          	lfsr	2,10
  1898  001BC2  5003               	movf	iniciar_struct_usart@disp^0,w,c
  1899  001BC4  26D9               	addwf	fsr2l,f,c
  1900  001BC6  5004               	movf	(iniciar_struct_usart@disp+1)^0,w,c
  1901  001BC8  22DA               	addwfc	fsr2h,f,c
  1902  001BCA  0E00               	movlw	0
  1903  001BCC  6EDF               	movwf	indf2,c
  1904  001BCE                     
  1905                           ;nuestrausart.c: 14:     disp -> caso = 0;
  1906  001BCE  EE20 F007          	lfsr	2,7
  1907  001BD2  5003               	movf	iniciar_struct_usart@disp^0,w,c
  1908  001BD4  26D9               	addwf	fsr2l,f,c
  1909  001BD6  5004               	movf	(iniciar_struct_usart@disp+1)^0,w,c
  1910  001BD8  22DA               	addwfc	fsr2h,f,c
  1911  001BDA  0E00               	movlw	0
  1912  001BDC  6EDE               	movwf	postinc2,c
  1913  001BDE  0E00               	movlw	0
  1914  001BE0  6EDD               	movwf	postdec2,c
  1915  001BE2  0012               	return		;funcret
  1916  001BE4                     __end_of_iniciar_struct_usart:
  1917                           	callstack 0
  1918                           
  1919 ;; *************** function _envioSPI *****************
  1920 ;; Defined at:
  1921 ;;		line 40 in file "nuestrospi.c"
  1922 ;; Parameters:    Size  Location     Type
  1923 ;;  spi             2    3[COMRAM] PTR struct spi
  1924 ;;		 -> main@spi(14), 
  1925 ;; Auto vars:     Size  Location     Type
  1926 ;;		None
  1927 ;; Return value:  Size  Location     Type
  1928 ;;                  1    wreg      void 
  1929 ;; Registers used:
  1930 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1931 ;; Tracked objects:
  1932 ;;		On entry : 0/0
  1933 ;;		On exit  : 0/0
  1934 ;;		Unchanged: 0/0
  1935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1936 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1938 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1939 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1940 ;;Total ram usage:        8 bytes
  1941 ;; Hardware stack levels used: 1
  1942 ;; Hardware stack levels required when called: 3
  1943 ;; This function calls:
  1944 ;;		_SPI1_WriteByte
  1945 ;; This function is called by:
  1946 ;;		_main
  1947 ;; This function uses a non-reentrant model
  1948 ;;
  1949                           
  1950                           	psect	text9
  1951  00163E                     __ptext9:
  1952                           	callstack 0
  1953  00163E                     _envioSPI:
  1954                           	callstack 27
  1955  00163E                     
  1956                           ;nuestrospi.c: 41:     spi -> spi_data[0] = ((spi -> canal << 7) & (0x80)) | ((spi -> ga
      +                          nancia << 5) & (0x20)) | ((spi -> impedancia << 4) & (0x10)) | ((spi -> valor >> 8) & (0
      +                          x0F));
  1957  00163E  EE20 F00C          	lfsr	2,12
  1958  001642  5004               	movf	envioSPI@spi^0,w,c
  1959  001644  26D9               	addwf	fsr2l,f,c
  1960  001646  5005               	movf	(envioSPI@spi+1)^0,w,c
  1961  001648  22DA               	addwfc	fsr2h,f,c
  1962  00164A  0060  F013  FFE1   	movff	envioSPI@spi,fsr1l
  1963  001650  0060  F017  FFE2   	movff	envioSPI@spi+1,fsr1h
  1964  001656  006F FF98  F006    	movff	postinc1,??_envioSPI
  1965  00165C  006F FF94  F007    	movff	postdec1,??_envioSPI+1
  1966  001662  C007  F006         	movff	??_envioSPI+1,??_envioSPI
  1967  001666  6A07               	clrf	(??_envioSPI+1)^0,c
  1968  001668  0E0F               	movlw	15
  1969  00166A  1606               	andwf	??_envioSPI^0,f,c
  1970  00166C  EE10 F005          	lfsr	1,5
  1971  001670  5004               	movf	envioSPI@spi^0,w,c
  1972  001672  26E1               	addwf	fsr1l,f,c
  1973  001674  5005               	movf	(envioSPI@spi+1)^0,w,c
  1974  001676  22E2               	addwfc	fsr1h,f,c
  1975  001678  50E7               	movf	indf1,w,c
  1976  00167A  6E08               	movwf	(??_envioSPI+2)^0,c
  1977  00167C  3A08               	swapf	(??_envioSPI+2)^0,f,c
  1978  00167E  0EF0               	movlw	240
  1979  001680  1608               	andwf	(??_envioSPI+2)^0,f,c
  1980  001682  0E10               	movlw	16
  1981  001684  1608               	andwf	(??_envioSPI+2)^0,f,c
  1982  001686  EE10 F004          	lfsr	1,4
  1983  00168A  5004               	movf	envioSPI@spi^0,w,c
  1984  00168C  26E1               	addwf	fsr1l,f,c
  1985  00168E  5005               	movf	(envioSPI@spi+1)^0,w,c
  1986  001690  22E2               	addwfc	fsr1h,f,c
  1987  001692  50E7               	movf	indf1,w,c
  1988  001694  6E09               	movwf	(??_envioSPI+3)^0,c
  1989  001696  0E05               	movlw	5
  1990  001698  6E0A               	movwf	(??_envioSPI+4)^0,c
  1991  00169A                     u685:
  1992  00169A  90D8               	bcf	status,0,c
  1993  00169C  3609               	rlcf	(??_envioSPI+3)^0,f,c
  1994  00169E  2E0A               	decfsz	(??_envioSPI+4)^0,f,c
  1995  0016A0  EF4D  F00B         	goto	u685
  1996  0016A4  0E20               	movlw	32
  1997  0016A6  1609               	andwf	(??_envioSPI+3)^0,f,c
  1998  0016A8  EE10 F003          	lfsr	1,3
  1999  0016AC  5004               	movf	envioSPI@spi^0,w,c
  2000  0016AE  26E1               	addwf	fsr1l,f,c
  2001  0016B0  5005               	movf	(envioSPI@spi+1)^0,w,c
  2002  0016B2  22E2               	addwfc	fsr1h,f,c
  2003  0016B4  50E7               	movf	indf1,w,c
  2004  0016B6  6E0B               	movwf	(??_envioSPI+5)^0,c
  2005  0016B8  0E00               	movlw	0
  2006  0016BA  B00B               	btfsc	(??_envioSPI+5)^0,0,c
  2007  0016BC  0E80               	movlw	128
  2008  0016BE  6E0B               	movwf	(??_envioSPI+5)^0,c
  2009  0016C0  500B               	movf	(??_envioSPI+5)^0,w,c
  2010  0016C2  0B80               	andlw	128
  2011  0016C4  1009               	iorwf	(??_envioSPI+3)^0,w,c
  2012  0016C6  1008               	iorwf	(??_envioSPI+2)^0,w,c
  2013  0016C8  1006               	iorwf	??_envioSPI^0,w,c
  2014  0016CA  6EDF               	movwf	indf2,c
  2015                           
  2016                           ;nuestrospi.c: 42:     spi -> spi_data[1] = ((spi -> valor) & 0xFF);
  2017  0016CC  0060  F013  FFD9   	movff	envioSPI@spi,fsr2l
  2018  0016D2  0060  F017  FFDA   	movff	envioSPI@spi+1,fsr2h
  2019  0016D8  EE10 F00D          	lfsr	1,13
  2020  0016DC  5004               	movf	envioSPI@spi^0,w,c
  2021  0016DE  26E1               	addwf	fsr1l,f,c
  2022  0016E0  5005               	movf	(envioSPI@spi+1)^0,w,c
  2023  0016E2  22E2               	addwfc	fsr1h,f,c
  2024  0016E4  006F FF7F FFE7     	movff	indf2,indf1
  2025  0016EA  90BE               	bcf	190,0,c	;volatile
  2026  0016EC                     
  2027                           ;nuestrospi.c: 45:     SPI1_WriteByte(spi ->spi_data[0]);
  2028  0016EC  EE20 F00C          	lfsr	2,12
  2029  0016F0  5004               	movf	envioSPI@spi^0,w,c
  2030  0016F2  26D9               	addwf	fsr2l,f,c
  2031  0016F4  5005               	movf	(envioSPI@spi+1)^0,w,c
  2032  0016F6  22DA               	addwfc	fsr2h,f,c
  2033  0016F8  50DF               	movf	indf2,w,c
  2034  0016FA  ECCE  F00F         	call	_SPI1_WriteByte
  2035  0016FE                     
  2036                           ;nuestrospi.c: 46:     SPI1_WriteByte(spi ->spi_data[1]);
  2037  0016FE  EE20 F00D          	lfsr	2,13
  2038  001702  5004               	movf	envioSPI@spi^0,w,c
  2039  001704  26D9               	addwf	fsr2l,f,c
  2040  001706  5005               	movf	(envioSPI@spi+1)^0,w,c
  2041  001708  22DA               	addwfc	fsr2h,f,c
  2042  00170A  50DF               	movf	indf2,w,c
  2043  00170C  ECCE  F00F         	call	_SPI1_WriteByte
  2044  001710  0012               	return		;funcret
  2045  001712                     __end_of_envioSPI:
  2046                           	callstack 0
  2047                           
  2048 ;; *************** function _SPI1_WriteByte *****************
  2049 ;; Defined at:
  2050 ;;		line 138 in file "mcc_generated_files/spi1.c"
  2051 ;; Parameters:    Size  Location     Type
  2052 ;;  byte            1    wreg     unsigned char 
  2053 ;; Auto vars:     Size  Location     Type
  2054 ;;  byte            1    2[COMRAM] unsigned char 
  2055 ;; Return value:  Size  Location     Type
  2056 ;;                  1    wreg      void 
  2057 ;; Registers used:
  2058 ;;		wreg
  2059 ;; Tracked objects:
  2060 ;;		On entry : 0/0
  2061 ;;		On exit  : 0/0
  2062 ;;		Unchanged: 0/0
  2063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2065 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2067 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2068 ;;Total ram usage:        1 bytes
  2069 ;; Hardware stack levels used: 1
  2070 ;; Hardware stack levels required when called: 2
  2071 ;; This function calls:
  2072 ;;		Nothing
  2073 ;; This function is called by:
  2074 ;;		_envioSPI
  2075 ;; This function uses a non-reentrant model
  2076 ;;
  2077                           
  2078                           	psect	text10
  2079  001F9C                     __ptext10:
  2080                           	callstack 0
  2081  001F9C                     _SPI1_WriteByte:
  2082                           	callstack 27
  2083                           
  2084                           ;incstack = 0
  2085                           ;SPI1_WriteByte@byte stored from wreg
  2086  001F9C  6E03               	movwf	SPI1_WriteByte@byte^0,c
  2087  001F9E                     
  2088                           ;mcc_generated_files/spi1.c: 138: void SPI1_WriteByte(uint8_t byte);mcc_generated_files/
      +                          spi1.c: 139: {;mcc_generated_files/spi1.c: 140:     SPI1TXB = byte;
  2089  001F9E  0060  F00F  FD11   	movff	SPI1_WriteByte@byte,15633	;volatile
  2090  001FA4  0012               	return		;funcret
  2091  001FA6                     __end_of_SPI1_WriteByte:
  2092                           	callstack 0
  2093                           
  2094 ;; *************** function _enviar_Eusart *****************
  2095 ;; Defined at:
  2096 ;;		line 77 in file "nuestrausart.c"
  2097 ;; Parameters:    Size  Location     Type
  2098 ;;  disp            2   11[COMRAM] PTR struct usart
  2099 ;;		 -> RAM(4095), 
  2100 ;; Auto vars:     Size  Location     Type
  2101 ;;		None
  2102 ;; Return value:  Size  Location     Type
  2103 ;;                  1    wreg      void 
  2104 ;; Registers used:
  2105 ;;		wreg, fsr2l, fsr2h, status,2
  2106 ;; Tracked objects:
  2107 ;;		On entry : 0/0
  2108 ;;		On exit  : 0/0
  2109 ;;		Unchanged: 0/0
  2110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2111 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2114 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2115 ;;Total ram usage:        2 bytes
  2116 ;; Hardware stack levels used: 1
  2117 ;; Hardware stack levels required when called: 2
  2118 ;; This function calls:
  2119 ;;		Nothing
  2120 ;; This function is called by:
  2121 ;;		_main
  2122 ;; This function uses a non-reentrant model
  2123 ;;
  2124                           
  2125                           	psect	text11
  2126  001F44                     __ptext11:
  2127                           	callstack 0
  2128  001F44                     _enviar_Eusart:
  2129                           	callstack 28
  2130  001F44                     
  2131                           ;nuestrausart.c: 78:     U1TXB = disp->valor;
  2132  001F44  0060  F033  FFD9   	movff	enviar_Eusart@disp,fsr2l
  2133  001F4A  0060  F037  FFDA   	movff	enviar_Eusart@disp+1,fsr2h
  2134  001F50  50DF               	movf	indf2,w,c
  2135  001F52  013D               	movlb	61	; () banked
  2136  001F54  6FEA               	movwf	234,b	;volatile
  2137  001F56                     
  2138                           ; BSR set to: 61
  2139  001F56  0012               	return		;funcret
  2140  001F58                     __end_of_enviar_Eusart:
  2141                           	callstack 0
  2142                           
  2143 ;; *************** function _dato_recibido_completo *****************
  2144 ;; Defined at:
  2145 ;;		line 88 in file "nuestrausart.c"
  2146 ;; Parameters:    Size  Location     Type
  2147 ;;  disp            2    2[COMRAM] PTR struct usart
  2148 ;;		 -> main@disp(11), 
  2149 ;; Auto vars:     Size  Location     Type
  2150 ;;		None
  2151 ;; Return value:  Size  Location     Type
  2152 ;;                  1    wreg      _Bool 
  2153 ;; Registers used:
  2154 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2155 ;; Tracked objects:
  2156 ;;		On entry : 0/0
  2157 ;;		On exit  : 0/0
  2158 ;;		Unchanged: 0/0
  2159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2160 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2163 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2164 ;;Total ram usage:        2 bytes
  2165 ;; Hardware stack levels used: 1
  2166 ;; Hardware stack levels required when called: 2
  2167 ;; This function calls:
  2168 ;;		Nothing
  2169 ;; This function is called by:
  2170 ;;		_main
  2171 ;; This function uses a non-reentrant model
  2172 ;;
  2173                           
  2174                           	psect	text12
  2175  001F7C                     __ptext12:
  2176                           	callstack 0
  2177  001F7C                     _dato_recibido_completo:
  2178                           	callstack 28
  2179  001F7C                     
  2180                           ;nuestrausart.c: 90:     return disp -> recibir_dato_completo;
  2181  001F7C  EE20 F009          	lfsr	2,9
  2182  001F80  5003               	movf	dato_recibido_completo@disp^0,w,c
  2183  001F82  26D9               	addwf	fsr2l,f,c
  2184  001F84  5004               	movf	(dato_recibido_completo@disp+1)^0,w,c
  2185  001F86  22DA               	addwfc	fsr2h,f,c
  2186  001F88  50DF               	movf	indf2,w,c
  2187  001F8A  0012               	return		;funcret
  2188  001F8C                     __end_of_dato_recibido_completo:
  2189                           	callstack 0
  2190                           
  2191 ;; *************** function _cola_get *****************
  2192 ;; Defined at:
  2193 ;;		line 43 in file "cola.c"
  2194 ;; Parameters:    Size  Location     Type
  2195 ;;  c               2    6[COMRAM] PTR struct eCola
  2196 ;;		 -> main@cola(21), 
  2197 ;; Auto vars:     Size  Location     Type
  2198 ;;  temp            1   10[COMRAM] unsigned char 
  2199 ;; Return value:  Size  Location     Type
  2200 ;;                  1    wreg      unsigned char 
  2201 ;; Registers used:
  2202 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2203 ;; Tracked objects:
  2204 ;;		On entry : 0/0
  2205 ;;		On exit  : 0/0
  2206 ;;		Unchanged: 0/0
  2207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2208 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2209 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2210 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2211 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2212 ;;Total ram usage:        5 bytes
  2213 ;; Hardware stack levels used: 1
  2214 ;; Hardware stack levels required when called: 3
  2215 ;; This function calls:
  2216 ;;		_cola_vacia
  2217 ;; This function is called by:
  2218 ;;		_main
  2219 ;; This function uses a non-reentrant model
  2220 ;;
  2221                           
  2222                           	psect	text13
  2223  001712                     __ptext13:
  2224                           	callstack 0
  2225  001712                     _cola_get:
  2226                           	callstack 27
  2227  001712                     
  2228                           ;cola.c: 43: DATOCOLA cola_get(eCola* c);cola.c: 44: {;cola.c: 48:     DATOCOLA temp;;co
      +                          la.c: 49:     if(!cola_vacia(c)){
  2229  001712  C007  F003         	movff	cola_get@c,cola_vacia@c
  2230  001716  C008  F004         	movff	cola_get@c+1,cola_vacia@c+1
  2231  00171A  EC6A  F00E         	call	_cola_vacia	;wreg free
  2232  00171E  5003               	movf	?_cola_vacia^0,w,c
  2233  001720  1004               	iorwf	(?_cola_vacia+1)^0,w,c
  2234  001722  A4D8               	btfss	status,2,c
  2235  001724  EF96  F00B         	goto	u711
  2236  001728  EF98  F00B         	goto	u710
  2237  00172C                     u711:
  2238  00172C  EFC0  F00B         	goto	l2538
  2239  001730                     u710:
  2240  001730                     
  2241                           ;cola.c: 50:         temp=c->data[c->salida];
  2242  001730  EE20 F011          	lfsr	2,17
  2243  001734  5007               	movf	cola_get@c^0,w,c
  2244  001736  26D9               	addwf	fsr2l,f,c
  2245  001738  5008               	movf	(cola_get@c+1)^0,w,c
  2246  00173A  22DA               	addwfc	fsr2h,f,c
  2247  00173C  006F FF78  F009    	movff	postinc2,??_cola_get
  2248  001742  006F FF74  F00A    	movff	postdec2,??_cola_get+1
  2249  001748  5009               	movf	??_cola_get^0,w,c
  2250  00174A  2407               	addwf	cola_get@c^0,w,c
  2251  00174C  6ED9               	movwf	fsr2l,c
  2252  00174E  500A               	movf	(??_cola_get+1)^0,w,c
  2253  001750  2008               	addwfc	(cola_get@c+1)^0,w,c
  2254  001752  6EDA               	movwf	fsr2h,c
  2255  001754  50DF               	movf	indf2,w,c
  2256  001756  6E0B               	movwf	cola_get@temp^0,c
  2257                           
  2258                           ;cola.c: 51:         c->salida++;
  2259  001758  EE20 F011          	lfsr	2,17
  2260  00175C  5007               	movf	cola_get@c^0,w,c
  2261  00175E  26D9               	addwf	fsr2l,f,c
  2262  001760  5008               	movf	(cola_get@c+1)^0,w,c
  2263  001762  22DA               	addwfc	fsr2h,f,c
  2264  001764  2ADE               	incf	postinc2,f,c
  2265  001766  0E00               	movlw	0
  2266  001768  22DD               	addwfc	postdec2,f,c
  2267                           
  2268                           ;cola.c: 52:         c->peso--;
  2269  00176A  EE20 F013          	lfsr	2,19
  2270  00176E  5007               	movf	cola_get@c^0,w,c
  2271  001770  26D9               	addwf	fsr2l,f,c
  2272  001772  5008               	movf	(cola_get@c+1)^0,w,c
  2273  001774  22DA               	addwfc	fsr2h,f,c
  2274  001776  06DE               	decf	postinc2,f,c
  2275  001778  0E00               	movlw	0
  2276  00177A  5ADD               	subwfb	postdec2,f,c
  2277                           
  2278                           ;cola.c: 53:     }
  2279  00177C  EFC3  F00B         	goto	l2542
  2280  001780                     l2538:
  2281                           
  2282                           ;cola.c: 55:     {;cola.c: 56:         return 1;
  2283  001780  0E01               	movlw	1
  2284  001782  EFE4  F00B         	goto	l762
  2285  001786                     l2542:
  2286                           
  2287                           ;cola.c: 60:     if (c->salida >=15)
  2288  001786  EE20 F011          	lfsr	2,17
  2289  00178A  5007               	movf	cola_get@c^0,w,c
  2290  00178C  26D9               	addwf	fsr2l,f,c
  2291  00178E  5008               	movf	(cola_get@c+1)^0,w,c
  2292  001790  22DA               	addwfc	fsr2h,f,c
  2293  001792  0E01               	movlw	1
  2294  001794  BEDB               	btfsc	plusw2,7,c
  2295  001796  EFD7  F00B         	goto	u721
  2296  00179A  0E01               	movlw	1
  2297  00179C  50DB               	movf	plusw2,w,c
  2298  00179E  E109               	bnz	u720
  2299  0017A0  0E0F               	movlw	15
  2300  0017A2  5CDE               	subwf	postinc2,w,c
  2301  0017A4  A0D8               	btfss	status,0,c
  2302  0017A6  EFD7  F00B         	goto	u721
  2303  0017AA  EFD9  F00B         	goto	u720
  2304  0017AE                     u721:
  2305  0017AE  EFE3  F00B         	goto	l2546
  2306  0017B2                     u720:
  2307  0017B2                     
  2308                           ;cola.c: 61:         c->salida=0;
  2309  0017B2  EE20 F011          	lfsr	2,17
  2310  0017B6  5007               	movf	cola_get@c^0,w,c
  2311  0017B8  26D9               	addwf	fsr2l,f,c
  2312  0017BA  5008               	movf	(cola_get@c+1)^0,w,c
  2313  0017BC  22DA               	addwfc	fsr2h,f,c
  2314  0017BE  0E00               	movlw	0
  2315  0017C0  6EDE               	movwf	postinc2,c
  2316  0017C2  0E00               	movlw	0
  2317  0017C4  6EDD               	movwf	postdec2,c
  2318  0017C6                     l2546:
  2319                           
  2320                           ;cola.c: 62:     return temp;
  2321  0017C6  500B               	movf	cola_get@temp^0,w,c
  2322  0017C8                     l762:
  2323  0017C8  0012               	return		;funcret
  2324  0017CA                     __end_of_cola_get:
  2325                           	callstack 0
  2326                           
  2327 ;; *************** function _cola_vacia *****************
  2328 ;; Defined at:
  2329 ;;		line 85 in file "cola.c"
  2330 ;; Parameters:    Size  Location     Type
  2331 ;;  c               2    2[COMRAM] PTR struct eCola
  2332 ;;		 -> main@cola(21), 
  2333 ;; Auto vars:     Size  Location     Type
  2334 ;;		None
  2335 ;; Return value:  Size  Location     Type
  2336 ;;                  2    2[COMRAM] int 
  2337 ;; Registers used:
  2338 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2339 ;; Tracked objects:
  2340 ;;		On entry : 0/0
  2341 ;;		On exit  : 0/0
  2342 ;;		Unchanged: 0/0
  2343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2344 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2346 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2347 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2348 ;;Total ram usage:        4 bytes
  2349 ;; Hardware stack levels used: 1
  2350 ;; Hardware stack levels required when called: 2
  2351 ;; This function calls:
  2352 ;;		Nothing
  2353 ;; This function is called by:
  2354 ;;		_main
  2355 ;;		_cola_get
  2356 ;; This function uses a non-reentrant model
  2357 ;;
  2358                           
  2359                           	psect	text14
  2360  001CD4                     __ptext14:
  2361                           	callstack 0
  2362  001CD4                     _cola_vacia:
  2363                           	callstack 28
  2364  001CD4                     
  2365                           ;cola.c: 85: int cola_vacia(eCola* c);cola.c: 86: {;cola.c: 87:     if (c->peso<=0){
  2366  001CD4  EE20 F013          	lfsr	2,19
  2367  001CD8  5003               	movf	cola_vacia@c^0,w,c
  2368  001CDA  26D9               	addwf	fsr2l,f,c
  2369  001CDC  5004               	movf	(cola_vacia@c+1)^0,w,c
  2370  001CDE  22DA               	addwfc	fsr2h,f,c
  2371  001CE0  0E01               	movlw	1
  2372  001CE2  BEDB               	btfsc	plusw2,7,c
  2373  001CE4  EF7F  F00E         	goto	u560
  2374  001CE8  0E01               	movlw	1
  2375  001CEA  50DB               	movf	plusw2,w,c
  2376  001CEC  E106               	bnz	u561
  2377  001CEE  04DE               	decf	postinc2,w,c
  2378  001CF0  B0D8               	btfsc	status,0,c
  2379  001CF2  EF7D  F00E         	goto	u561
  2380  001CF6  EF7F  F00E         	goto	u560
  2381  001CFA                     u561:
  2382  001CFA  EF85  F00E         	goto	l2378
  2383  001CFE                     u560:
  2384  001CFE                     
  2385                           ;cola.c: 88:         return 1;
  2386  001CFE  0E00               	movlw	0
  2387  001D00  6E04               	movwf	(?_cola_vacia+1)^0,c
  2388  001D02  0E01               	movlw	1
  2389  001D04  6E03               	movwf	?_cola_vacia^0,c
  2390  001D06  EF89  F00E         	goto	l775
  2391  001D0A                     l2378:
  2392                           
  2393                           ;cola.c: 91:         return 0;
  2394  001D0A  0E00               	movlw	0
  2395  001D0C  6E04               	movwf	(?_cola_vacia+1)^0,c
  2396  001D0E  0E00               	movlw	0
  2397  001D10  6E03               	movwf	?_cola_vacia^0,c
  2398  001D12                     l775:
  2399  001D12  0012               	return		;funcret
  2400  001D14                     __end_of_cola_vacia:
  2401                           	callstack 0
  2402                           
  2403 ;; *************** function _cola_add *****************
  2404 ;; Defined at:
  2405 ;;		line 18 in file "cola.c"
  2406 ;; Parameters:    Size  Location     Type
  2407 ;;  c               2    6[COMRAM] PTR struct eCola
  2408 ;;		 -> main@cola(21), 
  2409 ;;  dato            1    8[COMRAM] unsigned char 
  2410 ;; Auto vars:     Size  Location     Type
  2411 ;;		None
  2412 ;; Return value:  Size  Location     Type
  2413 ;;                  1    wreg      unsigned char 
  2414 ;; Registers used:
  2415 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2416 ;; Tracked objects:
  2417 ;;		On entry : 0/0
  2418 ;;		On exit  : 0/0
  2419 ;;		Unchanged: 0/0
  2420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2421 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2423 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2424 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2425 ;;Total ram usage:        5 bytes
  2426 ;; Hardware stack levels used: 1
  2427 ;; Hardware stack levels required when called: 3
  2428 ;; This function calls:
  2429 ;;		_cola_llena
  2430 ;; This function is called by:
  2431 ;;		_main
  2432 ;; This function uses a non-reentrant model
  2433 ;;
  2434                           
  2435                           	psect	text15
  2436  0017CA                     __ptext15:
  2437                           	callstack 0
  2438  0017CA                     _cola_add:
  2439                           	callstack 27
  2440  0017CA                     
  2441                           ;cola.c: 18: char cola_add(eCola* c,DATOCOLA dato);cola.c: 19: {;cola.c: 24:     if(!col
      +                          a_llena(c)){
  2442  0017CA  C007  F003         	movff	cola_add@c,cola_llena@c
  2443  0017CE  C008  F004         	movff	cola_add@c+1,cola_llena@c+1
  2444  0017D2  EC49  F00E         	call	_cola_llena	;wreg free
  2445  0017D6  5003               	movf	?_cola_llena^0,w,c
  2446  0017D8  1004               	iorwf	(?_cola_llena+1)^0,w,c
  2447  0017DA  A4D8               	btfss	status,2,c
  2448  0017DC  EFF2  F00B         	goto	u691
  2449  0017E0  EFF4  F00B         	goto	u690
  2450  0017E4                     u691:
  2451  0017E4  EF3B  F00C         	goto	l756
  2452  0017E8                     u690:
  2453  0017E8                     
  2454                           ;cola.c: 25:         c->data[c->entrada]=dato;
  2455  0017E8  EE20 F00F          	lfsr	2,15
  2456  0017EC  5007               	movf	cola_add@c^0,w,c
  2457  0017EE  26D9               	addwf	fsr2l,f,c
  2458  0017F0  5008               	movf	(cola_add@c+1)^0,w,c
  2459  0017F2  22DA               	addwfc	fsr2h,f,c
  2460  0017F4  006F FF78  F00A    	movff	postinc2,??_cola_add
  2461  0017FA  006F FF74  F00B    	movff	postdec2,??_cola_add+1
  2462  001800  500A               	movf	??_cola_add^0,w,c
  2463  001802  2407               	addwf	cola_add@c^0,w,c
  2464  001804  6ED9               	movwf	fsr2l,c
  2465  001806  500B               	movf	(??_cola_add+1)^0,w,c
  2466  001808  2008               	addwfc	(cola_add@c+1)^0,w,c
  2467  00180A  6EDA               	movwf	fsr2h,c
  2468  00180C  0060  F027  FFDF   	movff	cola_add@dato,indf2
  2469                           
  2470                           ;cola.c: 26:         c->entrada++;
  2471  001812  EE20 F00F          	lfsr	2,15
  2472  001816  5007               	movf	cola_add@c^0,w,c
  2473  001818  26D9               	addwf	fsr2l,f,c
  2474  00181A  5008               	movf	(cola_add@c+1)^0,w,c
  2475  00181C  22DA               	addwfc	fsr2h,f,c
  2476  00181E  2ADE               	incf	postinc2,f,c
  2477  001820  0E00               	movlw	0
  2478  001822  22DD               	addwfc	postdec2,f,c
  2479                           
  2480                           ;cola.c: 27:         c->peso++;
  2481  001824  EE20 F013          	lfsr	2,19
  2482  001828  5007               	movf	cola_add@c^0,w,c
  2483  00182A  26D9               	addwf	fsr2l,f,c
  2484  00182C  5008               	movf	(cola_add@c+1)^0,w,c
  2485  00182E  22DA               	addwfc	fsr2h,f,c
  2486  001830  2ADE               	incf	postinc2,f,c
  2487  001832  0E00               	movlw	0
  2488  001834  22DD               	addwfc	postdec2,f,c
  2489  001836                     
  2490                           ;cola.c: 35:     if (c->entrada >=15)
  2491  001836  EE20 F00F          	lfsr	2,15
  2492  00183A  5007               	movf	cola_add@c^0,w,c
  2493  00183C  26D9               	addwf	fsr2l,f,c
  2494  00183E  5008               	movf	(cola_add@c+1)^0,w,c
  2495  001840  22DA               	addwfc	fsr2h,f,c
  2496  001842  0E01               	movlw	1
  2497  001844  BEDB               	btfsc	plusw2,7,c
  2498  001846  EF2F  F00C         	goto	u701
  2499  00184A  0E01               	movlw	1
  2500  00184C  50DB               	movf	plusw2,w,c
  2501  00184E  E109               	bnz	u700
  2502  001850  0E0F               	movlw	15
  2503  001852  5CDE               	subwf	postinc2,w,c
  2504  001854  A0D8               	btfss	status,0,c
  2505  001856  EF2F  F00C         	goto	u701
  2506  00185A  EF31  F00C         	goto	u700
  2507  00185E                     u701:
  2508  00185E  EF3B  F00C         	goto	l756
  2509  001862                     u700:
  2510  001862                     
  2511                           ;cola.c: 36:         c->entrada=0;
  2512  001862  EE20 F00F          	lfsr	2,15
  2513  001866  5007               	movf	cola_add@c^0,w,c
  2514  001868  26D9               	addwf	fsr2l,f,c
  2515  00186A  5008               	movf	(cola_add@c+1)^0,w,c
  2516  00186C  22DA               	addwfc	fsr2h,f,c
  2517  00186E  0E00               	movlw	0
  2518  001870  6EDE               	movwf	postinc2,c
  2519  001872  0E00               	movlw	0
  2520  001874  6EDD               	movwf	postdec2,c
  2521  001876                     l756:
  2522  001876  0012               	return		;funcret
  2523  001878                     __end_of_cola_add:
  2524                           	callstack 0
  2525                           
  2526 ;; *************** function _cola_llena *****************
  2527 ;; Defined at:
  2528 ;;		line 75 in file "cola.c"
  2529 ;; Parameters:    Size  Location     Type
  2530 ;;  c               2    2[COMRAM] PTR struct eCola
  2531 ;;		 -> main@cola(21), 
  2532 ;; Auto vars:     Size  Location     Type
  2533 ;;		None
  2534 ;; Return value:  Size  Location     Type
  2535 ;;                  2    2[COMRAM] int 
  2536 ;; Registers used:
  2537 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2538 ;; Tracked objects:
  2539 ;;		On entry : 0/0
  2540 ;;		On exit  : 0/0
  2541 ;;		Unchanged: 0/0
  2542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2543 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2545 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2546 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2547 ;;Total ram usage:        4 bytes
  2548 ;; Hardware stack levels used: 1
  2549 ;; Hardware stack levels required when called: 2
  2550 ;; This function calls:
  2551 ;;		Nothing
  2552 ;; This function is called by:
  2553 ;;		_cola_add
  2554 ;; This function uses a non-reentrant model
  2555 ;;
  2556                           
  2557                           	psect	text16
  2558  001C92                     __ptext16:
  2559                           	callstack 0
  2560  001C92                     _cola_llena:
  2561                           	callstack 27
  2562  001C92                     
  2563                           ;cola.c: 76:     if (c->peso>=15){
  2564  001C92  EE20 F013          	lfsr	2,19
  2565  001C96  5003               	movf	cola_llena@c^0,w,c
  2566  001C98  26D9               	addwf	fsr2l,f,c
  2567  001C9A  5004               	movf	(cola_llena@c+1)^0,w,c
  2568  001C9C  22DA               	addwfc	fsr2h,f,c
  2569  001C9E  0E01               	movlw	1
  2570  001CA0  BEDB               	btfsc	plusw2,7,c
  2571  001CA2  EF5D  F00E         	goto	u571
  2572  001CA6  0E01               	movlw	1
  2573  001CA8  50DB               	movf	plusw2,w,c
  2574  001CAA  E109               	bnz	u570
  2575  001CAC  0E0F               	movlw	15
  2576  001CAE  5CDE               	subwf	postinc2,w,c
  2577  001CB0  A0D8               	btfss	status,0,c
  2578  001CB2  EF5D  F00E         	goto	u571
  2579  001CB6  EF5F  F00E         	goto	u570
  2580  001CBA                     u571:
  2581  001CBA  EF65  F00E         	goto	l2390
  2582  001CBE                     u570:
  2583  001CBE                     
  2584                           ;cola.c: 77:         return 1;
  2585  001CBE  0E00               	movlw	0
  2586  001CC0  6E04               	movwf	(?_cola_llena+1)^0,c
  2587  001CC2  0E01               	movlw	1
  2588  001CC4  6E03               	movwf	?_cola_llena^0,c
  2589  001CC6  EF69  F00E         	goto	l770
  2590  001CCA                     l2390:
  2591                           
  2592                           ;cola.c: 80:         return 0;
  2593  001CCA  0E00               	movlw	0
  2594  001CCC  6E04               	movwf	(?_cola_llena+1)^0,c
  2595  001CCE  0E00               	movlw	0
  2596  001CD0  6E03               	movwf	?_cola_llena^0,c
  2597  001CD2                     l770:
  2598  001CD2  0012               	return		;funcret
  2599  001CD4                     __end_of_cola_llena:
  2600                           	callstack 0
  2601                           
  2602 ;; *************** function _actualize_valor *****************
  2603 ;; Defined at:
  2604 ;;		line 33 in file "nuestrospi.c"
  2605 ;; Parameters:    Size  Location     Type
  2606 ;;  spi             2    2[COMRAM] PTR struct spi
  2607 ;;		 -> main@spi(14), 
  2608 ;;  valorspi        2    4[COMRAM] unsigned int 
  2609 ;; Auto vars:     Size  Location     Type
  2610 ;;		None
  2611 ;; Return value:  Size  Location     Type
  2612 ;;                  1    wreg      void 
  2613 ;; Registers used:
  2614 ;;		fsr2l, fsr2h
  2615 ;; Tracked objects:
  2616 ;;		On entry : 0/0
  2617 ;;		On exit  : 0/0
  2618 ;;		Unchanged: 0/0
  2619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2620 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2623 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2624 ;;Total ram usage:        4 bytes
  2625 ;; Hardware stack levels used: 1
  2626 ;; Hardware stack levels required when called: 2
  2627 ;; This function calls:
  2628 ;;		Nothing
  2629 ;; This function is called by:
  2630 ;;		_main
  2631 ;; This function uses a non-reentrant model
  2632 ;;
  2633                           
  2634                           	psect	text17
  2635  001E7A                     __ptext17:
  2636                           	callstack 0
  2637  001E7A                     _actualize_valor:
  2638                           	callstack 28
  2639  001E7A                     
  2640                           ;nuestrospi.c: 34:     spi -> valor = valorspi;
  2641  001E7A  0060  F00F  FFD9   	movff	actualize_valor@spi,fsr2l
  2642  001E80  0060  F013  FFDA   	movff	actualize_valor@spi+1,fsr2h
  2643  001E86  0060  F017  FFDE   	movff	actualize_valor@valorspi,postinc2
  2644  001E8C  0060  F01B  FFDD   	movff	actualize_valor@valorspi+1,postdec2
  2645  001E92  0012               	return		;funcret
  2646  001E94                     __end_of_actualize_valor:
  2647                           	callstack 0
  2648                           
  2649 ;; *************** function _actualizar_recibido_Eusart *****************
  2650 ;; Defined at:
  2651 ;;		line 93 in file "nuestrausart.c"
  2652 ;; Parameters:    Size  Location     Type
  2653 ;;  disp            2    8[COMRAM] PTR struct usart
  2654 ;;		 -> main@disp(11), 
  2655 ;; Auto vars:     Size  Location     Type
  2656 ;;		None
  2657 ;; Return value:  Size  Location     Type
  2658 ;;                  2    8[COMRAM] int 
  2659 ;; Registers used:
  2660 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2661 ;; Tracked objects:
  2662 ;;		On entry : 0/0
  2663 ;;		On exit  : 0/0
  2664 ;;		Unchanged: 0/0
  2665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2666 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2668 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2669 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2670 ;;Total ram usage:        6 bytes
  2671 ;; Hardware stack levels used: 1
  2672 ;; Hardware stack levels required when called: 3
  2673 ;; This function calls:
  2674 ;;		___wmul
  2675 ;; This function is called by:
  2676 ;;		_main
  2677 ;; This function uses a non-reentrant model
  2678 ;;
  2679                           
  2680                           	psect	text18
  2681  0019B6                     __ptext18:
  2682                           	callstack 0
  2683  0019B6                     _actualizar_recibido_Eusart:
  2684                           	callstack 27
  2685  0019B6                     
  2686                           ;nuestrausart.c: 94:     disp -> recibir_dato_completo = 0;
  2687  0019B6  EE20 F009          	lfsr	2,9
  2688  0019BA  5009               	movf	actualizar_recibido_Eusart@disp^0,w,c
  2689  0019BC  26D9               	addwf	fsr2l,f,c
  2690  0019BE  500A               	movf	(actualizar_recibido_Eusart@disp+1)^0,w,c
  2691  0019C0  22DA               	addwfc	fsr2h,f,c
  2692  0019C2  0E00               	movlw	0
  2693  0019C4  6EDF               	movwf	indf2,c
  2694  0019C6                     
  2695                           ;nuestrausart.c: 95:     return ((disp -> numero1 - 48)*100 + (disp -> numero2 - 48)*10 
      +                          + (disp -> numero3 - 48));
  2696  0019C6  EE20 F005          	lfsr	2,5
  2697  0019CA  5009               	movf	actualizar_recibido_Eusart@disp^0,w,c
  2698  0019CC  26D9               	addwf	fsr2l,f,c
  2699  0019CE  500A               	movf	(actualizar_recibido_Eusart@disp+1)^0,w,c
  2700  0019D0  22DA               	addwfc	fsr2h,f,c
  2701  0019D2  006F FF78  F00B    	movff	postinc2,??_actualizar_recibido_Eusart
  2702  0019D8  006F FF74  F00C    	movff	postdec2,??_actualizar_recibido_Eusart+1
  2703  0019DE  EE20 F001          	lfsr	2,1
  2704  0019E2  5009               	movf	actualizar_recibido_Eusart@disp^0,w,c
  2705  0019E4  26D9               	addwf	fsr2l,f,c
  2706  0019E6  500A               	movf	(actualizar_recibido_Eusart@disp+1)^0,w,c
  2707  0019E8  22DA               	addwfc	fsr2h,f,c
  2708  0019EA  006F FF78  F003    	movff	postinc2,___wmul@multiplier
  2709  0019F0  006F FF74  F004    	movff	postdec2,___wmul@multiplier+1
  2710  0019F6  0E00               	movlw	0
  2711  0019F8  6E06               	movwf	(___wmul@multiplicand+1)^0,c
  2712  0019FA  0E64               	movlw	100
  2713  0019FC  6E05               	movwf	___wmul@multiplicand^0,c
  2714  0019FE  ECD5  F00E         	call	___wmul	;wreg free
  2715  001A02  C003  F00D         	movff	?___wmul,??_actualizar_recibido_Eusart+2
  2716  001A06  C004  F00E         	movff	?___wmul+1,??_actualizar_recibido_Eusart+3
  2717  001A0A  EE20 F003          	lfsr	2,3
  2718  001A0E  5009               	movf	actualizar_recibido_Eusart@disp^0,w,c
  2719  001A10  26D9               	addwf	fsr2l,f,c
  2720  001A12  500A               	movf	(actualizar_recibido_Eusart@disp+1)^0,w,c
  2721  001A14  22DA               	addwfc	fsr2h,f,c
  2722  001A16  006F FF78  F003    	movff	postinc2,___wmul@multiplier
  2723  001A1C  006F FF74  F004    	movff	postdec2,___wmul@multiplier+1
  2724  001A22  0E00               	movlw	0
  2725  001A24  6E06               	movwf	(___wmul@multiplicand+1)^0,c
  2726  001A26  0E0A               	movlw	10
  2727  001A28  6E05               	movwf	___wmul@multiplicand^0,c
  2728  001A2A  ECD5  F00E         	call	___wmul	;wreg free
  2729  001A2E  5003               	movf	?___wmul^0,w,c
  2730  001A30  260D               	addwf	(??_actualizar_recibido_Eusart+2)^0,f,c
  2731  001A32  5004               	movf	(?___wmul+1)^0,w,c
  2732  001A34  220E               	addwfc	(??_actualizar_recibido_Eusart+3)^0,f,c
  2733  001A36  500B               	movf	??_actualizar_recibido_Eusart^0,w,c
  2734  001A38  260D               	addwf	(??_actualizar_recibido_Eusart+2)^0,f,c
  2735  001A3A  500C               	movf	(??_actualizar_recibido_Eusart+1)^0,w,c
  2736  001A3C  220E               	addwfc	(??_actualizar_recibido_Eusart+3)^0,f,c
  2737  001A3E  0E30               	movlw	48
  2738  001A40  240D               	addwf	(??_actualizar_recibido_Eusart+2)^0,w,c
  2739  001A42  6E09               	movwf	?_actualizar_recibido_Eusart^0,c
  2740  001A44  0EEB               	movlw	235
  2741  001A46  200E               	addwfc	(??_actualizar_recibido_Eusart+3)^0,w,c
  2742  001A48  6E0A               	movwf	(?_actualizar_recibido_Eusart+1)^0,c
  2743  001A4A  0012               	return		;funcret
  2744  001A4C                     __end_of_actualizar_recibido_Eusart:
  2745                           	callstack 0
  2746                           
  2747 ;; *************** function ___wmul *****************
  2748 ;; Defined at:
  2749 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul16.c"
  2750 ;; Parameters:    Size  Location     Type
  2751 ;;  multiplier      2    2[COMRAM] unsigned int 
  2752 ;;  multiplicand    2    4[COMRAM] unsigned int 
  2753 ;; Auto vars:     Size  Location     Type
  2754 ;;  product         2    6[COMRAM] unsigned int 
  2755 ;; Return value:  Size  Location     Type
  2756 ;;                  2    2[COMRAM] unsigned int 
  2757 ;; Registers used:
  2758 ;;		wreg, status,2, status,0, prodl, prodh
  2759 ;; Tracked objects:
  2760 ;;		On entry : 0/0
  2761 ;;		On exit  : 0/0
  2762 ;;		Unchanged: 0/0
  2763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2764 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2765 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2767 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2768 ;;Total ram usage:        6 bytes
  2769 ;; Hardware stack levels used: 1
  2770 ;; Hardware stack levels required when called: 2
  2771 ;; This function calls:
  2772 ;;		Nothing
  2773 ;; This function is called by:
  2774 ;;		_actualizar_recibido_Eusart
  2775 ;; This function uses a non-reentrant model
  2776 ;;
  2777                           
  2778                           	psect	text19
  2779  001DAA                     __ptext19:
  2780                           	callstack 0
  2781  001DAA                     ___wmul:
  2782                           	callstack 27
  2783  001DAA  5003               	movf	___wmul@multiplier^0,w,c
  2784  001DAC  0205               	mulwf	___wmul@multiplicand^0,c
  2785  001DAE  006F FFCC  F007    	movff	prodl,___wmul@product
  2786  001DB4  006F FFD0  F008    	movff	prodh,___wmul@product+1
  2787  001DBA  5003               	movf	___wmul@multiplier^0,w,c
  2788  001DBC  0206               	mulwf	(___wmul@multiplicand+1)^0,c
  2789  001DBE  50F3               	movf	243,w,c
  2790  001DC0  2608               	addwf	(___wmul@product+1)^0,f,c
  2791  001DC2  5004               	movf	(___wmul@multiplier+1)^0,w,c
  2792  001DC4  0205               	mulwf	___wmul@multiplicand^0,c
  2793  001DC6  50F3               	movf	243,w,c
  2794  001DC8  2608               	addwf	(___wmul@product+1)^0,f,c
  2795  001DCA  C007  F003         	movff	___wmul@product,?___wmul
  2796  001DCE  C008  F004         	movff	___wmul@product+1,?___wmul+1
  2797  001DD2  0012               	return		;funcret
  2798  001DD4                     __end_of___wmul:
  2799                           	callstack 0
  2800                           
  2801 ;; *************** function _UART1_is_tx_ready *****************
  2802 ;; Defined at:
  2803 ;;		line 139 in file "mcc_generated_files/uart1.c"
  2804 ;; Parameters:    Size  Location     Type
  2805 ;;		None
  2806 ;; Auto vars:     Size  Location     Type
  2807 ;;		None
  2808 ;; Return value:  Size  Location     Type
  2809 ;;                  1    wreg      _Bool 
  2810 ;; Registers used:
  2811 ;;		wreg, status,2
  2812 ;; Tracked objects:
  2813 ;;		On entry : 0/0
  2814 ;;		On exit  : 0/0
  2815 ;;		Unchanged: 0/0
  2816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2818 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2820 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2821 ;;Total ram usage:        1 bytes
  2822 ;; Hardware stack levels used: 1
  2823 ;; Hardware stack levels required when called: 2
  2824 ;; This function calls:
  2825 ;;		Nothing
  2826 ;; This function is called by:
  2827 ;;		_main
  2828 ;; This function uses a non-reentrant model
  2829 ;;
  2830                           
  2831                           	psect	text20
  2832  001D52                     __ptext20:
  2833                           	callstack 0
  2834  001D52                     _UART1_is_tx_ready:
  2835                           	callstack 28
  2836  001D52                     
  2837                           ;mcc_generated_files/uart1.c: 141:     return (_Bool)(PIR3bits.U1TXIF && U1CON0bits.TXEN
      +                          );
  2838  001D52  0E00               	movlw	0
  2839  001D54  6E03               	movwf	_UART1_is_tx_ready$1114^0,c
  2840  001D56  0139               	movlb	57	; () banked
  2841  001D58  A9A3               	btfss	163,4,b	;volatile
  2842  001D5A  EFB1  F00E         	goto	u631
  2843  001D5E  EFB3  F00E         	goto	u630
  2844  001D62                     u631:
  2845  001D62  EFBD  F00E         	goto	l480
  2846  001D66                     u630:
  2847  001D66                     
  2848                           ; BSR set to: 57
  2849  001D66  013D               	movlb	61	; () banked
  2850  001D68  ABF2               	btfss	242,5,b	;volatile
  2851  001D6A  EFB9  F00E         	goto	u641
  2852  001D6E  EFBB  F00E         	goto	u640
  2853  001D72                     u641:
  2854  001D72  EFBD  F00E         	goto	l480
  2855  001D76                     u640:
  2856  001D76                     
  2857                           ; BSR set to: 61
  2858  001D76  0E01               	movlw	1
  2859  001D78  6E03               	movwf	_UART1_is_tx_ready$1114^0,c
  2860  001D7A                     l480:
  2861  001D7A  5003               	movf	_UART1_is_tx_ready$1114^0,w,c
  2862  001D7C  0012               	return		;funcret
  2863  001D7E                     __end_of_UART1_is_tx_ready:
  2864                           	callstack 0
  2865                           
  2866 ;; *************** function _UART1_is_rx_ready *****************
  2867 ;; Defined at:
  2868 ;;		line 134 in file "mcc_generated_files/uart1.c"
  2869 ;; Parameters:    Size  Location     Type
  2870 ;;		None
  2871 ;; Auto vars:     Size  Location     Type
  2872 ;;		None
  2873 ;; Return value:  Size  Location     Type
  2874 ;;                  1    wreg      _Bool 
  2875 ;; Registers used:
  2876 ;;		wreg
  2877 ;; Tracked objects:
  2878 ;;		On entry : 0/0
  2879 ;;		On exit  : 0/0
  2880 ;;		Unchanged: 0/0
  2881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2885 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2886 ;;Total ram usage:        0 bytes
  2887 ;; Hardware stack levels used: 1
  2888 ;; Hardware stack levels required when called: 2
  2889 ;; This function calls:
  2890 ;;		Nothing
  2891 ;; This function is called by:
  2892 ;;		_main
  2893 ;; This function uses a non-reentrant model
  2894 ;;
  2895                           
  2896                           	psect	text21
  2897  001EC6                     __ptext21:
  2898                           	callstack 0
  2899  001EC6                     _UART1_is_rx_ready:
  2900                           	callstack 28
  2901  001EC6                     
  2902                           ;mcc_generated_files/uart1.c: 136:     return (_Bool)(PIR3bits.U1RXIF);
  2903  001EC6  0139               	movlb	57	; () banked
  2904  001EC8  B7A3               	btfsc	163,3,b	;volatile
  2905  001ECA  EF69  F00F         	goto	u621
  2906  001ECE  EF6C  F00F         	goto	u620
  2907  001ED2                     u621:
  2908  001ED2  0E01               	movlw	1
  2909  001ED4  EF6D  F00F         	goto	u626
  2910  001ED8                     u620:
  2911  001ED8  0E00               	movlw	0
  2912  001EDA                     u626:
  2913  001EDA                     
  2914                           ; BSR set to: 57
  2915  001EDA  0012               	return		;funcret
  2916  001EDC                     __end_of_UART1_is_rx_ready:
  2917                           	callstack 0
  2918                           
  2919 ;; *************** function _Tm_Procese_tiempo *****************
  2920 ;; Defined at:
  2921 ;;		line 33 in file "nuestrostimers.c"
  2922 ;; Parameters:    Size  Location     Type
  2923 ;;  ctp             2    2[COMRAM] PTR struct Tm_Periodico
  2924 ;;		 -> main@time_out(7), 
  2925 ;; Auto vars:     Size  Location     Type
  2926 ;;		None
  2927 ;; Return value:  Size  Location     Type
  2928 ;;                  1    wreg      void 
  2929 ;; Registers used:
  2930 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2931 ;; Tracked objects:
  2932 ;;		On entry : 0/0
  2933 ;;		On exit  : 0/0
  2934 ;;		Unchanged: 0/0
  2935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2936 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2938 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2939 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2940 ;;Total ram usage:        6 bytes
  2941 ;; Hardware stack levels used: 1
  2942 ;; Hardware stack levels required when called: 2
  2943 ;; This function calls:
  2944 ;;		Nothing
  2945 ;; This function is called by:
  2946 ;;		_main
  2947 ;; This function uses a non-reentrant model
  2948 ;;
  2949                           
  2950                           	psect	text22
  2951  001564                     __ptext22:
  2952                           	callstack 0
  2953  001564                     _Tm_Procese_tiempo:
  2954                           	callstack 28
  2955  001564                     
  2956                           ;nuestrostimers.c: 33: void Tm_Procese_tiempo (Tm_Periodico *ctp);nuestrostimers.c: 35: 
      +                          {;nuestrostimers.c: 41:  if (ctp->banderas & 0x01U)
  2957  001564  EE20 F006          	lfsr	2,6
  2958  001568  5003               	movf	Tm_Procese_tiempo@ctp^0,w,c
  2959  00156A  26D9               	addwf	fsr2l,f,c
  2960  00156C  5004               	movf	(Tm_Procese_tiempo@ctp+1)^0,w,c
  2961  00156E  22DA               	addwfc	fsr2h,f,c
  2962  001570  A0DF               	btfss	indf2,0,c
  2963  001572  EFBD  F00A         	goto	u651
  2964  001576  EFBF  F00A         	goto	u650
  2965  00157A                     u651:
  2966  00157A  EFF1  F00A         	goto	l2504
  2967  00157E                     u650:
  2968  00157E                     
  2969                           ;nuestrostimers.c: 43:  {;nuestrostimers.c: 45:   --(ctp->contador);
  2970  00157E  0060  F00F  FFD9   	movff	Tm_Procese_tiempo@ctp,fsr2l
  2971  001584  0060  F013  FFDA   	movff	Tm_Procese_tiempo@ctp+1,fsr2h
  2972  00158A  06DE               	decf	postinc2,f,c
  2973  00158C  0E00               	movlw	0
  2974  00158E  5ADD               	subwfb	postdec2,f,c
  2975                           
  2976                           ;nuestrostimers.c: 47:   if ( !(ctp->contador) )
  2977  001590  0060  F00F  FFD9   	movff	Tm_Procese_tiempo@ctp,fsr2l
  2978  001596  0060  F013  FFDA   	movff	Tm_Procese_tiempo@ctp+1,fsr2h
  2979  00159C  50DE               	movf	postinc2,w,c
  2980  00159E  10DE               	iorwf	postinc2,w,c
  2981  0015A0  A4D8               	btfss	status,2,c
  2982  0015A2  EFD5  F00A         	goto	u661
  2983  0015A6  EFD7  F00A         	goto	u660
  2984  0015AA                     u661:
  2985  0015AA  EFF1  F00A         	goto	l2504
  2986  0015AE                     u660:
  2987  0015AE                     
  2988                           ;nuestrostimers.c: 49:   {;nuestrostimers.c: 51:    ctp->banderas |= 0x02U;
  2989  0015AE  EE20 F006          	lfsr	2,6
  2990  0015B2  5003               	movf	Tm_Procese_tiempo@ctp^0,w,c
  2991  0015B4  26D9               	addwf	fsr2l,f,c
  2992  0015B6  5004               	movf	(Tm_Procese_tiempo@ctp+1)^0,w,c
  2993  0015B8  22DA               	addwfc	fsr2h,f,c
  2994  0015BA  0E00               	movlw	0
  2995  0015BC  82DB               	bsf	plusw2,1,c
  2996  0015BE                     
  2997                           ;nuestrostimers.c: 53:    ctp->contador = ctp->periodo;
  2998  0015BE  EE20 F002          	lfsr	2,2
  2999  0015C2  5003               	movf	Tm_Procese_tiempo@ctp^0,w,c
  3000  0015C4  26D9               	addwf	fsr2l,f,c
  3001  0015C6  5004               	movf	(Tm_Procese_tiempo@ctp+1)^0,w,c
  3002  0015C8  22DA               	addwfc	fsr2h,f,c
  3003  0015CA  0060  F00F  FFE1   	movff	Tm_Procese_tiempo@ctp,fsr1l
  3004  0015D0  0060  F013  FFE2   	movff	Tm_Procese_tiempo@ctp+1,fsr1h
  3005  0015D6  006F FF7B FFE6     	movff	postinc2,postinc1
  3006  0015DC  006F FF77 FFE5     	movff	postdec2,postdec1
  3007  0015E2                     l2504:
  3008                           
  3009                           ;nuestrostimers.c: 59:  if (ctp->banderas & 0x04U)
  3010  0015E2  EE20 F006          	lfsr	2,6
  3011  0015E6  5003               	movf	Tm_Procese_tiempo@ctp^0,w,c
  3012  0015E8  26D9               	addwf	fsr2l,f,c
  3013  0015EA  5004               	movf	(Tm_Procese_tiempo@ctp+1)^0,w,c
  3014  0015EC  22DA               	addwfc	fsr2h,f,c
  3015  0015EE  A4DF               	btfss	indf2,2,c
  3016  0015F0  EFFC  F00A         	goto	u671
  3017  0015F4  EFFE  F00A         	goto	u670
  3018  0015F8                     u671:
  3019  0015F8  EF1E  F00B         	goto	l872
  3020  0015FC                     u670:
  3021  0015FC                     
  3022                           ;nuestrostimers.c: 61:  ctp->timeout=ctp->timeout-1;
  3023  0015FC  0EFF               	movlw	255
  3024  0015FE  6E05               	movwf	??_Tm_Procese_tiempo^0,c
  3025  001600  0EFF               	movlw	255
  3026  001602  6E06               	movwf	(??_Tm_Procese_tiempo+1)^0,c
  3027  001604  EE20 F004          	lfsr	2,4
  3028  001608  5003               	movf	Tm_Procese_tiempo@ctp^0,w,c
  3029  00160A  26D9               	addwf	fsr2l,f,c
  3030  00160C  5004               	movf	(Tm_Procese_tiempo@ctp+1)^0,w,c
  3031  00160E  22DA               	addwfc	fsr2h,f,c
  3032  001610  006F FF78  F007    	movff	postinc2,??_Tm_Procese_tiempo+2
  3033  001616  006F FF74  F008    	movff	postdec2,??_Tm_Procese_tiempo+3
  3034  00161C  5005               	movf	??_Tm_Procese_tiempo^0,w,c
  3035  00161E  2607               	addwf	(??_Tm_Procese_tiempo+2)^0,f,c
  3036  001620  5006               	movf	(??_Tm_Procese_tiempo+1)^0,w,c
  3037  001622  2208               	addwfc	(??_Tm_Procese_tiempo+3)^0,f,c
  3038  001624  EE20 F004          	lfsr	2,4
  3039  001628  5003               	movf	Tm_Procese_tiempo@ctp^0,w,c
  3040  00162A  26D9               	addwf	fsr2l,f,c
  3041  00162C  5004               	movf	(Tm_Procese_tiempo@ctp+1)^0,w,c
  3042  00162E  22DA               	addwfc	fsr2h,f,c
  3043  001630  0060  F01F  FFDE   	movff	??_Tm_Procese_tiempo+2,postinc2
  3044  001636  0060  F023  FFDD   	movff	??_Tm_Procese_tiempo+3,postdec2
  3045  00163C                     l872:
  3046  00163C  0012               	return		;funcret
  3047  00163E                     __end_of_Tm_Procese_tiempo:
  3048                           	callstack 0
  3049                           
  3050 ;; *************** function _Tm_Inicie_periodico *****************
  3051 ;; Defined at:
  3052 ;;		line 21 in file "nuestrostimers.c"
  3053 ;; Parameters:    Size  Location     Type
  3054 ;;  ctp             2   14[COMRAM] PTR struct Tm_Periodico
  3055 ;;		 -> main@time_out(7), 
  3056 ;;  periodo         2   16[COMRAM] unsigned int 
  3057 ;; Auto vars:     Size  Location     Type
  3058 ;;		None
  3059 ;; Return value:  Size  Location     Type
  3060 ;;                  1    wreg      void 
  3061 ;; Registers used:
  3062 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3063 ;; Tracked objects:
  3064 ;;		On entry : 0/0
  3065 ;;		On exit  : 0/0
  3066 ;;		Unchanged: 0/0
  3067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3068 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3071 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3072 ;;Total ram usage:        4 bytes
  3073 ;; Hardware stack levels used: 1
  3074 ;; Hardware stack levels required when called: 2
  3075 ;; This function calls:
  3076 ;;		Nothing
  3077 ;; This function is called by:
  3078 ;;		_main
  3079 ;; This function uses a non-reentrant model
  3080 ;;
  3081                           
  3082                           	psect	text23
  3083  001C40                     __ptext23:
  3084                           	callstack 0
  3085  001C40                     _Tm_Inicie_periodico:
  3086                           	callstack 28
  3087  001C40                     
  3088                           ;nuestrostimers.c: 21: void Tm_Inicie_periodico (Tm_Periodico *ctp,unsigned int periodo)
      +                          ;nuestrostimers.c: 23: {;nuestrostimers.c: 25:  ctp->banderas |= 0x01U;
  3089  001C40  EE20 F006          	lfsr	2,6
  3090  001C44  500F               	movf	Tm_Inicie_periodico@ctp^0,w,c
  3091  001C46  26D9               	addwf	fsr2l,f,c
  3092  001C48  5010               	movf	(Tm_Inicie_periodico@ctp+1)^0,w,c
  3093  001C4A  22DA               	addwfc	fsr2h,f,c
  3094  001C4C  0E00               	movlw	0
  3095  001C4E  80DB               	bsf	plusw2,0,c
  3096                           
  3097                           ;nuestrostimers.c: 27:  ctp->banderas &= ~0x02U;
  3098  001C50  EE20 F006          	lfsr	2,6
  3099  001C54  500F               	movf	Tm_Inicie_periodico@ctp^0,w,c
  3100  001C56  26D9               	addwf	fsr2l,f,c
  3101  001C58  5010               	movf	(Tm_Inicie_periodico@ctp+1)^0,w,c
  3102  001C5A  22DA               	addwfc	fsr2h,f,c
  3103  001C5C  0EFD               	movlw	253
  3104  001C5E  16DF               	andwf	indf2,f,c
  3105  001C60                     
  3106                           ;nuestrostimers.c: 29:  ctp->contador = ctp->periodo = periodo;
  3107  001C60  EE20 F002          	lfsr	2,2
  3108  001C64  500F               	movf	Tm_Inicie_periodico@ctp^0,w,c
  3109  001C66  26D9               	addwf	fsr2l,f,c
  3110  001C68  5010               	movf	(Tm_Inicie_periodico@ctp+1)^0,w,c
  3111  001C6A  22DA               	addwfc	fsr2h,f,c
  3112  001C6C  0060  F047  FFDE   	movff	Tm_Inicie_periodico@periodo,postinc2
  3113  001C72  0060  F04B  FFDD   	movff	Tm_Inicie_periodico@periodo+1,postdec2
  3114  001C78  0060  F03F  FFE1   	movff	Tm_Inicie_periodico@ctp,fsr1l
  3115  001C7E  0060  F043  FFE2   	movff	Tm_Inicie_periodico@ctp+1,fsr1h
  3116  001C84  006F FF7B FFE6     	movff	postinc2,postinc1
  3117  001C8A  006F FF77 FFE5     	movff	postdec2,postdec1
  3118  001C90  0012               	return		;funcret
  3119  001C92                     __end_of_Tm_Inicie_periodico:
  3120                           	callstack 0
  3121                           
  3122 ;; *************** function _Tm_Hubo_periodico *****************
  3123 ;; Defined at:
  3124 ;;		line 65 in file "nuestrostimers.c"
  3125 ;; Parameters:    Size  Location     Type
  3126 ;;  ctp             2    2[COMRAM] PTR struct Tm_Periodico
  3127 ;;		 -> main@time_out(7), 
  3128 ;; Auto vars:     Size  Location     Type
  3129 ;;		None
  3130 ;; Return value:  Size  Location     Type
  3131 ;;                  1    wreg      unsigned char 
  3132 ;; Registers used:
  3133 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3134 ;; Tracked objects:
  3135 ;;		On entry : 0/0
  3136 ;;		On exit  : 0/0
  3137 ;;		Unchanged: 0/0
  3138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3139 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3142 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3143 ;;Total ram usage:        2 bytes
  3144 ;; Hardware stack levels used: 1
  3145 ;; Hardware stack levels required when called: 2
  3146 ;; This function calls:
  3147 ;;		Nothing
  3148 ;; This function is called by:
  3149 ;;		_main
  3150 ;; This function uses a non-reentrant model
  3151 ;;
  3152                           
  3153                           	psect	text24
  3154  001F58                     __ptext24:
  3155                           	callstack 0
  3156  001F58                     _Tm_Hubo_periodico:
  3157                           	callstack 28
  3158  001F58                     
  3159                           ;nuestrostimers.c: 65: char Tm_Hubo_periodico (Tm_Periodico *ctp);nuestrostimers.c: 67: 
      +                          {;nuestrostimers.c: 69:  return (ctp->banderas & 0x02U);
  3160  001F58  EE20 F006          	lfsr	2,6
  3161  001F5C  5003               	movf	Tm_Hubo_periodico@ctp^0,w,c
  3162  001F5E  26D9               	addwf	fsr2l,f,c
  3163  001F60  5004               	movf	(Tm_Hubo_periodico@ctp+1)^0,w,c
  3164  001F62  22DA               	addwfc	fsr2h,f,c
  3165  001F64  50DF               	movf	indf2,w,c
  3166  001F66  0B02               	andlw	2
  3167  001F68  0012               	return		;funcret
  3168  001F6A                     __end_of_Tm_Hubo_periodico:
  3169                           	callstack 0
  3170                           
  3171 ;; *************** function _Tm_Baje_periodico *****************
  3172 ;; Defined at:
  3173 ;;		line 73 in file "nuestrostimers.c"
  3174 ;; Parameters:    Size  Location     Type
  3175 ;;  ctp             2    2[COMRAM] PTR struct Tm_Periodico
  3176 ;;		 -> main@time_out(7), 
  3177 ;; Auto vars:     Size  Location     Type
  3178 ;;		None
  3179 ;; Return value:  Size  Location     Type
  3180 ;;                  1    wreg      void 
  3181 ;; Registers used:
  3182 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3183 ;; Tracked objects:
  3184 ;;		On entry : 0/0
  3185 ;;		On exit  : 0/0
  3186 ;;		Unchanged: 0/0
  3187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3188 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3191 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3192 ;;Total ram usage:        2 bytes
  3193 ;; Hardware stack levels used: 1
  3194 ;; Hardware stack levels required when called: 2
  3195 ;; This function calls:
  3196 ;;		Nothing
  3197 ;; This function is called by:
  3198 ;;		_main
  3199 ;; This function uses a non-reentrant model
  3200 ;;
  3201                           
  3202                           	psect	text25
  3203  001F6A                     __ptext25:
  3204                           	callstack 0
  3205  001F6A                     _Tm_Baje_periodico:
  3206                           	callstack 28
  3207  001F6A                     
  3208                           ;nuestrostimers.c: 73: void Tm_Baje_periodico (Tm_Periodico *ctp);nuestrostimers.c: 75: 
      +                          {;nuestrostimers.c: 77:  ctp->banderas &= ~0x02U;
  3209  001F6A  EE20 F006          	lfsr	2,6
  3210  001F6E  5003               	movf	Tm_Baje_periodico@ctp^0,w,c
  3211  001F70  26D9               	addwf	fsr2l,f,c
  3212  001F72  5004               	movf	(Tm_Baje_periodico@ctp+1)^0,w,c
  3213  001F74  22DA               	addwfc	fsr2h,f,c
  3214  001F76  0EFD               	movlw	253
  3215  001F78  16DF               	andwf	indf2,f,c
  3216  001F7A  0012               	return		;funcret
  3217  001F7C                     __end_of_Tm_Baje_periodico:
  3218                           	callstack 0
  3219                           
  3220 ;; *************** function _TMR2_HasOverflowOccured *****************
  3221 ;; Defined at:
  3222 ;;		line 157 in file "mcc_generated_files/tmr2.c"
  3223 ;; Parameters:    Size  Location     Type
  3224 ;;		None
  3225 ;; Auto vars:     Size  Location     Type
  3226 ;;  status          1    2[COMRAM] _Bool 
  3227 ;; Return value:  Size  Location     Type
  3228 ;;                  1    wreg      _Bool 
  3229 ;; Registers used:
  3230 ;;		wreg, status,2
  3231 ;; Tracked objects:
  3232 ;;		On entry : 0/0
  3233 ;;		On exit  : 0/0
  3234 ;;		Unchanged: 0/0
  3235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3237 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3239 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3240 ;;Total ram usage:        1 bytes
  3241 ;; Hardware stack levels used: 1
  3242 ;; Hardware stack levels required when called: 2
  3243 ;; This function calls:
  3244 ;;		Nothing
  3245 ;; This function is called by:
  3246 ;;		_main
  3247 ;; This function uses a non-reentrant model
  3248 ;;
  3249                           
  3250                           	psect	text26
  3251  001D7E                     __ptext26:
  3252                           	callstack 0
  3253  001D7E                     _TMR2_HasOverflowOccured:
  3254                           	callstack 28
  3255  001D7E                     
  3256                           ;mcc_generated_files/tmr2.c: 160:     _Bool status = PIR4bits.TMR2IF;
  3257  001D7E  0139               	movlb	57	; () banked
  3258  001D80  B5A4               	btfsc	164,2,b	;volatile
  3259  001D82  EFC5  F00E         	goto	u581
  3260  001D86  EFC8  F00E         	goto	u580
  3261  001D8A                     u581:
  3262  001D8A  0E01               	movlw	1
  3263  001D8C  EFC9  F00E         	goto	u586
  3264  001D90                     u580:
  3265  001D90  0E00               	movlw	0
  3266  001D92                     u586:
  3267  001D92  6E03               	movwf	TMR2_HasOverflowOccured@status^0,c
  3268                           
  3269                           ;mcc_generated_files/tmr2.c: 161:     if(status)
  3270  001D94  5003               	movf	TMR2_HasOverflowOccured@status^0,w,c
  3271  001D96  B4D8               	btfsc	status,2,c
  3272  001D98  EFD0  F00E         	goto	u591
  3273  001D9C  EFD2  F00E         	goto	u590
  3274  001DA0                     u591:
  3275  001DA0  EFD3  F00E         	goto	l2422
  3276  001DA4                     u590:
  3277  001DA4                     
  3278                           ; BSR set to: 57
  3279                           ;mcc_generated_files/tmr2.c: 162:     {;mcc_generated_files/tmr2.c: 164:         PIR4bit
      +                          s.TMR2IF = 0;
  3280  001DA4  95A4               	bcf	164,2,b	;volatile
  3281  001DA6                     l2422:
  3282                           
  3283                           ; BSR set to: 57
  3284                           ;mcc_generated_files/tmr2.c: 166:     return status;
  3285  001DA6  5003               	movf	TMR2_HasOverflowOccured@status^0,w,c
  3286  001DA8                     
  3287                           ; BSR set to: 57
  3288  001DA8  0012               	return		;funcret
  3289  001DAA                     __end_of_TMR2_HasOverflowOccured:
  3290                           	callstack 0
  3291                           
  3292 ;; *************** function _SYSTEM_Initialize *****************
  3293 ;; Defined at:
  3294 ;;		line 50 in file "mcc_generated_files/mcc.c"
  3295 ;; Parameters:    Size  Location     Type
  3296 ;;		None
  3297 ;; Auto vars:     Size  Location     Type
  3298 ;;		None
  3299 ;; Return value:  Size  Location     Type
  3300 ;;                  1    wreg      void 
  3301 ;; Registers used:
  3302 ;;		wreg, status,2, status,0, cstack
  3303 ;; Tracked objects:
  3304 ;;		On entry : 0/0
  3305 ;;		On exit  : 0/0
  3306 ;;		Unchanged: 0/0
  3307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3311 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3312 ;;Total ram usage:        0 bytes
  3313 ;; Hardware stack levels used: 1
  3314 ;; Hardware stack levels required when called: 4
  3315 ;; This function calls:
  3316 ;;		_ADCC_Initialize
  3317 ;;		_FVR_Initialize
  3318 ;;		_INTERRUPT_Initialize
  3319 ;;		_OSCILLATOR_Initialize
  3320 ;;		_PIN_MANAGER_Initialize
  3321 ;;		_PMD_Initialize
  3322 ;;		_SPI1_Initialize
  3323 ;;		_TMR2_Initialize
  3324 ;;		_UART1_Initialize
  3325 ;; This function is called by:
  3326 ;;		_main
  3327 ;; This function uses a non-reentrant model
  3328 ;;
  3329                           
  3330                           	psect	text27
  3331  001DD4                     __ptext27:
  3332                           	callstack 0
  3333  001DD4                     _SYSTEM_Initialize:
  3334                           	callstack 26
  3335  001DD4                     
  3336                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
  3337  001DD4  ECF7  F00F         	call	_INTERRUPT_Initialize	;wreg free
  3338  001DD8                     
  3339                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  3340  001DD8  EC0F  F00F         	call	_PMD_Initialize	;wreg free
  3341  001DDC                     
  3342                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  3343  001DDC  EC3C  F00C         	call	_PIN_MANAGER_Initialize	;wreg free
  3344  001DE0                     
  3345                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  3346  001DE0  EC57  F00F         	call	_OSCILLATOR_Initialize	;wreg free
  3347  001DE4                     
  3348                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
  3349  001DE4  ECEC  F00F         	call	_FVR_Initialize	;wreg free
  3350  001DE8                     
  3351                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
  3352  001DE8  ECF2  F00D         	call	_ADCC_Initialize	;wreg free
  3353  001DEC                     
  3354                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
  3355  001DEC  EC21  F00F         	call	_TMR2_Initialize	;wreg free
  3356  001DF0                     
  3357                           ;mcc_generated_files/mcc.c: 59:     UART1_Initialize();
  3358  001DF0  EC26  F00D         	call	_UART1_Initialize	;wreg free
  3359  001DF4                     
  3360                           ;mcc_generated_files/mcc.c: 60:     SPI1_Initialize();
  3361  001DF4  EC4A  F00F         	call	_SPI1_Initialize	;wreg free
  3362  001DF8  0012               	return		;funcret
  3363  001DFA                     __end_of_SYSTEM_Initialize:
  3364                           	callstack 0
  3365                           
  3366 ;; *************** function _UART1_Initialize *****************
  3367 ;; Defined at:
  3368 ;;		line 66 in file "mcc_generated_files/uart1.c"
  3369 ;; Parameters:    Size  Location     Type
  3370 ;;		None
  3371 ;; Auto vars:     Size  Location     Type
  3372 ;;		None
  3373 ;; Return value:  Size  Location     Type
  3374 ;;                  1    wreg      void 
  3375 ;; Registers used:
  3376 ;;		wreg, status,2, status,0, cstack
  3377 ;; Tracked objects:
  3378 ;;		On entry : 0/0
  3379 ;;		On exit  : 0/0
  3380 ;;		Unchanged: 0/0
  3381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3385 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3386 ;;Total ram usage:        0 bytes
  3387 ;; Hardware stack levels used: 1
  3388 ;; Hardware stack levels required when called: 3
  3389 ;; This function calls:
  3390 ;;		_UART1_SetErrorHandler
  3391 ;;		_UART1_SetFramingErrorHandler
  3392 ;;		_UART1_SetFramingErrorInterruptHandler
  3393 ;;		_UART1_SetOverrunErrorHandler
  3394 ;;		_UART1_SetUartInterruptHandler
  3395 ;; This function is called by:
  3396 ;;		_SYSTEM_Initialize
  3397 ;;		_main
  3398 ;; This function uses a non-reentrant model
  3399 ;;
  3400                           
  3401                           	psect	text28
  3402  001A4C                     __ptext28:
  3403                           	callstack 0
  3404  001A4C                     _UART1_Initialize:
  3405                           	callstack 27
  3406  001A4C                     
  3407                           ;mcc_generated_files/uart1.c: 69:     PIE3bits.U1EIE = 0;
  3408  001A4C  0139               	movlb	57	; () banked
  3409  001A4E  9B93               	bcf	147,5,b	;volatile
  3410  001A50                     
  3411                           ; BSR set to: 57
  3412                           ;mcc_generated_files/uart1.c: 70:     UART1_SetFramingErrorInterruptHandler(UART1_Framin
      +                          gError_ISR);
  3413  001A50  0EE0               	movlw	low _UART1_FramingError_ISR
  3414  001A52  6E03               	movwf	UART1_SetFramingErrorInterruptHandler@InterruptHandler^0,c
  3415  001A54  0E1F               	movlw	high _UART1_FramingError_ISR
  3416  001A56  6E04               	movwf	(UART1_SetFramingErrorInterruptHandler@InterruptHandler+1)^0,c
  3417  001A58  ECDD  F00F         	call	_UART1_SetFramingErrorInterruptHandler	;wreg free
  3418  001A5C                     
  3419                           ;mcc_generated_files/uart1.c: 71:     PIE3bits.U1IE = 0;
  3420  001A5C  0139               	movlb	57	; () banked
  3421  001A5E  9D93               	bcf	147,6,b	;volatile
  3422                           
  3423                           ;mcc_generated_files/uart1.c: 72:     UART1_SetUartInterruptHandler(UART1_UartInterrupt_
      +                          ISR);
  3424  001A60  0EE8               	movlw	low _UART1_UartInterrupt_ISR
  3425  001A62  6E03               	movwf	UART1_SetUartInterruptHandler@InterruptHandler^0,c
  3426  001A64  0E1F               	movlw	high _UART1_UartInterrupt_ISR
  3427  001A66  6E04               	movwf	(UART1_SetUartInterruptHandler@InterruptHandler+1)^0,c
  3428  001A68  ECD3  F00F         	call	_UART1_SetUartInterruptHandler	;wreg free
  3429  001A6C                     
  3430                           ;mcc_generated_files/uart1.c: 77:     U1P1L = 0x00;
  3431  001A6C  0E00               	movlw	0
  3432  001A6E  013D               	movlb	61	; () banked
  3433  001A70  6FEC               	movwf	236,b	;volatile
  3434  001A72                     
  3435                           ; BSR set to: 61
  3436                           ;mcc_generated_files/uart1.c: 80:     U1P1H = 0x00;
  3437  001A72  0E00               	movlw	0
  3438  001A74  6FED               	movwf	237,b	;volatile
  3439  001A76                     
  3440                           ; BSR set to: 61
  3441                           ;mcc_generated_files/uart1.c: 83:     U1P2L = 0x00;
  3442  001A76  0E00               	movlw	0
  3443  001A78  6FEE               	movwf	238,b	;volatile
  3444  001A7A                     
  3445                           ; BSR set to: 61
  3446                           ;mcc_generated_files/uart1.c: 86:     U1P2H = 0x00;
  3447  001A7A  0E00               	movlw	0
  3448  001A7C  6FEF               	movwf	239,b	;volatile
  3449  001A7E                     
  3450                           ; BSR set to: 61
  3451                           ;mcc_generated_files/uart1.c: 89:     U1P3L = 0x00;
  3452  001A7E  0E00               	movlw	0
  3453  001A80  6FF0               	movwf	240,b	;volatile
  3454  001A82                     
  3455                           ; BSR set to: 61
  3456                           ;mcc_generated_files/uart1.c: 92:     U1P3H = 0x00;
  3457  001A82  0E00               	movlw	0
  3458  001A84  6FF1               	movwf	241,b	;volatile
  3459  001A86                     
  3460                           ; BSR set to: 61
  3461                           ;mcc_generated_files/uart1.c: 95:     U1CON0 = 0xB0;
  3462  001A86  0EB0               	movlw	176
  3463  001A88  6FF2               	movwf	242,b	;volatile
  3464  001A8A                     
  3465                           ; BSR set to: 61
  3466                           ;mcc_generated_files/uart1.c: 98:     U1CON1 = 0x90;
  3467  001A8A  0E90               	movlw	144
  3468  001A8C  6FF3               	movwf	243,b	;volatile
  3469  001A8E                     
  3470                           ; BSR set to: 61
  3471                           ;mcc_generated_files/uart1.c: 101:     U1CON2 = 0x00;
  3472  001A8E  0E00               	movlw	0
  3473  001A90  6FF4               	movwf	244,b	;volatile
  3474  001A92                     
  3475                           ; BSR set to: 61
  3476                           ;mcc_generated_files/uart1.c: 104:     U1BRGL = 0x82;
  3477  001A92  0E82               	movlw	130
  3478  001A94  6FF5               	movwf	245,b	;volatile
  3479  001A96                     
  3480                           ; BSR set to: 61
  3481                           ;mcc_generated_files/uart1.c: 107:     U1BRGH = 0x06;
  3482  001A96  0E06               	movlw	6
  3483  001A98  6FF6               	movwf	246,b	;volatile
  3484  001A9A                     
  3485                           ; BSR set to: 61
  3486                           ;mcc_generated_files/uart1.c: 110:     U1FIFO = 0x00;
  3487  001A9A  0E00               	movlw	0
  3488  001A9C  6FF7               	movwf	247,b	;volatile
  3489  001A9E                     
  3490                           ; BSR set to: 61
  3491                           ;mcc_generated_files/uart1.c: 113:     U1UIR = 0x00;
  3492  001A9E  0E00               	movlw	0
  3493  001AA0  6FF8               	movwf	248,b	;volatile
  3494  001AA2                     
  3495                           ; BSR set to: 61
  3496                           ;mcc_generated_files/uart1.c: 116:     U1ERRIR = 0x00;
  3497  001AA2  0E00               	movlw	0
  3498  001AA4  6FF9               	movwf	249,b	;volatile
  3499  001AA6                     
  3500                           ; BSR set to: 61
  3501                           ;mcc_generated_files/uart1.c: 119:     U1ERRIE = 0x00;
  3502  001AA6  0E00               	movlw	0
  3503  001AA8  6FFA               	movwf	250,b	;volatile
  3504  001AAA                     
  3505                           ; BSR set to: 61
  3506                           ;mcc_generated_files/uart1.c: 122:     UART1_SetFramingErrorHandler(UART1_DefaultFraming
      +                          ErrorHandler);
  3507  001AAA  0E00               	movlw	0
  3508  001AAC  6E03               	movwf	UART1_SetFramingErrorHandler@interruptHandler^0,c
  3509  001AAE  0E00               	movlw	0
  3510  001AB0  6E04               	movwf	(UART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  3511  001AB2  ECE2  F00F         	call	_UART1_SetFramingErrorHandler	;wreg free
  3512  001AB6                     
  3513                           ;mcc_generated_files/uart1.c: 123:     UART1_SetOverrunErrorHandler(UART1_DefaultOverrun
      +                          ErrorHandler);
  3514  001AB6  0E00               	movlw	0
  3515  001AB8  6E03               	movwf	UART1_SetOverrunErrorHandler@interruptHandler^0,c
  3516  001ABA  0E00               	movlw	0
  3517  001ABC  6E04               	movwf	(UART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  3518  001ABE  ECD8  F00F         	call	_UART1_SetOverrunErrorHandler	;wreg free
  3519  001AC2                     
  3520                           ;mcc_generated_files/uart1.c: 124:     UART1_SetErrorHandler(UART1_DefaultErrorHandler);
  3521  001AC2  0E00               	movlw	0
  3522  001AC4  6E03               	movwf	UART1_SetErrorHandler@interruptHandler^0,c
  3523  001AC6  0E00               	movlw	0
  3524  001AC8  6E04               	movwf	(UART1_SetErrorHandler@interruptHandler+1)^0,c
  3525  001ACA  ECE7  F00F         	call	_UART1_SetErrorHandler	;wreg free
  3526                           
  3527                           ;mcc_generated_files/uart1.c: 126:     uart1RxLastError.status = 0;
  3528  001ACE  0E00               	movlw	0
  3529  001AD0  6E21               	movwf	_uart1RxLastError^0,c	;volatile
  3530  001AD2                     
  3531                           ;mcc_generated_files/uart1.c: 129:     PIE3bits.U1EIE = 1;
  3532  001AD2  0139               	movlb	57	; () banked
  3533  001AD4  8B93               	bsf	147,5,b	;volatile
  3534  001AD6                     
  3535                           ; BSR set to: 57
  3536                           ;mcc_generated_files/uart1.c: 131:     PIE3bits.U1IE = 1;
  3537  001AD6  8D93               	bsf	147,6,b	;volatile
  3538  001AD8                     
  3539                           ; BSR set to: 57
  3540  001AD8  0012               	return		;funcret
  3541  001ADA                     __end_of_UART1_Initialize:
  3542                           	callstack 0
  3543                           
  3544 ;; *************** function _UART1_SetUartInterruptHandler *****************
  3545 ;; Defined at:
  3546 ;;		line 233 in file "mcc_generated_files/uart1.c"
  3547 ;; Parameters:    Size  Location     Type
  3548 ;;  InterruptHan    2    2[COMRAM] PTR FTN()void 
  3549 ;;		 -> UART1_UartInterrupt_ISR(1), 
  3550 ;; Auto vars:     Size  Location     Type
  3551 ;;		None
  3552 ;; Return value:  Size  Location     Type
  3553 ;;                  1    wreg      void 
  3554 ;; Registers used:
  3555 ;;		wreg, status,2, status,0
  3556 ;; Tracked objects:
  3557 ;;		On entry : 0/0
  3558 ;;		On exit  : 0/0
  3559 ;;		Unchanged: 0/0
  3560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3561 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3564 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3565 ;;Total ram usage:        2 bytes
  3566 ;; Hardware stack levels used: 1
  3567 ;; Hardware stack levels required when called: 2
  3568 ;; This function calls:
  3569 ;;		Nothing
  3570 ;; This function is called by:
  3571 ;;		_UART1_Initialize
  3572 ;; This function uses a non-reentrant model
  3573 ;;
  3574                           
  3575                           	psect	text29
  3576  001FA6                     __ptext29:
  3577                           	callstack 0
  3578  001FA6                     _UART1_SetUartInterruptHandler:
  3579                           	callstack 27
  3580  001FA6                     
  3581                           ;mcc_generated_files/uart1.c: 234:     UART1_UARTInterruptHandler = InterruptHandler;
  3582  001FA6  C003  F01B         	movff	UART1_SetUartInterruptHandler@InterruptHandler,_UART1_UARTInterruptHandler
  3583  001FAA  C004  F01C         	movff	UART1_SetUartInterruptHandler@InterruptHandler+1,_UART1_UARTInterruptHandler+1
  3584  001FAE  0012               	return		;funcret
  3585  001FB0                     __end_of_UART1_SetUartInterruptHandler:
  3586                           	callstack 0
  3587                           
  3588 ;; *************** function _UART1_SetOverrunErrorHandler *****************
  3589 ;; Defined at:
  3590 ;;		line 202 in file "mcc_generated_files/uart1.c"
  3591 ;; Parameters:    Size  Location     Type
  3592 ;;  interruptHan    2    2[COMRAM] PTR FTN()void 
  3593 ;;		 -> UART1_DefaultOverrunErrorHandler(1), 
  3594 ;; Auto vars:     Size  Location     Type
  3595 ;;		None
  3596 ;; Return value:  Size  Location     Type
  3597 ;;                  1    wreg      void 
  3598 ;; Registers used:
  3599 ;;		wreg, status,2, status,0
  3600 ;; Tracked objects:
  3601 ;;		On entry : 0/0
  3602 ;;		On exit  : 0/0
  3603 ;;		Unchanged: 0/0
  3604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3605 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3608 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3609 ;;Total ram usage:        2 bytes
  3610 ;; Hardware stack levels used: 1
  3611 ;; Hardware stack levels required when called: 2
  3612 ;; This function calls:
  3613 ;;		Nothing
  3614 ;; This function is called by:
  3615 ;;		_UART1_Initialize
  3616 ;; This function uses a non-reentrant model
  3617 ;;
  3618                           
  3619                           	psect	text30
  3620  001FB0                     __ptext30:
  3621                           	callstack 0
  3622  001FB0                     _UART1_SetOverrunErrorHandler:
  3623                           	callstack 27
  3624  001FB0                     
  3625                           ;mcc_generated_files/uart1.c: 203:     UART1_OverrunErrorHandler = interruptHandler;
  3626  001FB0  C003  F017         	movff	UART1_SetOverrunErrorHandler@interruptHandler,_UART1_OverrunErrorHandler
  3627  001FB4  C004  F018         	movff	UART1_SetOverrunErrorHandler@interruptHandler+1,_UART1_OverrunErrorHandler+1
  3628  001FB8  0012               	return		;funcret
  3629  001FBA                     __end_of_UART1_SetOverrunErrorHandler:
  3630                           	callstack 0
  3631                           
  3632 ;; *************** function _UART1_SetFramingErrorInterruptHandler *****************
  3633 ;; Defined at:
  3634 ;;		line 229 in file "mcc_generated_files/uart1.c"
  3635 ;; Parameters:    Size  Location     Type
  3636 ;;  InterruptHan    2    2[COMRAM] PTR FTN()void 
  3637 ;;		 -> UART1_FramingError_ISR(1), 
  3638 ;; Auto vars:     Size  Location     Type
  3639 ;;		None
  3640 ;; Return value:  Size  Location     Type
  3641 ;;                  1    wreg      void 
  3642 ;; Registers used:
  3643 ;;		wreg, status,2, status,0
  3644 ;; Tracked objects:
  3645 ;;		On entry : 0/0
  3646 ;;		On exit  : 0/0
  3647 ;;		Unchanged: 0/0
  3648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3649 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3652 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3653 ;;Total ram usage:        2 bytes
  3654 ;; Hardware stack levels used: 1
  3655 ;; Hardware stack levels required when called: 2
  3656 ;; This function calls:
  3657 ;;		Nothing
  3658 ;; This function is called by:
  3659 ;;		_UART1_Initialize
  3660 ;; This function uses a non-reentrant model
  3661 ;;
  3662                           
  3663                           	psect	text31
  3664  001FBA                     __ptext31:
  3665                           	callstack 0
  3666  001FBA                     _UART1_SetFramingErrorInterruptHandler:
  3667                           	callstack 27
  3668  001FBA                     
  3669                           ;mcc_generated_files/uart1.c: 230:     UART1_FramingErrorInterruptHandler = InterruptHan
      +                          dler;
  3670  001FBA  C003  F01D         	movff	UART1_SetFramingErrorInterruptHandler@InterruptHandler,_UART1_FramingErrorInterru
      +                          ptHandler
  3671  001FBE  C004  F01E         	movff	UART1_SetFramingErrorInterruptHandler@InterruptHandler+1,_UART1_FramingErrorInter
      +                          ruptHandler+1
  3672  001FC2  0012               	return		;funcret
  3673  001FC4                     __end_of_UART1_SetFramingErrorInterruptHandler:
  3674                           	callstack 0
  3675                           
  3676 ;; *************** function _UART1_SetFramingErrorHandler *****************
  3677 ;; Defined at:
  3678 ;;		line 198 in file "mcc_generated_files/uart1.c"
  3679 ;; Parameters:    Size  Location     Type
  3680 ;;  interruptHan    2    2[COMRAM] PTR FTN()void 
  3681 ;;		 -> UART1_DefaultFramingErrorHandler(1), 
  3682 ;; Auto vars:     Size  Location     Type
  3683 ;;		None
  3684 ;; Return value:  Size  Location     Type
  3685 ;;                  1    wreg      void 
  3686 ;; Registers used:
  3687 ;;		wreg, status,2, status,0
  3688 ;; Tracked objects:
  3689 ;;		On entry : 0/0
  3690 ;;		On exit  : 0/0
  3691 ;;		Unchanged: 0/0
  3692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3693 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3696 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3697 ;;Total ram usage:        2 bytes
  3698 ;; Hardware stack levels used: 1
  3699 ;; Hardware stack levels required when called: 2
  3700 ;; This function calls:
  3701 ;;		Nothing
  3702 ;; This function is called by:
  3703 ;;		_UART1_Initialize
  3704 ;; This function uses a non-reentrant model
  3705 ;;
  3706                           
  3707                           	psect	text32
  3708  001FC4                     __ptext32:
  3709                           	callstack 0
  3710  001FC4                     _UART1_SetFramingErrorHandler:
  3711                           	callstack 27
  3712  001FC4                     
  3713                           ;mcc_generated_files/uart1.c: 199:     UART1_FramingErrorHandler = interruptHandler;
  3714  001FC4  C003  F019         	movff	UART1_SetFramingErrorHandler@interruptHandler,_UART1_FramingErrorHandler
  3715  001FC8  C004  F01A         	movff	UART1_SetFramingErrorHandler@interruptHandler+1,_UART1_FramingErrorHandler+1
  3716  001FCC  0012               	return		;funcret
  3717  001FCE                     __end_of_UART1_SetFramingErrorHandler:
  3718                           	callstack 0
  3719                           
  3720 ;; *************** function _UART1_SetErrorHandler *****************
  3721 ;; Defined at:
  3722 ;;		line 206 in file "mcc_generated_files/uart1.c"
  3723 ;; Parameters:    Size  Location     Type
  3724 ;;  interruptHan    2    2[COMRAM] PTR FTN()void 
  3725 ;;		 -> UART1_DefaultErrorHandler(1), 
  3726 ;; Auto vars:     Size  Location     Type
  3727 ;;		None
  3728 ;; Return value:  Size  Location     Type
  3729 ;;                  1    wreg      void 
  3730 ;; Registers used:
  3731 ;;		wreg, status,2, status,0
  3732 ;; Tracked objects:
  3733 ;;		On entry : 0/0
  3734 ;;		On exit  : 0/0
  3735 ;;		Unchanged: 0/0
  3736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3737 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3740 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3741 ;;Total ram usage:        2 bytes
  3742 ;; Hardware stack levels used: 1
  3743 ;; Hardware stack levels required when called: 2
  3744 ;; This function calls:
  3745 ;;		Nothing
  3746 ;; This function is called by:
  3747 ;;		_UART1_Initialize
  3748 ;; This function uses a non-reentrant model
  3749 ;;
  3750                           
  3751                           	psect	text33
  3752  001FCE                     __ptext33:
  3753                           	callstack 0
  3754  001FCE                     _UART1_SetErrorHandler:
  3755                           	callstack 27
  3756  001FCE                     
  3757                           ;mcc_generated_files/uart1.c: 207:     UART1_ErrorHandler = interruptHandler;
  3758  001FCE  C003  F015         	movff	UART1_SetErrorHandler@interruptHandler,_UART1_ErrorHandler
  3759  001FD2  C004  F016         	movff	UART1_SetErrorHandler@interruptHandler+1,_UART1_ErrorHandler+1
  3760  001FD6  0012               	return		;funcret
  3761  001FD8                     __end_of_UART1_SetErrorHandler:
  3762                           	callstack 0
  3763                           
  3764 ;; *************** function _TMR2_Initialize *****************
  3765 ;; Defined at:
  3766 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  3767 ;; Parameters:    Size  Location     Type
  3768 ;;		None
  3769 ;; Auto vars:     Size  Location     Type
  3770 ;;		None
  3771 ;; Return value:  Size  Location     Type
  3772 ;;                  1    wreg      void 
  3773 ;; Registers used:
  3774 ;;		wreg, status,2
  3775 ;; Tracked objects:
  3776 ;;		On entry : 0/0
  3777 ;;		On exit  : 0/0
  3778 ;;		Unchanged: 0/0
  3779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3783 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3784 ;;Total ram usage:        0 bytes
  3785 ;; Hardware stack levels used: 1
  3786 ;; Hardware stack levels required when called: 2
  3787 ;; This function calls:
  3788 ;;		Nothing
  3789 ;; This function is called by:
  3790 ;;		_SYSTEM_Initialize
  3791 ;;		_main
  3792 ;; This function uses a non-reentrant model
  3793 ;;
  3794                           
  3795                           	psect	text34
  3796  001E42                     __ptext34:
  3797                           	callstack 0
  3798  001E42                     _TMR2_Initialize:
  3799                           	callstack 28
  3800  001E42                     
  3801                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x03;
  3802  001E42  0E03               	movlw	3
  3803  001E44  6EAE               	movwf	174,c	;volatile
  3804                           
  3805                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
  3806  001E46  0E00               	movlw	0
  3807  001E48  6EAD               	movwf	173,c	;volatile
  3808                           
  3809                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
  3810  001E4A  0E00               	movlw	0
  3811  001E4C  6EAF               	movwf	175,c	;volatile
  3812                           
  3813                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0xC7;
  3814  001E4E  0EC7               	movlw	199
  3815  001E50  6EAB               	movwf	171,c	;volatile
  3816                           
  3817                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
  3818  001E52  0E00               	movlw	0
  3819  001E54  6EAA               	movwf	170,c	;volatile
  3820  001E56                     
  3821                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
  3822  001E56  0139               	movlb	57	; () banked
  3823  001E58  95A4               	bcf	164,2,b	;volatile
  3824                           
  3825                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xD0;
  3826  001E5A  0ED0               	movlw	208
  3827  001E5C  6EAC               	movwf	172,c	;volatile
  3828  001E5E                     
  3829                           ; BSR set to: 57
  3830  001E5E  0012               	return		;funcret
  3831  001E60                     __end_of_TMR2_Initialize:
  3832                           	callstack 0
  3833                           
  3834 ;; *************** function _SPI1_Initialize *****************
  3835 ;; Defined at:
  3836 ;;		line 64 in file "mcc_generated_files/spi1.c"
  3837 ;; Parameters:    Size  Location     Type
  3838 ;;		None
  3839 ;; Auto vars:     Size  Location     Type
  3840 ;;		None
  3841 ;; Return value:  Size  Location     Type
  3842 ;;                  1    wreg      void 
  3843 ;; Registers used:
  3844 ;;		wreg, status,2
  3845 ;; Tracked objects:
  3846 ;;		On entry : 0/0
  3847 ;;		On exit  : 0/0
  3848 ;;		Unchanged: 0/0
  3849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3853 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3854 ;;Total ram usage:        0 bytes
  3855 ;; Hardware stack levels used: 1
  3856 ;; Hardware stack levels required when called: 2
  3857 ;; This function calls:
  3858 ;;		Nothing
  3859 ;; This function is called by:
  3860 ;;		_SYSTEM_Initialize
  3861 ;;		_main
  3862 ;; This function uses a non-reentrant model
  3863 ;;
  3864                           
  3865                           	psect	text35
  3866  001E94                     __ptext35:
  3867                           	callstack 0
  3868  001E94                     _SPI1_Initialize:
  3869                           	callstack 27
  3870  001E94                     
  3871                           ;mcc_generated_files/spi1.c: 67:     SPI1CON0 = 0x83;
  3872  001E94  0E83               	movlw	131
  3873  001E96  013D               	movlb	61	; () banked
  3874  001E98  6F14               	movwf	20,b	;volatile
  3875                           
  3876                           ;mcc_generated_files/spi1.c: 69:     SPI1CON1 = 0x40;
  3877  001E9A  0E40               	movlw	64
  3878  001E9C  6F15               	movwf	21,b	;volatile
  3879                           
  3880                           ;mcc_generated_files/spi1.c: 71:     SPI1CON2 = 0x02;
  3881  001E9E  0E02               	movlw	2
  3882  001EA0  6F16               	movwf	22,b	;volatile
  3883                           
  3884                           ;mcc_generated_files/spi1.c: 73:     SPI1CLK = 0x00;
  3885  001EA2  0E00               	movlw	0
  3886  001EA4  6F1C               	movwf	28,b	;volatile
  3887                           
  3888                           ;mcc_generated_files/spi1.c: 75:     SPI1BAUD = 0x20;
  3889  001EA6  0E20               	movlw	32
  3890  001EA8  6F19               	movwf	25,b	;volatile
  3891  001EAA                     
  3892                           ; BSR set to: 61
  3893                           ;mcc_generated_files/spi1.c: 76:     TRISCbits.TRISC3 = 0;
  3894  001EAA  96C4               	bcf	196,3,c	;volatile
  3895  001EAC                     
  3896                           ; BSR set to: 61
  3897  001EAC  0012               	return		;funcret
  3898  001EAE                     __end_of_SPI1_Initialize:
  3899                           	callstack 0
  3900                           
  3901 ;; *************** function _PMD_Initialize *****************
  3902 ;; Defined at:
  3903 ;;		line 77 in file "mcc_generated_files/mcc.c"
  3904 ;; Parameters:    Size  Location     Type
  3905 ;;		None
  3906 ;; Auto vars:     Size  Location     Type
  3907 ;;		None
  3908 ;; Return value:  Size  Location     Type
  3909 ;;                  1    wreg      void 
  3910 ;; Registers used:
  3911 ;;		wreg, status,2
  3912 ;; Tracked objects:
  3913 ;;		On entry : 0/0
  3914 ;;		On exit  : 0/0
  3915 ;;		Unchanged: 0/0
  3916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3920 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3921 ;;Total ram usage:        0 bytes
  3922 ;; Hardware stack levels used: 1
  3923 ;; Hardware stack levels required when called: 2
  3924 ;; This function calls:
  3925 ;;		Nothing
  3926 ;; This function is called by:
  3927 ;;		_SYSTEM_Initialize
  3928 ;; This function uses a non-reentrant model
  3929 ;;
  3930                           
  3931                           	psect	text36
  3932  001E1E                     __ptext36:
  3933                           	callstack 0
  3934  001E1E                     _PMD_Initialize:
  3935                           	callstack 27
  3936  001E1E                     
  3937                           ;mcc_generated_files/mcc.c: 80:     PMD0 = 0x00;
  3938  001E1E  0E00               	movlw	0
  3939  001E20  0139               	movlb	57	; () banked
  3940  001E22  6FC0               	movwf	192,b	;volatile
  3941                           
  3942                           ;mcc_generated_files/mcc.c: 82:     PMD1 = 0x00;
  3943  001E24  0E00               	movlw	0
  3944  001E26  6FC1               	movwf	193,b	;volatile
  3945                           
  3946                           ;mcc_generated_files/mcc.c: 84:     PMD2 = 0x00;
  3947  001E28  0E00               	movlw	0
  3948  001E2A  6FC2               	movwf	194,b	;volatile
  3949                           
  3950                           ;mcc_generated_files/mcc.c: 86:     PMD3 = 0x00;
  3951  001E2C  0E00               	movlw	0
  3952  001E2E  6FC3               	movwf	195,b	;volatile
  3953                           
  3954                           ;mcc_generated_files/mcc.c: 88:     PMD4 = 0x00;
  3955  001E30  0E00               	movlw	0
  3956  001E32  6FC4               	movwf	196,b	;volatile
  3957                           
  3958                           ;mcc_generated_files/mcc.c: 90:     PMD5 = 0x00;
  3959  001E34  0E00               	movlw	0
  3960  001E36  6FC5               	movwf	197,b	;volatile
  3961                           
  3962                           ;mcc_generated_files/mcc.c: 92:     PMD6 = 0x00;
  3963  001E38  0E00               	movlw	0
  3964  001E3A  6FC6               	movwf	198,b	;volatile
  3965                           
  3966                           ;mcc_generated_files/mcc.c: 94:     PMD7 = 0x00;
  3967  001E3C  0E00               	movlw	0
  3968  001E3E  6FC7               	movwf	199,b	;volatile
  3969  001E40                     
  3970                           ; BSR set to: 57
  3971  001E40  0012               	return		;funcret
  3972  001E42                     __end_of_PMD_Initialize:
  3973                           	callstack 0
  3974                           
  3975 ;; *************** function _PIN_MANAGER_Initialize *****************
  3976 ;; Defined at:
  3977 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  3978 ;; Parameters:    Size  Location     Type
  3979 ;;		None
  3980 ;; Auto vars:     Size  Location     Type
  3981 ;;		None
  3982 ;; Return value:  Size  Location     Type
  3983 ;;                  1    wreg      void 
  3984 ;; Registers used:
  3985 ;;		wreg, status,2
  3986 ;; Tracked objects:
  3987 ;;		On entry : 0/0
  3988 ;;		On exit  : 0/0
  3989 ;;		Unchanged: 0/0
  3990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3994 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3995 ;;Total ram usage:        0 bytes
  3996 ;; Hardware stack levels used: 1
  3997 ;; Hardware stack levels required when called: 2
  3998 ;; This function calls:
  3999 ;;		Nothing
  4000 ;; This function is called by:
  4001 ;;		_SYSTEM_Initialize
  4002 ;; This function uses a non-reentrant model
  4003 ;;
  4004                           
  4005                           	psect	text37
  4006  001878                     __ptext37:
  4007                           	callstack 0
  4008  001878                     _PIN_MANAGER_Initialize:
  4009                           	callstack 27
  4010  001878                     
  4011                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x01;
  4012  001878  0E01               	movlw	1
  4013  00187A  6EBE               	movwf	190,c	;volatile
  4014                           
  4015                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  4016  00187C  0E00               	movlw	0
  4017  00187E  6EBD               	movwf	189,c	;volatile
  4018                           
  4019                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  4020  001880  0E00               	movlw	0
  4021  001882  6EBA               	movwf	186,c	;volatile
  4022                           
  4023                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x10;
  4024  001884  0E10               	movlw	16
  4025  001886  6EBB               	movwf	187,c	;volatile
  4026                           
  4027                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  4028  001888  0E00               	movlw	0
  4029  00188A  6EBC               	movwf	188,c	;volatile
  4030                           
  4031                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x00;
  4032  00188C  0E00               	movlw	0
  4033  00188E  6EC6               	movwf	198,c	;volatile
  4034  001890                     
  4035                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xFF;
  4036  001890  68C2               	setf	194,c	;volatile
  4037                           
  4038                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xEF;
  4039  001892  0EEF               	movlw	239
  4040  001894  6EC3               	movwf	195,c	;volatile
  4041                           
  4042                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0x97;
  4043  001896  0E97               	movlw	151
  4044  001898  6EC4               	movwf	196,c	;volatile
  4045                           
  4046                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xEF;
  4047  00189A  0EEF               	movlw	239
  4048  00189C  6EC5               	movwf	197,c	;volatile
  4049  00189E                     
  4050                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
  4051  00189E  013A               	movlb	58	; () banked
  4052  0018A0  6970               	setf	112,b	;volatile
  4053                           
  4054                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0x67;
  4055  0018A2  0E67               	movlw	103
  4056  0018A4  6F60               	movwf	96,b	;volatile
  4057  0018A6                     
  4058                           ; BSR set to: 58
  4059                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0xFF;
  4060  0018A6  6950               	setf	80,b	;volatile
  4061                           
  4062                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
  4063  0018A8  0E07               	movlw	7
  4064  0018AA  6F80               	movwf	128,b	;volatile
  4065  0018AC                     
  4066                           ; BSR set to: 58
  4067                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0xFF;
  4068  0018AC  6940               	setf	64,b	;volatile
  4069                           
  4070                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
  4071  0018AE  0E00               	movlw	0
  4072  0018B0  6F71               	movwf	113,b	;volatile
  4073                           
  4074                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
  4075  0018B2  0E00               	movlw	0
  4076  0018B4  6F81               	movwf	129,b	;volatile
  4077                           
  4078                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
  4079  0018B6  0E00               	movlw	0
  4080  0018B8  6F51               	movwf	81,b	;volatile
  4081                           
  4082                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
  4083  0018BA  0E00               	movlw	0
  4084  0018BC  6F41               	movwf	65,b	;volatile
  4085                           
  4086                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
  4087  0018BE  0E00               	movlw	0
  4088  0018C0  6F61               	movwf	97,b	;volatile
  4089                           
  4090                           ;mcc_generated_files/pin_manager.c: 96:     RB1I2C = 0x00;
  4091  0018C2  0E00               	movlw	0
  4092  0018C4  6F5A               	movwf	90,b	;volatile
  4093                           
  4094                           ;mcc_generated_files/pin_manager.c: 97:     RB2I2C = 0x00;
  4095  0018C6  0E00               	movlw	0
  4096  0018C8  6F5B               	movwf	91,b	;volatile
  4097                           
  4098                           ;mcc_generated_files/pin_manager.c: 98:     RC3I2C = 0x00;
  4099  0018CA  0E00               	movlw	0
  4100  0018CC  6F6A               	movwf	106,b	;volatile
  4101                           
  4102                           ;mcc_generated_files/pin_manager.c: 99:     RC4I2C = 0x00;
  4103  0018CE  0E00               	movlw	0
  4104  0018D0  6F6B               	movwf	107,b	;volatile
  4105                           
  4106                           ;mcc_generated_files/pin_manager.c: 100:     RD0I2C = 0x00;
  4107  0018D2  0E00               	movlw	0
  4108  0018D4  6F7A               	movwf	122,b	;volatile
  4109                           
  4110                           ;mcc_generated_files/pin_manager.c: 101:     RD1I2C = 0x00;
  4111  0018D6  0E00               	movlw	0
  4112  0018D8  6F7B               	movwf	123,b	;volatile
  4113                           
  4114                           ;mcc_generated_files/pin_manager.c: 106:     ODCONE = 0x00;
  4115  0018DA  0E00               	movlw	0
  4116  0018DC  6F82               	movwf	130,b	;volatile
  4117                           
  4118                           ;mcc_generated_files/pin_manager.c: 107:     ODCONA = 0x00;
  4119  0018DE  0E00               	movlw	0
  4120  0018E0  6F42               	movwf	66,b	;volatile
  4121                           
  4122                           ;mcc_generated_files/pin_manager.c: 108:     ODCONB = 0x00;
  4123  0018E2  0E00               	movlw	0
  4124  0018E4  6F52               	movwf	82,b	;volatile
  4125                           
  4126                           ;mcc_generated_files/pin_manager.c: 109:     ODCONC = 0x00;
  4127  0018E6  0E00               	movlw	0
  4128  0018E8  6F62               	movwf	98,b	;volatile
  4129                           
  4130                           ;mcc_generated_files/pin_manager.c: 110:     ODCOND = 0x00;
  4131  0018EA  0E00               	movlw	0
  4132  0018EC  6F72               	movwf	114,b	;volatile
  4133  0018EE                     
  4134                           ; BSR set to: 58
  4135                           ;mcc_generated_files/pin_manager.c: 115:     SLRCONA = 0xFF;
  4136  0018EE  6943               	setf	67,b	;volatile
  4137  0018F0                     
  4138                           ; BSR set to: 58
  4139                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONB = 0xFF;
  4140  0018F0  6953               	setf	83,b	;volatile
  4141  0018F2                     
  4142                           ; BSR set to: 58
  4143                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONC = 0xFF;
  4144  0018F2  6963               	setf	99,b	;volatile
  4145  0018F4                     
  4146                           ; BSR set to: 58
  4147                           ;mcc_generated_files/pin_manager.c: 118:     SLRCOND = 0xFF;
  4148  0018F4  6973               	setf	115,b	;volatile
  4149                           
  4150                           ;mcc_generated_files/pin_manager.c: 119:     SLRCONE = 0x07;
  4151  0018F6  0E07               	movlw	7
  4152  0018F8  6F83               	movwf	131,b	;volatile
  4153  0018FA                     
  4154                           ; BSR set to: 58
  4155                           ;mcc_generated_files/pin_manager.c: 124:     INLVLA = 0xFF;
  4156  0018FA  6944               	setf	68,b	;volatile
  4157  0018FC                     
  4158                           ; BSR set to: 58
  4159                           ;mcc_generated_files/pin_manager.c: 125:     INLVLB = 0xFF;
  4160  0018FC  6954               	setf	84,b	;volatile
  4161  0018FE                     
  4162                           ; BSR set to: 58
  4163                           ;mcc_generated_files/pin_manager.c: 126:     INLVLC = 0xFF;
  4164  0018FE  6964               	setf	100,b	;volatile
  4165  001900                     
  4166                           ; BSR set to: 58
  4167                           ;mcc_generated_files/pin_manager.c: 127:     INLVLD = 0xFF;
  4168  001900  6974               	setf	116,b	;volatile
  4169                           
  4170                           ;mcc_generated_files/pin_manager.c: 128:     INLVLE = 0x0F;
  4171  001902  0E0F               	movlw	15
  4172  001904  6F84               	movwf	132,b	;volatile
  4173                           
  4174                           ;mcc_generated_files/pin_manager.c: 137:     SPI1SCKPPS = 0x13;
  4175  001906  0E13               	movlw	19
  4176  001908  6FDE               	movwf	222,b	;volatile
  4177                           
  4178                           ;mcc_generated_files/pin_manager.c: 138:     RC3PPS = 0x1E;
  4179  00190A  0E1E               	movlw	30
  4180  00190C  6F13               	movwf	19,b	;volatile
  4181                           
  4182                           ;mcc_generated_files/pin_manager.c: 139:     RC5PPS = 0x1F;
  4183  00190E  0E1F               	movlw	31
  4184  001910  6F15               	movwf	21,b	;volatile
  4185                           
  4186                           ;mcc_generated_files/pin_manager.c: 140:     RC6PPS = 0x13;
  4187  001912  0E13               	movlw	19
  4188  001914  6F16               	movwf	22,b	;volatile
  4189                           
  4190                           ;mcc_generated_files/pin_manager.c: 141:     U1RXPPS = 0x17;
  4191  001916  0E17               	movlw	23
  4192  001918  6FE5               	movwf	229,b	;volatile
  4193                           
  4194                           ;mcc_generated_files/pin_manager.c: 142:     SPI1SDIPPS = 0x14;
  4195  00191A  0E14               	movlw	20
  4196  00191C  6FDF               	movwf	223,b	;volatile
  4197  00191E                     
  4198                           ; BSR set to: 58
  4199  00191E  0012               	return		;funcret
  4200  001920                     __end_of_PIN_MANAGER_Initialize:
  4201                           	callstack 0
  4202                           
  4203 ;; *************** function _OSCILLATOR_Initialize *****************
  4204 ;; Defined at:
  4205 ;;		line 63 in file "mcc_generated_files/mcc.c"
  4206 ;; Parameters:    Size  Location     Type
  4207 ;;		None
  4208 ;; Auto vars:     Size  Location     Type
  4209 ;;		None
  4210 ;; Return value:  Size  Location     Type
  4211 ;;                  1    wreg      void 
  4212 ;; Registers used:
  4213 ;;		wreg, status,2
  4214 ;; Tracked objects:
  4215 ;;		On entry : 0/0
  4216 ;;		On exit  : 0/0
  4217 ;;		Unchanged: 0/0
  4218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4222 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4223 ;;Total ram usage:        0 bytes
  4224 ;; Hardware stack levels used: 1
  4225 ;; Hardware stack levels required when called: 2
  4226 ;; This function calls:
  4227 ;;		Nothing
  4228 ;; This function is called by:
  4229 ;;		_SYSTEM_Initialize
  4230 ;; This function uses a non-reentrant model
  4231 ;;
  4232                           
  4233                           	psect	text38
  4234  001EAE                     __ptext38:
  4235                           	callstack 0
  4236  001EAE                     _OSCILLATOR_Initialize:
  4237                           	callstack 27
  4238  001EAE                     
  4239                           ;mcc_generated_files/mcc.c: 66:     OSCCON1 = 0x60;
  4240  001EAE  0E60               	movlw	96
  4241  001EB0  0139               	movlb	57	; () banked
  4242  001EB2  6FD9               	movwf	217,b	;volatile
  4243                           
  4244                           ;mcc_generated_files/mcc.c: 68:     OSCCON3 = 0x00;
  4245  001EB4  0E00               	movlw	0
  4246  001EB6  6FDB               	movwf	219,b	;volatile
  4247                           
  4248                           ;mcc_generated_files/mcc.c: 70:     OSCEN = 0x00;
  4249  001EB8  0E00               	movlw	0
  4250  001EBA  6FDD               	movwf	221,b	;volatile
  4251                           
  4252                           ;mcc_generated_files/mcc.c: 72:     OSCFRQ = 0x08;
  4253  001EBC  0E08               	movlw	8
  4254  001EBE  6FDF               	movwf	223,b	;volatile
  4255                           
  4256                           ;mcc_generated_files/mcc.c: 74:     OSCTUNE = 0x00;
  4257  001EC0  0E00               	movlw	0
  4258  001EC2  6FDE               	movwf	222,b	;volatile
  4259  001EC4                     
  4260                           ; BSR set to: 57
  4261  001EC4  0012               	return		;funcret
  4262  001EC6                     __end_of_OSCILLATOR_Initialize:
  4263                           	callstack 0
  4264                           
  4265 ;; *************** function _INTERRUPT_Initialize *****************
  4266 ;; Defined at:
  4267 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  4268 ;; Parameters:    Size  Location     Type
  4269 ;;		None
  4270 ;; Auto vars:     Size  Location     Type
  4271 ;;		None
  4272 ;; Return value:  Size  Location     Type
  4273 ;;                  1    wreg      void 
  4274 ;; Registers used:
  4275 ;;		None
  4276 ;; Tracked objects:
  4277 ;;		On entry : 0/0
  4278 ;;		On exit  : 0/0
  4279 ;;		Unchanged: 0/0
  4280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4284 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4285 ;;Total ram usage:        0 bytes
  4286 ;; Hardware stack levels used: 1
  4287 ;; Hardware stack levels required when called: 2
  4288 ;; This function calls:
  4289 ;;		Nothing
  4290 ;; This function is called by:
  4291 ;;		_SYSTEM_Initialize
  4292 ;;		_main
  4293 ;; This function uses a non-reentrant model
  4294 ;;
  4295                           
  4296                           	psect	text39
  4297  001FEE                     __ptext39:
  4298                           	callstack 0
  4299  001FEE                     _INTERRUPT_Initialize:
  4300                           	callstack 27
  4301  001FEE                     
  4302                           ;mcc_generated_files/interrupt_manager.c: 55:     INTCON0bits.IPEN = 0;
  4303  001FEE  9AD2               	bcf	210,5,c	;volatile
  4304  001FF0  0012               	return		;funcret
  4305  001FF2                     __end_of_INTERRUPT_Initialize:
  4306                           	callstack 0
  4307                           
  4308 ;; *************** function _FVR_Initialize *****************
  4309 ;; Defined at:
  4310 ;;		line 58 in file "mcc_generated_files/fvr.c"
  4311 ;; Parameters:    Size  Location     Type
  4312 ;;		None
  4313 ;; Auto vars:     Size  Location     Type
  4314 ;;		None
  4315 ;; Return value:  Size  Location     Type
  4316 ;;                  1    wreg      void 
  4317 ;; Registers used:
  4318 ;;		wreg, status,2
  4319 ;; Tracked objects:
  4320 ;;		On entry : 0/0
  4321 ;;		On exit  : 0/0
  4322 ;;		Unchanged: 0/0
  4323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4327 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4328 ;;Total ram usage:        0 bytes
  4329 ;; Hardware stack levels used: 1
  4330 ;; Hardware stack levels required when called: 2
  4331 ;; This function calls:
  4332 ;;		Nothing
  4333 ;; This function is called by:
  4334 ;;		_SYSTEM_Initialize
  4335 ;; This function uses a non-reentrant model
  4336 ;;
  4337                           
  4338                           	psect	text40
  4339  001FD8                     __ptext40:
  4340                           	callstack 0
  4341  001FD8                     _FVR_Initialize:
  4342                           	callstack 27
  4343  001FD8                     
  4344                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0x82;
  4345  001FD8  0E82               	movlw	130
  4346  001FDA  013E               	movlb	62	; () banked
  4347  001FDC  6FC1               	movwf	193,b	;volatile
  4348  001FDE                     
  4349                           ; BSR set to: 62
  4350  001FDE  0012               	return		;funcret
  4351  001FE0                     __end_of_FVR_Initialize:
  4352                           	callstack 0
  4353                           
  4354 ;; *************** function _ADCC_Initialize *****************
  4355 ;; Defined at:
  4356 ;;		line 62 in file "mcc_generated_files/adcc.c"
  4357 ;; Parameters:    Size  Location     Type
  4358 ;;		None
  4359 ;; Auto vars:     Size  Location     Type
  4360 ;;		None
  4361 ;; Return value:  Size  Location     Type
  4362 ;;                  1    wreg      void 
  4363 ;; Registers used:
  4364 ;;		wreg, status,2
  4365 ;; Tracked objects:
  4366 ;;		On entry : 0/0
  4367 ;;		On exit  : 0/0
  4368 ;;		Unchanged: 0/0
  4369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4373 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4374 ;;Total ram usage:        0 bytes
  4375 ;; Hardware stack levels used: 1
  4376 ;; Hardware stack levels required when called: 2
  4377 ;; This function calls:
  4378 ;;		Nothing
  4379 ;; This function is called by:
  4380 ;;		_SYSTEM_Initialize
  4381 ;;		_main
  4382 ;; This function uses a non-reentrant model
  4383 ;;
  4384                           
  4385                           	psect	text41
  4386  001BE4                     __ptext41:
  4387                           	callstack 0
  4388  001BE4                     _ADCC_Initialize:
  4389                           	callstack 27
  4390  001BE4                     
  4391                           ;mcc_generated_files/adcc.c: 66:     ADLTHL = 0x00;
  4392  001BE4  0E00               	movlw	0
  4393  001BE6  013E               	movlb	62	; () banked
  4394  001BE8  6FDE               	movwf	222,b	;volatile
  4395                           
  4396                           ;mcc_generated_files/adcc.c: 68:     ADLTHH = 0x00;
  4397  001BEA  0E00               	movlw	0
  4398  001BEC  6FDF               	movwf	223,b	;volatile
  4399                           
  4400                           ;mcc_generated_files/adcc.c: 70:     ADUTHL = 0x00;
  4401  001BEE  0E00               	movlw	0
  4402  001BF0  6FE0               	movwf	224,b	;volatile
  4403                           
  4404                           ;mcc_generated_files/adcc.c: 72:     ADUTHH = 0x00;
  4405  001BF2  0E00               	movlw	0
  4406  001BF4  6FE1               	movwf	225,b	;volatile
  4407                           
  4408                           ;mcc_generated_files/adcc.c: 74:     ADSTPTL = 0x00;
  4409  001BF6  0E00               	movlw	0
  4410  001BF8  6FE4               	movwf	228,b	;volatile
  4411                           
  4412                           ;mcc_generated_files/adcc.c: 76:     ADSTPTH = 0x00;
  4413  001BFA  0E00               	movlw	0
  4414  001BFC  6FE5               	movwf	229,b	;volatile
  4415                           
  4416                           ;mcc_generated_files/adcc.c: 78:     ADACCU = 0x00;
  4417  001BFE  0E00               	movlw	0
  4418  001C00  6FEA               	movwf	234,b	;volatile
  4419                           
  4420                           ;mcc_generated_files/adcc.c: 80:     ADRPT = 0x00;
  4421  001C02  0E00               	movlw	0
  4422  001C04  6FEC               	movwf	236,b	;volatile
  4423                           
  4424                           ;mcc_generated_files/adcc.c: 82:     ADPCH = 0x00;
  4425  001C06  0E00               	movlw	0
  4426  001C08  6FF1               	movwf	241,b	;volatile
  4427                           
  4428                           ;mcc_generated_files/adcc.c: 84:     ADACQL = 0x00;
  4429  001C0A  0E00               	movlw	0
  4430  001C0C  6FF3               	movwf	243,b	;volatile
  4431                           
  4432                           ;mcc_generated_files/adcc.c: 86:     ADACQH = 0x00;
  4433  001C0E  0E00               	movlw	0
  4434  001C10  6FF4               	movwf	244,b	;volatile
  4435                           
  4436                           ;mcc_generated_files/adcc.c: 88:     ADCAP = 0x00;
  4437  001C12  0E00               	movlw	0
  4438  001C14  6FF5               	movwf	245,b	;volatile
  4439                           
  4440                           ;mcc_generated_files/adcc.c: 90:     ADPREL = 0x00;
  4441  001C16  0E00               	movlw	0
  4442  001C18  6FF6               	movwf	246,b	;volatile
  4443                           
  4444                           ;mcc_generated_files/adcc.c: 92:     ADPREH = 0x00;
  4445  001C1A  0E00               	movlw	0
  4446  001C1C  6FF7               	movwf	247,b	;volatile
  4447                           
  4448                           ;mcc_generated_files/adcc.c: 94:     ADCON1 = 0x00;
  4449  001C1E  0E00               	movlw	0
  4450  001C20  6FF9               	movwf	249,b	;volatile
  4451                           
  4452                           ;mcc_generated_files/adcc.c: 96:     ADCON2 = 0x00;
  4453  001C22  0E00               	movlw	0
  4454  001C24  6FFA               	movwf	250,b	;volatile
  4455                           
  4456                           ;mcc_generated_files/adcc.c: 98:     ADCON3 = 0x00;
  4457  001C26  0E00               	movlw	0
  4458  001C28  6FFB               	movwf	251,b	;volatile
  4459                           
  4460                           ;mcc_generated_files/adcc.c: 100:     ADSTAT = 0x00;
  4461  001C2A  0E00               	movlw	0
  4462  001C2C  6FFC               	movwf	252,b	;volatile
  4463                           
  4464                           ;mcc_generated_files/adcc.c: 102:     ADREF = 0x03;
  4465  001C2E  0E03               	movlw	3
  4466  001C30  6FFD               	movwf	253,b	;volatile
  4467                           
  4468                           ;mcc_generated_files/adcc.c: 104:     ADACT = 0x00;
  4469  001C32  0E00               	movlw	0
  4470  001C34  6FFE               	movwf	254,b	;volatile
  4471                           
  4472                           ;mcc_generated_files/adcc.c: 106:     ADCLK = 0x1F;
  4473  001C36  0E1F               	movlw	31
  4474  001C38  6FFF               	movwf	255,b	;volatile
  4475                           
  4476                           ;mcc_generated_files/adcc.c: 108:     ADCON0 = 0x84;
  4477  001C3A  0E84               	movlw	132
  4478  001C3C  6FF8               	movwf	248,b	;volatile
  4479  001C3E                     
  4480                           ; BSR set to: 62
  4481  001C3E  0012               	return		;funcret
  4482  001C40                     __end_of_ADCC_Initialize:
  4483                           	callstack 0
  4484                           
  4485 ;; *************** function _ADCC_StartConversion *****************
  4486 ;; Defined at:
  4487 ;;		line 113 in file "mcc_generated_files/adcc.c"
  4488 ;; Parameters:    Size  Location     Type
  4489 ;;  channel         1    wreg     enum E15846
  4490 ;; Auto vars:     Size  Location     Type
  4491 ;;  channel         1    2[COMRAM] enum E15846
  4492 ;; Return value:  Size  Location     Type
  4493 ;;                  1    wreg      void 
  4494 ;; Registers used:
  4495 ;;		wreg
  4496 ;; Tracked objects:
  4497 ;;		On entry : 0/0
  4498 ;;		On exit  : 0/0
  4499 ;;		Unchanged: 0/0
  4500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4502 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4504 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4505 ;;Total ram usage:        1 bytes
  4506 ;; Hardware stack levels used: 1
  4507 ;; Hardware stack levels required when called: 2
  4508 ;; This function calls:
  4509 ;;		Nothing
  4510 ;; This function is called by:
  4511 ;;		_main
  4512 ;; This function uses a non-reentrant model
  4513 ;;
  4514                           
  4515                           	psect	text42
  4516  001F8C                     __ptext42:
  4517                           	callstack 0
  4518  001F8C                     _ADCC_StartConversion:
  4519                           	callstack 28
  4520                           
  4521                           ; BSR set to: 62
  4522                           ;incstack = 0
  4523                           ;ADCC_StartConversion@channel stored from wreg
  4524  001F8C  6E03               	movwf	ADCC_StartConversion@channel^0,c
  4525  001F8E                     
  4526                           ;mcc_generated_files/adcc.c: 113: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 114: {;mcc_generated_files/adcc.c: 116:     ADPCH = channel;
  4527  001F8E  0060  F00F  FEF1   	movff	ADCC_StartConversion@channel,16113	;volatile
  4528  001F94                     
  4529                           ;mcc_generated_files/adcc.c: 119:     ADCON0bits.ADON = 1;
  4530  001F94  013E               	movlb	62	; () banked
  4531  001F96  8FF8               	bsf	248,7,b	;volatile
  4532  001F98                     
  4533                           ; BSR set to: 62
  4534                           ;mcc_generated_files/adcc.c: 122:     ADCON0bits.ADGO = 1;
  4535  001F98  81F8               	bsf	248,0,b	;volatile
  4536  001F9A                     
  4537                           ; BSR set to: 62
  4538  001F9A  0012               	return		;funcret
  4539  001F9C                     __end_of_ADCC_StartConversion:
  4540                           	callstack 0
  4541                           
  4542 ;; *************** function _ADCC_IsConversionDone *****************
  4543 ;; Defined at:
  4544 ;;		line 125 in file "mcc_generated_files/adcc.c"
  4545 ;; Parameters:    Size  Location     Type
  4546 ;;		None
  4547 ;; Auto vars:     Size  Location     Type
  4548 ;;		None
  4549 ;; Return value:  Size  Location     Type
  4550 ;;                  1    wreg      _Bool 
  4551 ;; Registers used:
  4552 ;;		wreg
  4553 ;; Tracked objects:
  4554 ;;		On entry : 0/0
  4555 ;;		On exit  : 0/0
  4556 ;;		Unchanged: 0/0
  4557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4561 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4562 ;;Total ram usage:        0 bytes
  4563 ;; Hardware stack levels used: 1
  4564 ;; Hardware stack levels required when called: 2
  4565 ;; This function calls:
  4566 ;;		Nothing
  4567 ;; This function is called by:
  4568 ;;		_main
  4569 ;; This function uses a non-reentrant model
  4570 ;;
  4571                           
  4572                           	psect	text43
  4573  001EDC                     __ptext43:
  4574                           	callstack 0
  4575  001EDC                     _ADCC_IsConversionDone:
  4576                           	callstack 28
  4577  001EDC                     
  4578                           ;mcc_generated_files/adcc.c: 128:     return ((unsigned char)(!ADCON0bits.ADGO));
  4579  001EDC  013E               	movlb	62	; () banked
  4580  001EDE  A1F8               	btfss	248,0,b	;volatile
  4581  001EE0  EF74  F00F         	goto	u601
  4582  001EE4  EF77  F00F         	goto	u600
  4583  001EE8                     u601:
  4584  001EE8  0E01               	movlw	1
  4585  001EEA  EF78  F00F         	goto	u610
  4586  001EEE                     u600:
  4587  001EEE  0E00               	movlw	0
  4588  001EF0                     u610:
  4589  001EF0                     
  4590                           ; BSR set to: 62
  4591  001EF0  0012               	return		;funcret
  4592  001EF2                     __end_of_ADCC_IsConversionDone:
  4593                           	callstack 0
  4594                           
  4595 ;; *************** function _ADCC_GetConversionResult *****************
  4596 ;; Defined at:
  4597 ;;		line 131 in file "mcc_generated_files/adcc.c"
  4598 ;; Parameters:    Size  Location     Type
  4599 ;;		None
  4600 ;; Auto vars:     Size  Location     Type
  4601 ;;		None
  4602 ;; Return value:  Size  Location     Type
  4603 ;;                  2    2[COMRAM] unsigned short 
  4604 ;; Registers used:
  4605 ;;		wreg, status,2, status,0
  4606 ;; Tracked objects:
  4607 ;;		On entry : 0/0
  4608 ;;		On exit  : 0/0
  4609 ;;		Unchanged: 0/0
  4610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4611 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4613 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4614 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4615 ;;Total ram usage:        4 bytes
  4616 ;; Hardware stack levels used: 1
  4617 ;; Hardware stack levels required when called: 2
  4618 ;; This function calls:
  4619 ;;		Nothing
  4620 ;; This function is called by:
  4621 ;;		_main
  4622 ;; This function uses a non-reentrant model
  4623 ;;
  4624                           
  4625                           	psect	text44
  4626  001EF2                     __ptext44:
  4627                           	callstack 0
  4628  001EF2                     _ADCC_GetConversionResult:
  4629                           	callstack 28
  4630  001EF2                     
  4631                           ;mcc_generated_files/adcc.c: 134:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  4632  001EF2  013E               	movlb	62	; () banked
  4633  001EF4  51F0               	movf	240,w,b	;volatile
  4634  001EF6  6E06               	movwf	(??_ADCC_GetConversionResult+1)^0,c
  4635  001EF8  6A05               	clrf	??_ADCC_GetConversionResult^0,c
  4636  001EFA  51EF               	movf	239,w,b	;volatile
  4637  001EFC  2405               	addwf	??_ADCC_GetConversionResult^0,w,c
  4638  001EFE  6E03               	movwf	?_ADCC_GetConversionResult^0,c
  4639  001F00  0E00               	movlw	0
  4640  001F02  2006               	addwfc	(??_ADCC_GetConversionResult+1)^0,w,c
  4641  001F04  6E04               	movwf	(?_ADCC_GetConversionResult+1)^0,c
  4642  001F06                     
  4643                           ; BSR set to: 62
  4644  001F06  0012               	return		;funcret
  4645  001F08                     __end_of_ADCC_GetConversionResult:
  4646                           	callstack 0
  4647                           
  4648 ;; *************** function _INTERRUPT_InterruptManager *****************
  4649 ;; Defined at:
  4650 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  4651 ;; Parameters:    Size  Location     Type
  4652 ;;		None
  4653 ;; Auto vars:     Size  Location     Type
  4654 ;;		None
  4655 ;; Return value:  Size  Location     Type
  4656 ;;                  1    wreg      void 
  4657 ;; Registers used:
  4658 ;;		wreg, status,2, pcl, pclath, pclatu, tosl, cstack
  4659 ;; Tracked objects:
  4660 ;;		On entry : 0/0
  4661 ;;		On exit  : 0/0
  4662 ;;		Unchanged: 0/0
  4663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4666 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4667 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4668 ;;Total ram usage:        2 bytes
  4669 ;; Hardware stack levels used: 1
  4670 ;; Hardware stack levels required when called: 1
  4671 ;; This function calls:
  4672 ;;		Absolute function
  4673 ;;		_UART1_FramingError_ISR
  4674 ;;		_UART1_UartInterrupt_ISR
  4675 ;; This function is called by:
  4676 ;;		Interrupt level 2
  4677 ;; This function uses a non-reentrant model
  4678 ;;
  4679                           
  4680                           	psect	text45
  4681  001ADA                     __ptext45:
  4682                           	callstack 0
  4683  001ADA                     _INTERRUPT_InterruptManager:
  4684                           	callstack 26
  4685                           
  4686                           ; BSR set to: 62
  4687                           ;incstack = 0
  4688  001ADA  006F FFE8  F001    	movff	pclath,??_INTERRUPT_InterruptManager
  4689  001AE0  006F FFEC  F002    	movff	pclatu,??_INTERRUPT_InterruptManager+1
  4690  001AE6                     
  4691                           ;mcc_generated_files/interrupt_manager.c: 61:     if(PIE3bits.U1IE == 1 && PIR3bits.U1IF
      +                           == 1)
  4692  001AE6  0139               	movlb	57	; () banked
  4693  001AE8  AD93               	btfss	147,6,b	;volatile
  4694  001AEA  EF79  F00D         	goto	i2u30_41
  4695  001AEE  EF7B  F00D         	goto	i2u30_40
  4696  001AF2                     i2u30_41:
  4697  001AF2  EF90  F00D         	goto	i2l550
  4698  001AF6                     i2u30_40:
  4699  001AF6                     
  4700                           ; BSR set to: 57
  4701  001AF6  ADA3               	btfss	163,6,b	;volatile
  4702  001AF8  EF80  F00D         	goto	i2u31_41
  4703  001AFC  EF82  F00D         	goto	i2u31_40
  4704  001B00                     i2u31_41:
  4705  001B00  EF90  F00D         	goto	i2l550
  4706  001B04                     i2u31_40:
  4707  001B04                     
  4708                           ; BSR set to: 57
  4709                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         UART1_UARTInterruptHandler();
  4710  001B04  D802               	call	i2u32_48
  4711  001B06  EF8E  F00D         	goto	i2u32_49
  4712  001B0A                     i2u32_48:
  4713  001B0A  0005               	push	
  4714  001B0C  6EFA               	movwf	pclath,c
  4715  001B0E  501B               	movf	_UART1_UARTInterruptHandler^0,w,c
  4716  001B10  6EFD               	movwf	tosl,c
  4717  001B12  501C               	movf	(_UART1_UARTInterruptHandler+1)^0,w,c
  4718  001B14  6EFE               	movwf	tosh,c
  4719  001B16  6AFF               	clrf	tosu,c
  4720  001B18  50FA               	movf	pclath,w,c
  4721  001B1A  0012               	return		;indir
  4722  001B1C                     i2u32_49:
  4723                           
  4724                           ;mcc_generated_files/interrupt_manager.c: 64:     }
  4725  001B1C  EFAA  F00D         	goto	i2l554
  4726  001B20                     i2l550:
  4727                           
  4728                           ; BSR set to: 57
  4729  001B20  AB93               	btfss	147,5,b	;volatile
  4730  001B22  EF95  F00D         	goto	i2u33_41
  4731  001B26  EF97  F00D         	goto	i2u33_40
  4732  001B2A                     i2u33_41:
  4733  001B2A  EFAA  F00D         	goto	i2l554
  4734  001B2E                     i2u33_40:
  4735  001B2E                     
  4736                           ; BSR set to: 57
  4737  001B2E  ABA3               	btfss	163,5,b	;volatile
  4738  001B30  EF9C  F00D         	goto	i2u34_41
  4739  001B34  EF9E  F00D         	goto	i2u34_40
  4740  001B38                     i2u34_41:
  4741  001B38  EFAA  F00D         	goto	i2l554
  4742  001B3C                     i2u34_40:
  4743  001B3C                     
  4744                           ; BSR set to: 57
  4745                           ;mcc_generated_files/interrupt_manager.c: 66:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 67:         UART1_FramingErrorInterruptHandler();
  4746  001B3C  D802               	call	i2u35_48
  4747  001B3E  EFAA  F00D         	goto	i2u35_49
  4748  001B42                     i2u35_48:
  4749  001B42  0005               	push	
  4750  001B44  6EFA               	movwf	pclath,c
  4751  001B46  501D               	movf	_UART1_FramingErrorInterruptHandler^0,w,c
  4752  001B48  6EFD               	movwf	tosl,c
  4753  001B4A  501E               	movf	(_UART1_FramingErrorInterruptHandler+1)^0,w,c
  4754  001B4C  6EFE               	movwf	tosh,c
  4755  001B4E  6AFF               	clrf	tosu,c
  4756  001B50  50FA               	movf	pclath,w,c
  4757  001B52  0012               	return		;indir
  4758  001B54                     i2u35_49:
  4759  001B54                     i2l554:
  4760  001B54  0060  F00B  FFFB   	movff	??_INTERRUPT_InterruptManager+1,pclatu
  4761  001B5A  0060  F007  FFFA   	movff	??_INTERRUPT_InterruptManager,pclath
  4762  001B60  0011               	retfie		f
  4763  001B62                     __end_of_INTERRUPT_InterruptManager:
  4764                           	callstack 0
  4765                           
  4766 ;; *************** function _UART1_UartInterrupt_ISR *****************
  4767 ;; Defined at:
  4768 ;;		line 219 in file "mcc_generated_files/uart1.c"
  4769 ;; Parameters:    Size  Location     Type
  4770 ;;		None
  4771 ;; Auto vars:     Size  Location     Type
  4772 ;;		None
  4773 ;; Return value:  Size  Location     Type
  4774 ;;                  1    wreg      void 
  4775 ;; Registers used:
  4776 ;;		None
  4777 ;; Tracked objects:
  4778 ;;		On entry : 0/0
  4779 ;;		On exit  : 0/0
  4780 ;;		Unchanged: 0/0
  4781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4785 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4786 ;;Total ram usage:        0 bytes
  4787 ;; Hardware stack levels used: 1
  4788 ;; This function calls:
  4789 ;;		Nothing
  4790 ;; This function is called by:
  4791 ;;		_UART1_Initialize
  4792 ;;		_INTERRUPT_InterruptManager
  4793 ;; This function uses a non-reentrant model
  4794 ;;
  4795                           
  4796                           	psect	text46
  4797  001FE8                     __ptext46:
  4798                           	callstack 0
  4799  001FE8                     _UART1_UartInterrupt_ISR:
  4800                           	callstack 26
  4801  001FE8                     
  4802                           ;mcc_generated_files/uart1.c: 222:     U1UIRbits.WUIF = 0;
  4803  001FE8  013D               	movlb	61	; () banked
  4804  001FEA  9FF8               	bcf	248,7,b	;volatile
  4805  001FEC                     
  4806                           ; BSR set to: 61
  4807  001FEC  0012               	return		;funcret
  4808  001FEE                     __end_of_UART1_UartInterrupt_ISR:
  4809                           	callstack 0
  4810                           
  4811 ;; *************** function _UART1_FramingError_ISR *****************
  4812 ;; Defined at:
  4813 ;;		line 210 in file "mcc_generated_files/uart1.c"
  4814 ;; Parameters:    Size  Location     Type
  4815 ;;		None
  4816 ;; Auto vars:     Size  Location     Type
  4817 ;;		None
  4818 ;; Return value:  Size  Location     Type
  4819 ;;                  1    wreg      void 
  4820 ;; Registers used:
  4821 ;;		wreg, status,2
  4822 ;; Tracked objects:
  4823 ;;		On entry : 0/0
  4824 ;;		On exit  : 0/0
  4825 ;;		Unchanged: 0/0
  4826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4830 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4831 ;;Total ram usage:        0 bytes
  4832 ;; Hardware stack levels used: 1
  4833 ;; This function calls:
  4834 ;;		Nothing
  4835 ;; This function is called by:
  4836 ;;		_UART1_Initialize
  4837 ;;		_INTERRUPT_InterruptManager
  4838 ;; This function uses a non-reentrant model
  4839 ;;
  4840                           
  4841                           	psect	text47
  4842  001FE0                     __ptext47:
  4843                           	callstack 0
  4844  001FE0                     _UART1_FramingError_ISR:
  4845                           	callstack 26
  4846  001FE0                     
  4847                           ;mcc_generated_files/uart1.c: 213:     U1ERRIR = 0;
  4848  001FE0  0E00               	movlw	0
  4849  001FE2  013D               	movlb	61	; () banked
  4850  001FE4  6FF9               	movwf	249,b	;volatile
  4851  001FE6                     
  4852                           ; BSR set to: 61
  4853  001FE6  0012               	return		;funcret
  4854  001FE8                     __end_of_UART1_FramingError_ISR:
  4855                           	callstack 0
  4856                           
  4857                           ;
  4858                           ; Interrupt Vector Table @ 0x8
  4859                           ;
  4860                           
  4861                           	psect	ivt0x8
  4862  000008                     __pivt0x8:
  4863                           	callstack 0
  4864  000008                     ivt0x8_base:
  4865                           	callstack 0
  4866                           
  4867                           ; high-priority vector
  4868  000008  EF6D  F00D         	goto	_INTERRUPT_InterruptManager
  4869  000018                     	org	16
  4870                           
  4871                           ; low-priority vector
  4872  000018  00FF               	reset	
  4873                           
  4874                           	psect	text48
  4875  000000                     __ptext48:
  4876                           	callstack 0
  4877  000000                     
  4878                           	psect	rparam
  4879  0000                     
  4880                           	psect	idloc
  4881                           
  4882                           ;Config register IDLOC0 @ 0x200000
  4883                           ;	unspecified, using default values
  4884  200000                     	org	2097152
  4885  200000  0FFF               	dw	4095
  4886                           
  4887                           ;Config register IDLOC1 @ 0x200002
  4888                           ;	unspecified, using default values
  4889  200002                     	org	2097154
  4890  200002  0FFF               	dw	4095
  4891                           
  4892                           ;Config register IDLOC2 @ 0x200004
  4893                           ;	unspecified, using default values
  4894  200004                     	org	2097156
  4895  200004  0FFF               	dw	4095
  4896                           
  4897                           ;Config register IDLOC3 @ 0x200006
  4898                           ;	unspecified, using default values
  4899  200006                     	org	2097158
  4900  200006  0FFF               	dw	4095
  4901                           
  4902                           ;Config register IDLOC4 @ 0x200008
  4903                           ;	unspecified, using default values
  4904  200008                     	org	2097160
  4905  200008  0FFF               	dw	4095
  4906                           
  4907                           ;Config register IDLOC5 @ 0x20000A
  4908                           ;	unspecified, using default values
  4909  20000A                     	org	2097162
  4910  20000A  0FFF               	dw	4095
  4911                           
  4912                           ;Config register IDLOC6 @ 0x20000C
  4913                           ;	unspecified, using default values
  4914  20000C                     	org	2097164
  4915  20000C  0FFF               	dw	4095
  4916                           
  4917                           ;Config register IDLOC7 @ 0x20000E
  4918                           ;	unspecified, using default values
  4919  20000E                     	org	2097166
  4920  20000E  0FFF               	dw	4095
  4921                           
  4922                           	psect	config
  4923                           
  4924                           ;Config register CONFIG1L @ 0x300000
  4925                           ;	External Oscillator Selection
  4926                           ;	FEXTOSC = OFF, Oscillator not enabled
  4927                           ;	Reset Oscillator Selection
  4928                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
  4929  300000                     	org	3145728
  4930  300000  8C                 	db	140
  4931                           
  4932                           ;Config register CONFIG1H @ 0x300001
  4933                           ;	Clock out Enable bit
  4934                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  4935                           ;	PRLOCKED One-Way Set Enable bit
  4936                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
  4937                           ;	Clock Switch Enable bit
  4938                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  4939                           ;	Fail-Safe Clock Monitor Enable bit
  4940                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  4941  300001                     	org	3145729
  4942  300001  FF                 	db	255
  4943                           
  4944                           ;Config register CONFIG2L @ 0x300002
  4945                           ;	MCLR Enable bit
  4946                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  4947                           ;	Power-up timer selection bits
  4948                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  4949                           ;	Multi-vector enable bit
  4950                           ;	MVECEN = OFF, Interrupt contoller does not use vector table to prioritze interrupts
  4951                           ;	IVTLOCK bit One-way set enable bit
  4952                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
  4953                           ;	Low Power BOR Enable bit
  4954                           ;	LPBOREN = OFF, ULPBOR disabled
  4955                           ;	Brown-out Reset Enable bits
  4956                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  4957  300002                     	org	3145730
  4958  300002  F7                 	db	247
  4959                           
  4960                           ;Config register CONFIG2H @ 0x300003
  4961                           ;	Brown-out Reset Voltage Selection bits
  4962                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
  4963                           ;	ZCD Disable bit
  4964                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  4965                           ;	PPSLOCK bit One-Way Set Enable bit
  4966                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  4967                           ;	Stack Full/Underflow Reset Enable bit
  4968                           ;	STVREN = ON, Stack full/underflow will cause Reset
  4969                           ;	Debugger Enable bit
  4970                           ;	DEBUG = OFF, Background debugger disabled
  4971                           ;	Extended Instruction Set Enable bit
  4972                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  4973  300003                     	org	3145731
  4974  300003  FF                 	db	255
  4975                           
  4976                           ;Config register CONFIG3L @ 0x300004
  4977                           ;	WDT Period selection bits
  4978                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  4979                           ;	WDT operating mode
  4980                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  4981  300004                     	org	3145732
  4982  300004  9F                 	db	159
  4983                           
  4984                           ;Config register CONFIG3H @ 0x300005
  4985                           ;	WDT Window Select bits
  4986                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  4987                           ;	WDT input clock selector
  4988                           ;	WDTCCS = SC, Software Control
  4989  300005                     	org	3145733
  4990  300005  FF                 	db	255
  4991                           
  4992                           ;Config register CONFIG4L @ 0x300006
  4993                           ;	Boot Block Size selection bits
  4994                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  4995                           ;	Boot Block enable bit
  4996                           ;	BBEN = OFF, Boot block disabled
  4997                           ;	Storage Area Flash enable bit
  4998                           ;	SAFEN = OFF, SAF disabled
  4999                           ;	Application Block write protection bit
  5000                           ;	WRTAPP = OFF, Application Block not write protected
  5001  300006                     	org	3145734
  5002  300006  FF                 	db	255
  5003                           
  5004                           ;Config register CONFIG4H @ 0x300007
  5005                           ;	Boot Block Write Protection bit
  5006                           ;	WRTB = OFF, Boot Block not write-protected
  5007                           ;	Configuration Register Write Protection bit
  5008                           ;	WRTC = OFF, Configuration registers not write-protected
  5009                           ;	Data EEPROM Write Protection bit
  5010                           ;	WRTD = OFF, Data EEPROM not write-protected
  5011                           ;	SAF Write protection bit
  5012                           ;	WRTSAF = OFF, SAF not Write Protected
  5013                           ;	Low Voltage Programming Enable bit
  5014                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  5015  300007                     	org	3145735
  5016  300007  FF                 	db	255
  5017                           
  5018                           ;Config register CONFIG5L @ 0x300008
  5019                           ;	PFM and Data EEPROM Code Protection bit
  5020                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  5021  300008                     	org	3145736
  5022  300008  FF                 	db	255
  5023                           
  5024                           ;Config register CONFIG5H @ 0x300009
  5025                           ;	unspecified, using default values
  5026  300009                     	org	3145737
  5027  300009  FF                 	db	255
  5028                           tosu	equ	0x3FFF
  5029                           tosh	equ	0x3FFE
  5030                           tosl	equ	0x3FFD
  5031                           stkptr	equ	0x3FFC
  5032                           pclatu	equ	0x3FFB
  5033                           pclath	equ	0x3FFA
  5034                           pcl	equ	0x3FF9
  5035                           tblptru	equ	0x3FF8
  5036                           tblptrh	equ	0x3FF7
  5037                           tblptrl	equ	0x3FF6
  5038                           tablat	equ	0x3FF5
  5039                           prodh	equ	0x3FF4
  5040                           prodl	equ	0x3FF3
  5041                           indf0	equ	0x3FEF
  5042                           postinc0	equ	0x3FEE
  5043                           postdec0	equ	0x3FED
  5044                           preinc0	equ	0x3FEC
  5045                           plusw0	equ	0x3FEB
  5046                           fsr0h	equ	0x3FEA
  5047                           fsr0l	equ	0x3FE9
  5048                           wreg	equ	0x3FE8
  5049                           indf1	equ	0x3FE7
  5050                           postinc1	equ	0x3FE6
  5051                           postdec1	equ	0x3FE5
  5052                           preinc1	equ	0x3FE4
  5053                           plusw1	equ	0x3FE3
  5054                           fsr1h	equ	0x3FE2
  5055                           fsr1l	equ	0x3FE1
  5056                           bsr	equ	0x3FE0
  5057                           indf2	equ	0x3FDF
  5058                           postinc2	equ	0x3FDE
  5059                           postdec2	equ	0x3FDD
  5060                           preinc2	equ	0x3FDC
  5061                           plusw2	equ	0x3FDB
  5062                           fsr2h	equ	0x3FDA
  5063                           fsr2l	equ	0x3FD9
  5064                           status	equ	0x3FD8

Data Sizes:
    Strings     0
    Constant    5
    Data        0
    BSS         13
    Persistent  10
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     20      33
    BANK0           160     74      84
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0

Pointer List with Targets:

    Tm_Baje_periodico@ctp	PTR struct Tm_Periodico size(2) Largest target is 7
		 -> main@time_out(BANK0[7]), 

    Tm_Hubo_periodico@ctp	PTR struct Tm_Periodico size(2) Largest target is 7
		 -> main@time_out(BANK0[7]), 

    Tm_Procese_tiempo@ctp	PTR struct Tm_Periodico size(2) Largest target is 7
		 -> main@time_out(BANK0[7]), 

    Tm_Inicie_periodico@ctp	PTR struct Tm_Periodico size(2) Largest target is 7
		 -> main@time_out(BANK0[7]), 

    actualizar_recibido_Eusart@disp	PTR struct usart size(2) Largest target is 11
		 -> main@disp(BANK0[11]), 

    dato_recibido_completo@disp	PTR struct usart size(2) Largest target is 11
		 -> main@disp(BANK0[11]), 

    enviar_Eusart@disp	PTR struct usart size(2) Largest target is 4095
		 -> RAM(DATA[4095]), 

    recibir_periodo_Eusart@disp	PTR struct usart size(2) Largest target is 11
		 -> main@disp(BANK0[11]), 

    iniciar_struct_usart@disp	PTR struct usart size(2) Largest target is 11
		 -> main@disp(BANK0[11]), 

    envioSPI@spi	PTR struct spi size(2) Largest target is 14
		 -> main@spi(BANK0[14]), 

    actualize_valor@spi	PTR struct spi size(2) Largest target is 14
		 -> main@spi(BANK0[14]), 

    selec_imp@spi	PTR struct spi size(2) Largest target is 14
		 -> main@spi(BANK0[14]), 

    selec_gain@spi	PTR struct spi size(2) Largest target is 14
		 -> main@spi(BANK0[14]), 

    selec_channel@spi	PTR struct spi size(2) Largest target is 14
		 -> main@spi(BANK0[14]), 

    inicie_SPI@spi	PTR struct spi size(2) Largest target is 14
		 -> main@spi(BANK0[14]), 

    cola_vacia@c	PTR struct eCola size(2) Largest target is 21
		 -> main@cola(BANK0[21]), 

    cola_llena@c	PTR struct eCola size(2) Largest target is 21
		 -> main@cola(BANK0[21]), 

    cola_get@c	PTR struct eCola size(2) Largest target is 21
		 -> main@cola(BANK0[21]), 

    cola_add@c	PTR struct eCola size(2) Largest target is 21
		 -> main@cola(BANK0[21]), 

    inicie_cola@c	PTR struct eCola size(2) Largest target is 21
		 -> main@colarx(BANK0[21]), main@cola(BANK0[21]), 

    UART1_SetUartInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_UartInterrupt_ISR(), 

    UART1_UARTInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_UartInterrupt_ISR(), 

    UART1_SetFramingErrorInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_FramingError_ISR(), 

    UART1_FramingErrorInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_FramingError_ISR(), 

    UART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultErrorHandler(), 

    UART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), 

    UART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), 

    UART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultErrorHandler(), 

    UART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultOverrunErrorHandler(), 

    UART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMRAM

    _main->_Tm_Inicie_periodico
    _recibir_periodo_Eusart->_UART1_Write
    _envioSPI->_SPI1_WriteByte
    _enviar_Eusart->_cola_get
    _cola_get->_cola_vacia
    _cola_add->_cola_llena
    _actualizar_recibido_Eusart->___wmul
    _Tm_Inicie_periodico->_actualizar_recibido_Eusart
    _UART1_Initialize->_UART1_SetErrorHandler
    _UART1_Initialize->_UART1_SetFramingErrorHandler
    _UART1_Initialize->_UART1_SetFramingErrorInterruptHandler
    _UART1_Initialize->_UART1_SetOverrunErrorHandler
    _UART1_Initialize->_UART1_SetUartInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                76    76      0    8416
                                             18 COMRAM     2     2      0
                                              0 BANK0     74    74      0
           _ADCC_GetConversionResult
                    _ADCC_Initialize
              _ADCC_IsConversionDone
               _ADCC_StartConversion
               _INTERRUPT_Initialize
                    _SPI1_Initialize
                  _SYSTEM_Initialize
            _TMR2_HasOverflowOccured
                    _TMR2_Initialize
                  _Tm_Baje_periodico
                  _Tm_Hubo_periodico
                _Tm_Inicie_periodico
                  _Tm_Procese_tiempo
                   _UART1_Initialize
                  _UART1_is_rx_ready
                  _UART1_is_tx_ready
         _actualizar_recibido_Eusart
                    _actualize_valor
                           _cola_add
                           _cola_get
                         _cola_vacia
             _dato_recibido_completo
                      _enviar_Eusart
                           _envioSPI
               _iniciar_struct_usart
                         _inicie_SPI
                        _inicie_cola
             _recibir_periodo_Eusart
                      _selec_channel
                         _selec_gain
                          _selec_imp
 ---------------------------------------------------------------------------------
 (1) _selec_imp                                            3     0      3     196
                                              2 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (1) _selec_gain                                           3     0      3     196
                                              2 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (1) _selec_channel                                        3     0      3     500
                                              2 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (1) _recibir_periodo_Eusart                               5     2      3     592
                                              3 COMRAM     5     2      3
                        _UART1_Write
 ---------------------------------------------------------------------------------
 (2) _UART1_Write                                          1     1      0      22
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _inicie_cola                                          2     0      2     218
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _inicie_SPI                                           2     0      2     252
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _iniciar_struct_usart                                 2     0      2     230
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _envioSPI                                             8     6      2     448
                                              3 COMRAM     8     6      2
                     _SPI1_WriteByte
 ---------------------------------------------------------------------------------
 (2) _SPI1_WriteByte                                       1     1      0      22
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _enviar_Eusart                                        2     0      2      98
                                             11 COMRAM     2     0      2
                           _cola_get (ARG)
 ---------------------------------------------------------------------------------
 (1) _dato_recibido_completo                               2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _cola_get                                             5     3      2     427
                                              6 COMRAM     5     3      2
                         _cola_vacia
 ---------------------------------------------------------------------------------
 (1) _cola_vacia                                           4     2      2     174
                                              2 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _cola_add                                             5     2      3    1338
                                              6 COMRAM     5     2      3
                         _cola_llena
 ---------------------------------------------------------------------------------
 (2) _cola_llena                                           4     2      2      98
                                              2 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _actualize_valor                                      4     0      4     348
                                              2 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _actualizar_recibido_Eusart                           6     4      2     519
                                              8 COMRAM     6     4      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     355
                                              2 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _UART1_is_tx_ready                                    1     1      0      24
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART1_is_rx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Tm_Procese_tiempo                                    6     4      2     274
                                              2 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _Tm_Inicie_periodico                                  4     0      4     414
                                             14 COMRAM     4     0      4
         _actualizar_recibido_Eusart (ARG)
 ---------------------------------------------------------------------------------
 (1) _Tm_Hubo_periodico                                    2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _Tm_Baje_periodico                                    2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _TMR2_HasOverflowOccured                              1     1      0      45
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     490
                    _ADCC_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                   _UART1_Initialize
 ---------------------------------------------------------------------------------
 (1) _UART1_Initialize                                     0     0      0     490
              _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
_UART1_SetFramingErrorInterruptHandl
       _UART1_SetOverrunErrorHandler
      _UART1_SetUartInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _UART1_SetUartInterruptHandler                        2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _UART1_SetOverrunErrorHandler                         2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _UART1_SetFramingErrorInterruptHandler                2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _UART1_SetFramingErrorHandler                         2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _UART1_SetErrorHandler                                2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADCC_StartConversion                                 1     1      0      22
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADCC_IsConversionDone                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADCC_GetConversionResult                             4     2      2       0
                                              2 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           2     2      0       0
                                              0 COMRAM     2     2      0
                   Absolute function *
             _UART1_FramingError_ISR *
            _UART1_UartInterrupt_ISR *
 ---------------------------------------------------------------------------------
 (5) _UART1_UartInterrupt_ISR                              0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _UART1_FramingError_ISR                               0     0      0       0
 ---------------------------------------------------------------------------------
 (5) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_GetConversionResult
   _ADCC_Initialize
   _ADCC_IsConversionDone
   _ADCC_StartConversion
   _INTERRUPT_Initialize
   _SPI1_Initialize
   _SYSTEM_Initialize
     _ADCC_Initialize
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _UART1_Initialize
       _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetFramingErrorInterruptHandler
       _UART1_SetOverrunErrorHandler
       _UART1_SetUartInterruptHandler
   _TMR2_HasOverflowOccured
   _TMR2_Initialize
   _Tm_Baje_periodico
   _Tm_Hubo_periodico
   _Tm_Inicie_periodico
     _actualizar_recibido_Eusart (ARG)
       ___wmul
   _Tm_Procese_tiempo
   _UART1_Initialize
   _UART1_is_rx_ready
   _UART1_is_tx_ready
   _actualizar_recibido_Eusart
   _actualize_valor
   _cola_add
     _cola_llena
   _cola_get
     _cola_vacia
   _cola_vacia
   _dato_recibido_completo
   _enviar_Eusart
     _cola_get (ARG)
   _envioSPI
     _SPI1_WriteByte
   _iniciar_struct_usart
   _inicie_SPI
   _inicie_cola
   _recibir_periodo_Eusart
     _UART1_Write
   _selec_channel
   _selec_gain
   _selec_imp

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _UART1_FramingError_ISR *
   _UART1_UartInterrupt_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FFF      0       0      70        0.0%
EEDATA             400      0       0       0        0.0%
BITBIGSFRhhhhll    22A      0       0      50        0.0%
BITBIGSFRllll      193      0       0      68        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBIGSFRhhhhll     CB      0       0      46        0.0%
BITBIGSFRhhhhll     C6      0       0      43        0.0%
BITBIGSFRhhhhll     AA      0       0      40        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     4A      54       5       52.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     14      21       1       34.7%
BITBIGSFRhhhhll     59      0       0      52        0.0%
BITBIGSFRhhhhll     33      0       0      62        0.0%
BITBIGSFRhhhhhh     2D      0       0      36        0.0%
BITBIGSFRhhhhll     29      0       0      60        0.0%
BITBIGSFRhhhhll     1C      0       0      42        0.0%
BITBIGSFRllh        1B      0       0      66        0.0%
BITBIGSFRlh         11      0       0      65        0.0%
BITBIGSFRlllh        E      0       0      67        0.0%
BITBIGSFRhhhhll      B      0       0      59        0.0%
BITBIGSFRhhhhhh      B      0       0      37        0.0%
BITBIGSFRhhhhll      A      0       0      39        0.0%
BITBIGSFRhhhhll      5      0       0      51        0.0%
BITBIGSFRhhhhll      5      0       0      58        0.0%
BITBIGSFRhhhhll      5      0       0      56        0.0%
BITBIGSFRhhhhll      5      0       0      54        0.0%
BITBIGSFRhhhhll      4      0       0      53        0.0%
BITBIGSFRhhhhll      4      0       0      55        0.0%
BITBIGSFRhhhhll      4      0       0      57        0.0%
BITBIGSFRhhhhhl      3      0       0      38        0.0%
BITBIGSFRhhhhll      2      0       0      47        0.0%
BITBIGSFRhhhhll      1      0       0      49        0.0%
BITBIGSFRhhhhll      1      0       0      48        0.0%
BITBIGSFRhhhhll      1      0       0      44        0.0%
BITBIGSFRhhhhll      1      0       0      45        0.0%
BITBIGSFRhhhhll      1      0       0      41        0.0%
BITBIGSFRhhhhll      1      0       0      61        0.0%
BITBIGSFRhhl         1      0       0      63        0.0%
BITBIGSFRhl          1      0       0      64        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      75      69        0.0%
DATA                 0      0      75       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Mon Apr 10 19:46:52 2023

                                   SPI1_WriteByte@byte 0003  
                                                   l51 1DF8  
                                                   l54 1EC4  
                                                   l57 1E40  
                               __end_of_FVR_Initialize 1FE0  
                                  ___wmul@multiplicand 0005  
                                                  l303 1C3E  
                                                  l312 1F06  
                                                  l224 1DA8  
                                                  l306 1F9A  
                                                  l154 191E  
                                                  l309 1EF0  
                                                  l502 1E78  
                                                  l184 1E5E  
                                                  l520 1FD6  
                                                  l514 1FCC  
                                                  l532 1FAE  
                                                  l517 1FB8  
                                                  l391 1FDE  
                                                  l480 1D7A  
                                                  l800 1F42  
                                                  l545 1FF0  
                                                  l529 1FC2  
                                                  l473 1AD8  
                                                  l481 1D7C  
                                                  l618 1FA4  
                                                  l803 1F2E  
                                                  l476 1EDA  
                                                  l740 132C  
                                                  l581 1EAC  
                                                  l814 1710  
                                                  l806 1F1A  
                                                  l751 1D50  
                                                  l728 11A6  
                                                  l809 1E92  
                                                  l841 1562  
                                                  l770 1CD2  
                                                  l762 17C8  
                                                  l850 1F56  
                                                  l738 1286  
                                                  l827 1BE2  
                                                  l499 1E62  
                                                  l756 1876  
                                                  l775 1D12  
                                                  l872 163C  
                                                  l856 1F8A  
                                                  l866 1C90  
                                                  l875 1F68  
                                                  l859 1A4A  
                                                  l797 19B4  
                                                  l878 1F7A  
                                                  l895 1DD2  
                                                  _PR2 003FAB  
                                                  u600 1EEE  
                                                  u601 1EE8  
                                                  u610 1EF0  
                                                  u620 1ED8  
                                                  u700 1862  
                                                  u621 1ED2  
                                                  u701 185E  
                                                  u630 1D66  
                                                  u710 1730  
                                                  u550 1E72  
                                                  u631 1D62  
                                                  u711 172C  
                                                  u551 1E6E  
                                                  u640 1D76  
                                                  u560 1CFE  
                                                  u720 17B2  
                                                  u800 1198  
                                                  u641 1D72  
                                                  u561 1CFA  
                                                  u721 17AE  
                                                  u801 1194  
                                                  u650 157E  
                                                  u626 1EDA  
                                                  u570 1CBE  
                                                  u730 13BA  
                                                  u810 11EE  
                                                  u651 157A  
                                                  u571 1CBA  
                                                  u731 13B6  
                                                  u811 11EA  
                                                  u580 1D90  
                                                  u660 15AE  
                                                  u740 14CE  
                                                  u820 1200  
                                                  u581 1D8A  
                                                  u661 15AA  
                                                  u741 14CA  
                                                  u821 11FC  
                                                  u590 1DA4  
                                                  u670 15FC  
                                                  u830 1268  
                                                  u750 10AE  
                                                  u591 1DA0  
                                                  u671 15F8  
                                                  u831 1264  
                                                  u751 10AA  
                                                  u840 1278  
                                                  u760 10D6  
                                                  u841 1274  
                                                  u761 10D2  
                                                  u586 1D92  
                                                  u690 17E8  
                                                  u850 12CE  
                                                  u770 110E  
                                                  u691 17E4  
                                                  u851 12CA  
                                                  u771 110A  
                                                  u860 12EC  
                                                  u780 1120  
                                                  u685 169A  
                                                  u861 12E8  
                                                  u781 111C  
                                                  u870 131C  
                                                  u790 1188  
                                                  u871 1318  
                                                  u791 1184  
                                                  u880 1348  
                                                  u881 1344  
                                ?_iniciar_struct_usart 0003  
                                      _TMR2_Initialize 1E42  
                                                  tosl 003FFD  
                                                  wreg 003FE8  
                        TMR2_HasOverflowOccured@status 0003  
                           recibir_periodo_Eusart@dato 0006  
                           recibir_periodo_Eusart@disp 0004  
                                                 l2300 18FE  
                                                 l2302 1900  
                                                 l2310 1E42  
                                                 l2304 1EAE  
                                                 l2312 1E56  
                                                 l2320 1A6C  
                                                 l2400 1DD4  
                                                 l2306 1FD8  
                                                 l2330 1A82  
                                                 l2322 1A72  
                                                 l2314 1A4C  
                                                 l2410 1DE8  
                                                 l2402 1DD8  
                                                 l2308 1BE4  
                                                 l2340 1A96  
                                                 l2332 1A86  
                                                 l2324 1A76  
                                                 l2316 1A50  
                                                 l2412 1DEC  
                                                 l2404 1DDC  
                                                 l2420 1DA4  
                                                 l2500 15AE  
                                                 l2430 1F98  
                                                 l2270 1FB0  
                                                 l2350 1AAA  
                                                 l2342 1A9A  
                                                 l2334 1A8A  
                                                 l2326 1A7A  
                                                 l2318 1A5C  
                                                 l2414 1DF0  
                                                 l2406 1DE0  
                                                 l2422 1DA6  
                                                 l2502 15BE  
                                                 l2432 1EDC  
                                                 l2280 1890  
                                                 l2360 1E94  
                                                 l2272 1FCE  
                                                 l2264 1FBA  
                                                 l2352 1AB6  
                                                 l2344 1A9E  
                                                 l2336 1A8E  
                                                 l2328 1A7E  
                                                 l2416 1DF4  
                                                 l2408 1DE4  
                                                 l2512 1F6A  
                                                 l2504 15E2  
                                                 l2440 1EC6  
                                                 l2520 16FE  
                                                 l2600 101A  
                                                 l2426 1F8E  
                                                 l2274 1FEE  
                                                 l2290 18F0  
                                                 l2282 189E  
                                                 l2362 1EAA  
                                                 l2266 1FA6  
                                                 l2354 1AC2  
                                                 l2346 1AA2  
                                                 l2338 1A92  
                                                 l2418 1D7E  
                                                 l2506 15FC  
                                                 l2450 1D76  
                                                 l2522 17CA  
                                                 l2370 1CD4  
                                                 l2514 163E  
                                                 l2610 104E  
                                                 l2602 101E  
                                                 l2436 1EF2  
                                                 l2428 1F94  
                                                 l2292 18F2  
                                                 l2284 18A6  
                                                 l2276 1E1E  
                                                 l2268 1FC4  
                                                 l2356 1AD2  
                                                 l2348 1AA6  
                                                 l2508 1F58  
                                                 l2444 1D52  
                                                 l2532 1E7A  
                                                 l2524 17E8  
                                                 l2372 1CFE  
                                                 l2516 16EA  
                                                 l2460 1920  
                                                 l2364 1E62  
                                                 l2700 1280  
                                                 l2620 1096  
                                                 l2612 105A  
                                                 l2604 1022  
                                                 l2294 18F4  
                                                 l2286 18AC  
                                                 l2278 1878  
                                                 l2358 1AD6  
                                                 l2454 1C40  
                                                 l2446 1D56  
                                                 l2390 1CCA  
                                                 l2382 1C92  
                                                 l2526 1836  
                                                 l2542 1786  
                                                 l2534 1712  
                                                 l2550 1F44  
                                                 l2518 16EC  
                                                 l2470 1974  
                                                 l2462 1934  
                                                 l2366 1E72  
                                                 l2710 12AE  
                                                 l2702 1282  
                                                 l2630 10E2  
                                                 l2622 109A  
                                                 l2614 106A  
                                                 l2606 1036  
                                                 _ADC1 00AE  
                                                 l2296 18FA  
                                                 l2288 18EE  
                                                 l2456 1C60  
                                                 l2448 1D66  
                                                 l2384 1CBE  
                                                 l2528 1862  
                                                 l2544 17B2  
                                                 l2536 1730  
                                                 l2368 1F9E  
                                                 l2472 1988  
                                                 l2464 1944  
                                                 l2560 13D2  
                                                 l2552 1374  
                                                 l2480 1F30  
                                                 l2720 131C  
                                                 l2704 1284  
                                                 l2712 12BA  
                                                 l2640 1120  
                                                 l2632 10E8  
                                                 l2624 10AE  
                                                 l2616 107A  
                                                 l2608 1042  
                                                 _ADC2 00AC  
                                                 l2298 18FC  
                                                 l2394 1DAA  
                                                 l2378 1D0A  
                                                 l2546 17C6  
                                                 l2538 1780  
                                                 l2490 1BAE  
                                                 l2474 199C  
                                                 l2466 1954  
                                                 l2458 1D14  
                                                 l2570 14CE  
                                                 l2562 13EA  
                                                 l2554 1386  
                                                 l2482 1F1C  
                                                 l2722 1348  
                                                 l2714 12CE  
                                                 l2706 128A  
                                                 l2650 1164  
                                                 l2642 112C  
                                                 l2634 10EE  
                                                 l2626 10BA  
                                                 l2618 108A  
                                                 l2396 1DCA  
                                                 l2580 1F7C  
                                                 l2492 1BBE  
                                                 l2476 19B0  
                                                 l2468 1964  
                                                 l2572 14F6  
                                                 l2564 142C  
                                                 l2556 139C  
                                                 l2484 1F08  
                                                 l2716 12EC  
                                                 l2708 129A  
                                                 l2660 1198  
                                                 l2652 116A  
                                                 l2644 1132  
                                                 l2628 10D6  
                                                 l2636 10FA  
                                                 l2494 1BCE  
                                                 l2486 1B62  
                                                 l2478 19B2  
                                                 l2566 146E  
                                                 l2558 13BA  
                                                 l2574 150E  
                                                 l2718 1308  
                                                 l2670 11AA  
                                                 l2662 119E  
                                                 l2654 1170  
                                                 l2646 1144  
                                                 l2638 110E  
                                                 l2590 1008  
                                 _ADCC_StartConversion 1F8C  
                                                 l2496 1564  
                                                 l2584 19B6  
                                                 l2488 1B9E  
                                                 l2744 1534  
                                                 l2568 14B0  
                                                 l2680 1200  
                                                 l2672 11BA  
                                                 l2664 11A0  
                                                 l2648 1154  
                                                 l2656 1176  
                                                 l2592 100C  
                                                 l2498 157E  
                                                 l2586 19C6  
                                                 l2690 1250  
                                                 l2682 120C  
                                                 l2674 11CE  
                                                 l2666 11A2  
                                                 l2658 1188  
                                                 l2594 100E  
                                                 l2684 1220  
                                                 l2692 1256  
                                                 l2668 11A4  
                                                 l2676 11DA  
                                                 l2596 1012  
                                                 l2694 1268  
                                                 l2686 1230  
                                                 l2678 11EE  
                                                 l2598 1016  
                                                 l2696 1278  
                                                 l2688 1240  
                                                 l2698 127E  
                                                 _LATA 003FBA  
                                                 _LATB 003FBB  
                                                 _LATC 003FBC  
                                                 _LATD 003FBD  
                                                 _LATE 003FBE  
                                                 _T2PR 003FAB  
                                                 _PMD0 0039C0  
                                                 _PMD1 0039C1  
                                                 _PMD2 0039C2  
                                                 _PMD3 0039C3  
                                                 _PMD4 0039C4  
                                                 _PMD5 0039C5  
                                                 _PMD6 0039C6  
                                                 _PMD7 0039C7  
                                                 _TMR2 003FAA  
                                                 _WPUA 003A41  
                                                 _WPUB 003A51  
                                                 _WPUC 003A61  
                                                 _WPUD 003A71  
                                                 _WPUE 003A81  
                                                 _data 00AA  
                                                 _main 1008  
                                                 fsr1h 003FE2  
                                                 fsr2h 003FDA  
                                                 indf1 003FE7  
                                                 indf2 003FDF  
                                                 fsr1l 003FE1  
                                                 fsr2l 003FD9  
                                selec_channel@canalspi 0005  
                       __end_of_recibir_periodo_Eusart 1564  
                                                 prodh 003FF4  
                                                 prodl 003FF3  
                                                 start 001A  
                                         ?_inicie_cola 0003  
                                       _SPI1STATUSbits 003D17  
                                         ___param_bank 000000  
                                      ?_FVR_Initialize 0001  
                        __end_of_OSCILLATOR_Initialize 1EC6  
                                                _ADACT 003EFE  
                                                _ADCAP 003EF5  
                                                ?_main 0001  
                                                _ADCLK 003EFF  
                                                _ADCNT 003EEB  
                                                _ADPCH 003EF1  
                                                _ADREF 003EFD  
                                                _ADRPT 003EEC  
                                                _U1P1H 003DED  
                                                _U1P2H 003DEF  
                                                _U1P3H 003DF1  
                                                _U1P1L 003DEC  
                                                _U1P2L 003DEE  
                                                _T2CON 003FAC  
                                                _U1P3L 003DF0  
                                                _T2HLT 003FAD  
                                                _T2TMR 003FAA  
                                                _U1UIR 003DF8  
                                                _T2RST 003FAF  
                                                _U1RXB 003DE8  
                                                _U1TXB 003DEA  
                                                i2l523 1FE6  
                                                i2l526 1FEC  
                                                i2l550 1B20  
                                                i2l554 1B54  
                                                _OSCEN 0039DD  
                                                _TRISA 003FC2  
                                                _TRISB 003FC3  
                                                _TRISC 003FC4  
                                                _TRISD 003FC5  
                                                _TRISE 003FC6  
                              ??_ADCC_IsConversionDone 0003  
                                                _conv1 00B3  
                                                _conv2 00B2  
                                ?_ADCC_StartConversion 0001  
                                         main@time_out 0075  
                                                pclath 003FFA  
                                                pclatu 003FFB  
                                __end_of_selec_channel 1F44  
                                                plusw2 003FDB  
                                                status 003FD8  
                          __end_of_Tm_Inicie_periodico 1C92  
                     _UART1_DefaultFramingErrorHandler 000000  
                                          envioSPI@spi 0004  
                                      __initialization 1DFA  
                                         __end_of_main 1374  
                               _dato_recibido_completo 1F7C  
                                    _Tm_Baje_periodico 1F6A  
                              __end_of_TMR2_Initialize 1E60  
                          ?_INTERRUPT_InterruptManager 0001  
                                         ?_UART1_Write 0001  
                               ??_iniciar_struct_usart 0005  
                                   ?_Tm_Baje_periodico 0003  
                                               ??_main 0013  
                                        __activetblptr 000003  
                                        _enviar_Eusart 1F44  
                                     _UART1_Initialize 1A4C  
                                  ??_Tm_Baje_periodico 0005  
                                               _ADACCH 003EE9  
                                               _ADACCL 003EE8  
                                               _ADACCU 003EEA  
                                               _ADACQH 003EF4  
                                               _ADACQL 003EF3  
                                               _ADCON0 003EF8  
                                               _ADCON1 003EF9  
                                               _ADCON2 003EFA  
                                               _ADCON3 003EFB  
                                               _ADERRH 003EE3  
                                               _ADERRL 003EE2  
                                               _ADLTHH 003EDF  
                                               _ADLTHL 003EDE  
                                               _ADRESH 003EF0  
                                               _ADRESL 003EEF  
                                               _ADPREH 003EF7  
                                               _ADPREL 003EF6  
                                               _ADSTAT 003EFC  
                                               _ADUTHH 003EE1  
                                               _ADUTHL 003EE0  
                                               _ANSELA 003A40  
                                               _ANSELB 003A50  
                                               _ANSELC 003A60  
                                               _ANSELD 003A70  
                                               _ANSELE 003A80  
                                               _RB1I2C 003A5A  
                                               _RB2I2C 003A5B  
                                               _RD0I2C 003A7A  
                                               _U1CON0 003DF2  
                                               _U1CON1 003DF3  
                                               _U1CON2 003DF4  
                                               _RD1I2C 003A7B  
                                               _RC3I2C 003A6A  
                                               _RC4I2C 003A6B  
                                               _U1BRGH 003DF6  
                                               _U1FIFO 003DF7  
                                               _U1BRGL 003DF5  
                                               _RC3PPS 003A13  
                                               _RC5PPS 003A15  
                                               _ODCONA 003A42  
                                               _ODCONB 003A52  
                                               _RC6PPS 003A16  
                                               _ODCONC 003A62  
                                               _ODCOND 003A72  
                                               _ODCONE 003A82  
                                               i2l2050 1B04  
                                               i2l2052 1B2E  
                                               i2l2054 1B3C  
                                               i2l2046 1AE6  
                                               i2l2048 1AF6  
                                               i2l1772 1FE0  
                                               i2l1774 1FE8  
                                               _INLVLA 003A44  
                                               _INLVLB 003A54  
                                               _INLVLC 003A64  
                                               _INLVLD 003A74  
                                               _INLVLE 003A84  
                                               _FVRCON 003EC1  
                                               _OSCFRQ 0039DF  
                                    ??_actualize_valor 0007  
                                _UART1_SetErrorHandler 1FCE  
                           ??_ADCC_GetConversionResult 0005  
                                     __end_of_cola_add 1878  
                                     __end_of_cola_get 17CA  
                            __end_of_Tm_Baje_periodico 1F7C  
                                               ___wmul 1DAA  
                                     __end_of_envioSPI 1712  
                                    _Tm_Hubo_periodico 1F58  
                                               clear_0 1E00  
                                   ?_Tm_Hubo_periodico 0003  
                                               isa$std 000001  
                             ?_TMR2_HasOverflowOccured 0001  
                                      _ADCC_Initialize 1BE4  
                                       ?_enviar_Eusart 000C  
                                       _PMD_Initialize 1E1E  
                             ??_UART1_FramingError_ISR 0001  
                                         __mediumconst 0000  
                                  ??_Tm_Hubo_periodico 0005  
                      ??_UART1_SetUartInterruptHandler 0005  
                               ??_ADCC_StartConversion 0003  
        UART1_SetUartInterruptHandler@InterruptHandler 0003  
UART1_SetFramingErrorInterruptHandler@InterruptHandler 0003  
                 __end_of_UART1_SetOverrunErrorHandler 1FBA  
                         _UART1_SetOverrunErrorHandler 1FB0  
                            _UART1_DefaultErrorHandler 000000  
                                    _SYSTEM_Initialize 1DD4  
                                           __accesstop 0060  
                              __end_of__initialization 1E18  
                                   ?_SYSTEM_Initialize 0001  
                                        ___rparam_used 000001  
                            __end_of_Tm_Hubo_periodico 1F6A  
                                       __pcstackCOMRAM 0001  
                                  ??_SYSTEM_Initialize 0005  
                                    ??_SPI1_Initialize 0003  
                                     ?_TMR2_Initialize 0001  
                               __end_of_PMD_Initialize 1E42  
                                   _spi1_configuration 1001  
                            _UART1_FramingErrorHandler 0019  
                          ADCC_StartConversion@channel 0003  
                               _UART1_is_tx_ready$1114 0003  
                            __end_of_SYSTEM_Initialize 1DFA  
                                           __pbssBANK0 00AA  
                        ?_UART1_SetOverrunErrorHandler 0003  
                               ?_UART1_SetErrorHandler 0003  
                                         inicie_cola@c 0003  
                                           __pnvCOMRAM 0015  
                       actualizar_recibido_Eusart@disp 0009  
                                       _SPI1_WriteByte 1F9C  
                                              IVTBASEH 003FD6  
                                              IVTBASEL 003FD5  
                                              IVTBASEU 003FD7  
                                     ??_FVR_Initialize 0003  
                                              ?___wmul 0003  
                              __end_of_ADCC_Initialize 1C40  
                      __end_of_TMR2_HasOverflowOccured 1DAA  
                                              _ADFLTRH 003EE7  
                                              _ADFLTRL 003EE6  
                                              _ADPREVH 003EEE  
                                              _ADPREVL 003EED  
                                              _ADSTPTH 003EE5  
                                              _ADSTPTL 003EE4  
                                      ??_enviar_Eusart 000E  
                                      ?_PMD_Initialize 0001  
                                           _cola_llena 1C92  
                                           _cola_vacia 1CD4  
                                              _U1ERRIE 003DFA  
                                              _U1ERRIR 003DF9  
                                              _U1RXPPS 003AE5  
                                              _OSCCON1 0039D9  
                                              _OSCCON3 0039DB  
                                              _SPI1CLK 003D1C  
                                              i2u30_40 1AF6  
                                              i2u30_41 1AF2  
                                              i2u31_40 1B04  
                                              i2u31_41 1B00  
                                              i2u33_40 1B2E  
                                              i2u32_48 1B0A  
                                              i2u33_41 1B2A  
                                              i2u32_49 1B1C  
                                              i2u34_40 1B3C  
                                              i2u34_41 1B38  
                                              _SPI1RXB 003D10  
                                              i2u35_48 1B42  
                                              i2u35_49 1B54  
                                              _SPI1TXB 003D11  
                                              _OSCTUNE 0039DE  
                             ?_UART1_UartInterrupt_ISR 0001  
                                              _SLRCONA 003A43  
                                              _SLRCONB 003A53  
                                              _SLRCONC 003A63  
                                              _SLRCOND 003A73  
                                              _SLRCONE 003A83  
                                            ?_cola_add 0007  
                                            ?_cola_get 0007  
                           _UART1_UARTInterruptHandler 001B  
                        __end_of_ADCC_IsConversionDone 1EF2  
                                    _Tm_Procese_tiempo 1564  
                              actualize_valor@valorspi 0005  
                __end_of_UART1_SetUartInterruptHandler 1FB0  
                        _UART1_SetUartInterruptHandler 1FA6  
                                            ?_envioSPI 0004  
                                   ?_Tm_Procese_tiempo 0003  
                               __end_of_SPI1_WriteByte 1FA6  
                              ?_dato_recibido_completo 0003  
                                           _inicie_SPI 1920  
                                              __Hparam 0000  
                                  ??_Tm_Procese_tiempo 0005  
                                              __Lparam 0000  
                             __end_of_UART1_Initialize 1ADA  
                                         __psmallconst 1000  
                                              __pcinit 1DFA  
                                              _f_send1 00B1  
                                              _f_send2 00B0  
                                              __ramtop 1000  
                                              __ptext0 1008  
                                              __ptext1 1F08  
                                              __ptext2 1F1C  
                                              __ptext3 1F30  
                                              __ptext4 1374  
                                              __ptext5 1E60  
                                              __ptext6 1D14  
                                              __ptext7 1920  
                                              __ptext8 1B62  
                                              __ptext9 163E  
                                _OSCILLATOR_Initialize 1EAE  
                                            _T2CONbits 003FAC  
                                      _actualize_valor 1E7A  
                             ??_PIN_MANAGER_Initialize 0003  
                                            _T2HLTbits 003FAD  
                            __end_of_Tm_Procese_tiempo 163E  
                                           ??_cola_add 000A  
                                           ??_cola_get 0009  
                                              main@spi 009C  
                                 end_of_initialization 1E18  
                                            _U1UIRbits 003DF8  
                                    __end_of_selec_imp 1F1C  
                                            _T2RSTbits 003FAF  
                                        selec_gain@spi 0003  
                                           ??_envioSPI 0006  
                                           _selec_gain 1F1C  
                                      ?_SPI1_WriteByte 0001  
                       __end_of_dato_recibido_completo 1F8C  
                       ??_UART1_SetOverrunErrorHandler 0005  
                               _UART1_FramingError_ISR 1FE0  
                               selec_imp@impedanciaspi 0005  
                                            _SPI1TCNTL 003D12  
                                              postdec1 003FE5  
                                              postdec2 003FDD  
                                              postinc0 003FEE  
                                              postinc1 003FE6  
                                              postinc2 003FDE  
                                     ?_ADCC_Initialize 0001  
                                    UART1_Write@txData 0003  
                                   actualize_valor@spi 0003  
                   __end_of_actualizar_recibido_Eusart 1A4C  
                           _actualizar_recibido_Eusart 19B6  
                                          ?_cola_llena 0003  
                                          ?_cola_vacia 0003  
                                           _primerbyte 0020  
                      __end_of_UART1_UartInterrupt_ISR 1FEE  
                                            _TRISCbits 003FC4  
                             ??_recibir_periodo_Eusart 0007  
                                    enviar_Eusart@disp 000C  
                   _UART1_FramingErrorInterruptHandler 001D  
                                           main@colarx 0060  
                                      _SPI1_Initialize 1E94  
                                          ?_inicie_SPI 0003  
                       ?_UART1_SetUartInterruptHandler 0003  
                         __end_of_INTERRUPT_Initialize 1FF2  
                              __end_of_actualize_valor 1E94  
                                       __end_of___wmul 1DD4  
                               ?_OSCILLATOR_Initialize 0001  
                                 Tm_Procese_tiempo@ctp 0003  
                            ?_ADCC_GetConversionResult 0003  
                                  start_initialization 1DFA  
                                     selec_channel@spi 0003  
                              ??_UART1_SetErrorHandler 0005  
                                           ivt0x8_base 0008  
                                          ?_selec_gain 0003  
                                        inicie_SPI@spi 0003  
                                        _selec_channel 1F30  
                                        ??_inicie_cola 0005  
                               Tm_Inicie_periodico@ctp 000F  
                                     ??_PMD_Initialize 0003  
                                             ??___wmul 0007  
                                          __pbssCOMRAM 001F  
                                   _UART1_ErrorHandler 0015  
                                        __pcstackBANK0 0060  
                              __end_of_SPI1_Initialize 1EAE  
                                       ?_selec_channel 0003  
                               _PIN_MANAGER_Initialize 1878  
                                    ?_UART1_Initialize 0001  
                            fp__UART1_FramingError_ISR 0000  
                 __end_of_UART1_SetFramingErrorHandler 1FCE  
                         _UART1_SetFramingErrorHandler 1FC4  
                                   ??_UART1_Initialize 0005  
                                  __end_of_inicie_cola 1D52  
                                     ?_actualize_valor 0003  
                                     _uart1RxLastError 0021  
                                        ??_UART1_Write 0003  
                         ??_INTERRUPT_InterruptManager 0001  
                                          __smallconst 1000  
                                __end_of_enviar_Eusart 1F58  
                     _UART1_DefaultOverrunErrorHandler 000000  
                         ??_actualizar_recibido_Eusart 000B  
                                     ??_SPI1_WriteByte 0003  
                                  _Tm_Inicie_periodico 1C40  
                                             _T2CLKCON 003FAE  
                                          _U1ERRIRbits 003DF9  
                                 _INTERRUPT_Initialize 1FEE  
                              _TMR2_HasOverflowOccured 1D7E  
                                _ADCC_IsConversionDone 1EDC  
                           dato_recibido_completo@disp 0003  
                              ?_UART1_FramingError_ISR 0001  
                                       ___wmul@product 0007  
                UART1_SetErrorHandler@interruptHandler 0003  
                                             _LATBbits 003FBB  
                                             _LATEbits 003FBE  
                                            _selec_imp 1F08  
                                             _PIE3bits 003993  
                                         _SPI1CON0bits 003D14  
                                         selec_imp@spi 0003  
                                             _PIR2bits 0039A2  
                                             _SPI1BAUD 003D19  
                                             _PIR3bits 0039A3  
                                             _PIR4bits 0039A4  
                                             _SPI1CON0 003D14  
                                             _SPI1CON1 003D15  
                                             _SPI1CON2 003D16  
                                 ?_Tm_Inicie_periodico 000F  
                                            cola_add@c 0007  
                                            cola_get@c 0007  
                               _recibir_periodo_Eusart 1374  
                        ?_UART1_SetFramingErrorHandler 0003  
                          ?_actualizar_recibido_Eusart 0009  
                                         ??_cola_llena 0005  
                                           _ADCON0bits 003EF8  
                                           _ADCON1bits 003EF9  
                                         ??_cola_vacia 0005  
                                           _ADCON2bits 003EFA  
                                           _ADCON3bits 003EFB  
                                    ___wmul@multiplier 0003  
                                  __end_of_UART1_Write 1E7A  
                                     ?_SPI1_Initialize 0001  
                                          _INTCON0bits 003FD2  
                                ?_INTERRUPT_Initialize 0001  
                                      ??_selec_channel 0006  
                       __end_of_UART1_FramingError_ISR 1FE8  
                                    ??_TMR2_Initialize 0003  
                         __end_of_iniciar_struct_usart 1BE4  
                                           ?_selec_imp 0003  
                                         ??_inicie_SPI 0005  
                                           _ADSTATbits 003EFC  
                                   __end_of_cola_llena 1CD4  
                                          _inicie_cola 1D14  
                                   __end_of_cola_vacia 1D14  
                                             __Hrparam 0000  
                     __end_of_ADCC_GetConversionResult 1F08  
                                             __Lrparam 0000  
                                ??_Tm_Inicie_periodico 0013  
                              ??_OSCILLATOR_Initialize 0003  
                           Tm_Inicie_periodico@periodo 0011  
                             iniciar_struct_usart@disp 0003  
                                             __pivt0x8 0008  
                            ??_TMR2_HasOverflowOccured 0003  
                                   __end_of_inicie_SPI 19B6  
                                             __ptext10 1F9C  
                                             __ptext11 1F44  
                                             __ptext20 1D52  
                                             __ptext12 1F7C  
                                             __ptext21 1EC6  
                                             __ptext13 1712  
                                             __ptext30 1FB0  
                                             __ptext22 1564  
                                             __ptext14 1CD4  
                                             __ptext31 1FBA  
                                             __ptext23 1C40  
                                             __ptext15 17CA  
                                             __ptext40 1FD8  
                                             __ptext32 1FC4  
                                             __ptext24 1F58  
                                             __ptext16 1C92  
                                             _cola_add 17CA  
                                             __ptext41 1BE4  
                                             __ptext33 1FCE  
                                             __ptext25 1F6A  
                                             __ptext17 1E7A  
                                             __ptext42 1F8C  
                                             __ptext34 1E42  
                                             __ptext26 1D7E  
                                             __ptext18 19B6  
                                             __ptext43 1EDC  
                                             __ptext35 1E94  
                                             __ptext27 1DD4  
                                             __ptext19 1DAA  
                                             __ptext44 1EF2  
                                             __ptext36 1E1E  
                                             __ptext28 1A4C  
                                             __ptext45 1ADA  
                                             __ptext37 1878  
                                             __ptext29 1FA6  
                                             __ptext46 1FE8  
                                             __ptext38 1EAE  
                                             __ptext47 1FE0  
                                             __ptext39 1FEE  
                                             __ptext48 0000  
                                             _cola_get 1712  
                                           _U1CON0bits 003DF2  
                               ?_ADCC_IsConversionDone 0001  
                        __end_of_UART1_SetErrorHandler 1FD8  
                                         ??_selec_gain 0006  
                                             _envioSPI 163E  
                              _UART1_UartInterrupt_ISR 1FE8  
                           fp__UART1_UartInterrupt_ISR 0000  
                                 Tm_Baje_periodico@ctp 0003  
                            _UART1_OverrunErrorHandler 0017  
         UART1_SetOverrunErrorHandler@interruptHandler 0003  
                                             isa$xinst 000000  
                         __end_of_ADCC_StartConversion 1F9C  
                   __end_of_INTERRUPT_InterruptManager 1B62  
                           _INTERRUPT_InterruptManager 1ADA  
                                             main@cola 007C  
                                             main@disp 0091  
                                    _UART1_is_rx_ready 1EC6  
                                          _UART1_Write 1E60  
                                    _UART1_is_tx_ready 1D52  
                                   ?_UART1_is_rx_ready 0001  
                                   __end_of_selec_gain 1F30  
                       ??_UART1_SetFramingErrorHandler 0005  
                                   ?_UART1_is_tx_ready 0001  
                                           _FVRCONbits 003EC1  
                               ??_INTERRUPT_Initialize 0003  
                                 Tm_Hubo_periodico@ctp 0003  
                                  ??_UART1_is_rx_ready 0003  
                             ??_dato_recibido_completo 0005  
                                  ??_UART1_is_tx_ready 0003  
                                             intlevel2 0000  
                              ?_PIN_MANAGER_Initialize 0001  
                                         cola_add@dato 0009  
                                          ??_selec_imp 0006  
                                          _segundobyte 001F  
                                           _SPI1SDIPPS 003ADF  
                                           _SPI1SCKPPS 003ADE  
                            __end_of_UART1_is_rx_ready 1EDC  
         UART1_SetFramingErrorHandler@interruptHandler 0003  
                            __end_of_UART1_is_tx_ready 1D7E  
                             _ADCC_GetConversionResult 1EF2  
                                         cola_get@temp 000B  
                                       _FVR_Initialize 1FD8  
                                 _iniciar_struct_usart 1B62  
                       __end_of_PIN_MANAGER_Initialize 1920  
                                    ??_ADCC_Initialize 0003  
                                          cola_llena@c 0003  
                            ??_UART1_UartInterrupt_ISR 0001  
        __end_of_UART1_SetFramingErrorInterruptHandler 1FC4  
              ??_UART1_SetFramingErrorInterruptHandler 0005  
               ?_UART1_SetFramingErrorInterruptHandler 0003  
                _UART1_SetFramingErrorInterruptHandler 1FBA  
                                          cola_vacia@c 0003  
                                selec_gain@gananciaspi 0005  
                           __end_of_spi1_configuration 1006  
                              ?_recibir_periodo_Eusart 0004  
